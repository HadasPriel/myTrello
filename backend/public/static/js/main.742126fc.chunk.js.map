{"version":3,"sources":["assets/imgs/home sync /^/.*/.jpg$","assets/imgs/home/homeData.jpg","assets/imgs/home/homeData1.jpg","assets/imgs/home/homeNote.jpg","assets/imgs/home/homeTeam.jpg","cmps/HomeHeader.jsx","cmps/home/HomeHero.jsx","cmps/home/AboutMe.jsx","cmps/AppFooter.jsx","cmps/home/AboutTasx.jsx","pages/Home.jsx","services/httpService.js","services/socketService.js","services/userService.js","services/utilService.js","services/boardService.js","store/actions/boardActions.js","cmps/group/EditGroupTitle.jsx","cmps/cardEdit/CardLabelShowMin.jsx","store/actions/userActions.js","cmps/cardEdit/CardEditNav.jsx","cmps/cardEdit/CardLabelShow.jsx","cmps/cardEdit/TodoShow.jsx","cmps/cardEdit/TodoListShow.jsx","cmps/cardEdit/CardChecklistShow.jsx","cmps/cardEdit/CardDuedateShow.jsx","cmps/cardEdit/CardImgShow.jsx","cmps/cardEdit/CardMembersShow.jsx","cmps/cardEdit/ActivityTime.jsx","cmps/cardEdit/CardActivitiesShow.jsx","cmps/cardEdit/AddChecklistBar.jsx","cmps/cardEdit/AddCoverBar.jsx","cmps/cardEdit/AddDeutimeBar.jsx","services/cloudinaryService.js","cmps/Uploader.jsx","cmps/cardEdit/AddImgBar.jsx","cmps/cardEdit/AddMembersBar.jsx","cmps/cardEdit/DeleteCardBar.jsx","cmps/cardEdit/EditLabelBar.jsx","cmps/cardEdit/LabelPalette.jsx","cmps/cardEdit/DynamicNav.jsx","cmps/cardEdit/AddDescription.jsx","cmps/cardEdit/CardDescriptionShow.jsx","pages/CardEdit.jsx","cmps/card/ChecklistSign.jsx","cmps/cardEdit/CardDuedateShowMin.jsx","cmps/card/CardPreview.jsx","cmps/card/CardList.jsx","cmps/group/AddCard.jsx","cmps/group/RemoveList.jsx","cmps/group/EditGroupNav.jsx","cmps/group/GroupPreview.jsx","cmps/group/AddNewGroup.jsx","cmps/group/GroupList.jsx","cmps/boardMenu/EditBoardTitle.jsx","cmps/boardMenu/AboutBoard.jsx","cmps/boardMenu/ChangeBoardBackground.jsx","cmps/boardMenu/ActivityPreview.jsx","cmps/boardMenu/ActivityBoard.jsx","cmps/board/BoardSideMenu.jsx","cmps/AppHeader.jsx","cmps/dashboard/PieBoard.jsx","cmps/dashboard/BarBoard.jsx","cmps/dashboard/LineBoard.jsx","cmps/dashboard/BarLabels.jsx","cmps/dashboard/Dashboard.jsx","pages/Board.jsx","cmps/board/BoardPreview.jsx","cmps/board/BoardList.jsx","cmps/board/AddBoard.jsx","pages/Boards.jsx","pages/LoginSignup.jsx","App.jsx","serviceWorkerRegistration.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/reducers/index.js","store/store.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","HomeHeader","props","className","to","loggedInUser","style","backgroundImage","imgUrl","HomeHero","height","document","body","clientHeight","paddingTop","onClick","scrollToBottom","AboutMe","name","img","txt","email","facebook","linkedin","star","src","alt","skil","href","AppFooter","AboutTasx","title","flexDiraction","section","require","default","Home","connect","state","userModule","window","scrollTo","scrollHeight","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","location","assign","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","userService","login","logout","signup","getUsers","getById","userId","remove","update","getLoggedinUser","increaseScore","user","_id","_saveLocalUser","by","score","userCred","sessionStorage","clear","setItem","JSON","stringify","parse","getItem","utilService","delay","ms","Promise","setTimeout","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","possible","i","charAt","boardService","add","query","filterBy","queryParams","URLSearchParams","set","boardId","makeGroup","updateBoard","makeCard","cardTitle","description","comments","checklists","members","labels","createdAt","Date","now","dueDate","byMember","coverType","makeBoard","filterByCardTitle","makeActivity","board","updatedBoard","addedBoard","groupTitle","cards","card","getMiniUser","activity","loggedinUser","username","password","createdBy","boardTitle","bgUrl","color","accessibility","miniUser","newBoard","bgurl","groups","activities","unshift","filterRegex","RegExp","group","newGroup","filter","test","loadBoard","dispatch","type","boardToChange","msg","boardToUpdate","_EditGroupTitle","handleChange","ev","value","target","field","setState","onSubmit","preventDefault","updateGroup","selectedBoard","toggleEditMode","this","placeholder","onChange","autoComplete","Component","mapDispatchToProps","groupTitleToUpdate","groupId","groupToUpdateIdx","findIndex","EditGroupTitle","boardModule","CardLabelShowMin","label","loadUsers","users","CardEditNav","toggleNav","toggleShowingNav","_CardLabelShow","removeLable","labelId","cardToSave","labelsToSave","updateCard","CardLabelShow","_TodoShow","todo","isDone","checked","checklistIndex","checklist","checklistId","todoIndex","todos","removeTodo","TodoShow","TodoListShow","_CardChecklistShow","progress","removeChecklist","checklistsToSave","handleTaskChange","addTask","checklistToSave","find","then","todoId","todoToSave","getProgress","done","all","forEach","Checklist","round","prevProps","prevState","width","event","required","CardChecklistShow","CardDuedateShow","month","duedate","getMonth","day","substring","urgent","CardImgShow","CardMembersShow","isBig","member","userImgStyle","ActivityTime","timeToPresent","time","date","getDate","hour","getHours","getMinutes","dateToPresent","hourToPresent","_CardActivitiesShow","fullname","CardActivitiesShow","_AddChecklistBar","onAddChecklist","toggleChecklistBar","autoFocus","AddChecklistBar","_AddCoverBar","handleStyle","removeCover","toggleCoverBar","AddCoverBar","AddDeutimeBar","useState","startDate","setStartDate","toggleAddDeutime","selected","onSelect","addDeuDate","inline","cloudinaryService","uploadImg","cloudinaryCloudName","file","UPLOAD_URL","formData","FormData","append","fetch","json","Uploader","isUploading","onUploadImg","files","secure_url","addImg","uploadStyle","objectFit","htmlFor","accept","display","AddImgBar","toggleAddImg","_AddMembersBar","onAddMembers","currUser","newMembers","toggleAddMembers","list","alreadyMember","AddMembersBar","DeleteCardBar","deleteCard","onRemoveCard","cardId","err","toggleDeleteCard","EditLabelBar","boardToSave","currLabel","toggleEditLabel","LabelPalette","isEditLabelShow","labelToEdit","addLable","push","openEditLabel","toggleLabelPalette","alredyOnCard","DynamicNav","showingNav","closeNav","cmp","_AddDescription","onAddDescription","newDescription","toggleAddDescription","AddDescription","CardDescriptionShow","isDescriptionShowing","_CardEdit","loadCard","currCard","createActivity","miniCard","stopProg","stopPropagation","prevprops","match","toggleCardEdit","isLabels","isDuedate","isMember","coverShow","bgColor","isImg","CardEdit","ChecklistSign","CardDuedateShowMin","_CardPreview","isCardEtidShow","removeCard","cardBgc","cardCover","draggableId","String","index","direction","provided","draggableProps","dragHandleProps","ref","innerRef","updatedCardList","CardPreview","CardList","droppableId","droppableProps","_AddCard","addCard","toggleAddCardMode","onCancelAdd","newCard","AddCard","RemoveList","toggleDeleteBar","onRemoveGroup","_EditGroupNav","isOnAddCardMode","isDeleteBarShow","Fragment","EditGroupNav","_GroupPreview","isEditMode","isEditGroupNavShow","groupHeight","updatedGroups","toggleEditGroupNav","maxHeight","GroupPreview","_AddNewGroup","addGroup","toggleAddGroupMode","groupToAdd","AddNewGroup","GroupList","isOnAddGroupMode","onDragEnd","_EditBoardTitle","EditBoardTitle","_AboutBoard","toggleAboutBoard","AboutBoard","_ChangeBoardBackground","onChooseBackground","toggleNewBoard","toggleChangeBackground","background","ChangeBoardBackground","ActivityPreview","ActivityBoard","_BoardSideMenu","isAboutBoardShown","isChangeBackgroundShown","isBoardAnalysisShown","isDeleteBoardShown","toggleBoardAnalysis","toggleDeleteBoard","open","classname","toggleSideMenu","BoardSideMenu","_AppHeader","userImgUrl","toggleDashboard","AppHeader","PieBoard","membersTaskMap","reduce","membersMapAcc","count","datasets","values","backgroundColor","hoverBackgroundColor","fontColor","options","text","fontSize","legend","ticks","precision","scales","yAxes","beginAtZero","userCallback","xAxes","BarBoard","groupCardMap","cardsMapAcc","myData","LineBoard","groupTimeMap","timeMapAcc","cardsInGroupSum","diff","BarLabels","labelsTitle","labelsTotal","_Dashboard","cardSum","todosAndCardsSum","total","complited","membersSum","Dashboard","_Board","isBoardMenuShown","isDashboardShown","result","destination","source","onDragGroups","onDragCards","onChangeBoard","updateBoardFromSocket","startIndex","endIndex","groupToMove","splice","groupToMoveFromIdx","groupToMoveToIdx","cardToMove","params","backgroundPosition","backgroundSize","backgroundRepeat","changedBoard","Board","BoardPreview","boardStyle","BoardList","boards","boardsForDisplay","_AddBoard","createBoard","onLoadNewBoard","backgroundImageUrl","AddBoard","_Boards","isNewBoard","history","loadBoards","templatesBoards","Boards","_LoginSignup","loginCred","signupCred","loginHandleChange","signupHandleChange","doLogin","userCreds","doSignup","signupCreds","removeUser","signupSection","loginSection","LoginSignup","App","path","component","Boolean","hostname","initialState","localLoggedinUser","isLoading","rootReducer","combineReducers","systemModule","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.742126fc.chunk.js","sourcesContent":["var map = {\n\t\"./homeData.jpg\": 169,\n\t\"./homeData1.jpg\": 170,\n\t\"./homeNote.jpg\": 171,\n\t\"./homeTeam.jpg\": 172\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 168;","export default __webpack_public_path__ + \"static/media/homeData.2024cdd8.jpg\";","export default __webpack_public_path__ + \"static/media/homeData1.a7a1330f.jpg\";","export default __webpack_public_path__ + \"static/media/homeNote.f4c1b031.jpg\";","export default __webpack_public_path__ + \"static/media/homeTeam.3c100e2a.jpg\";","import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport function HomeHeader(props) {\r\n\r\n\r\n    return (\r\n        <header className=\"app-header flex space-between align-center\">\r\n            <nav>\r\n                <Link to=\"/\" className=\"header-home\"></Link>\r\n                <Link to=\"/board\" className=\"header-board\"> Boards </Link>\r\n            </nav>\r\n\r\n            <nav className=\"navbar-links\">\r\n                {!props.loggedInUser && <Link to=\"/login\" className=\"header-user\"> Login</Link>}\r\n                {props.loggedInUser && <Link to=\"/login\" className=\"user-img\" style={{ backgroundImage: `url(${props.loggedInUser.imgUrl})` }}> </Link>}\r\n\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\n","\r\nexport function HomeHero(props) {\r\n\r\n    return (\r\n        <section style={{ height: document.body.clientHeight - 32, paddingTop: document.body.clientHeight / 2.4 }} className=\"home-hero\">\r\n            <h1 className=\"app-name\">TASX</h1>\r\n            <h3>Manage your teamwork with the ease of your fingers</h3>\r\n            {/* <button>Get started!</button> */}\r\n            <button className=\"scroll-down\" onClick={props.scrollToBottom}></button>\r\n\r\n        </section>\r\n\r\n    )\r\n}","\r\n\r\nexport function AboutMe() {\r\n\r\n    const us = [\r\n        {\r\n            name: 'Hadas Priel',\r\n            img: 'https://res.cloudinary.com/ddgevj2yp/image/upload/v1610985212/T01C3G80Y9K-U01DZHFHVDW-dbfd8d80a8ed-512_zadnxc.jpg',\r\n            txt: ['Full Stack Web Developer', 'B.A. Psychology and Education, Ben Gurion University', 'Management experience'],\r\n            email: 'hadass91@gmail.com',\r\n            facebook: 'https://www.facebook.com/hadas.eliav',\r\n            linkedin: 'https://www.linkedin.com/in/hadas-eliav-priel-aa6705a2'\r\n        },\r\n        {\r\n            name: 'Sandra Zufman',\r\n            img: 'https://res.cloudinary.com/ddgevj2yp/image/upload/v1610985272/T01C3G80Y9K-U01C55ZS84D-198fe46a1d2e-512_foiwqp.jpg',\r\n            txt: ['Full Stack Web Developer.', 'B.A. Administration and Management, Accounting,', 'The College of Management and Academic Studies', 'Communicative and a team player'],\r\n            email: 's.zufman@outlook.com',\r\n            facebook: 'https://www.facebook.com/zufman',\r\n            linkedin: 'https://www.linkedin.com/in/sandra-zufman-3784462b'\r\n        }\r\n    ]\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"about-me\">\r\n            <div className=\"main-container\">\r\n                <header>\r\n                    <h2>Meet the team</h2>\r\n                    <p>We are MisterBit© Coding Academy alumni that came together and assembled TASX as our Full-Stack Developer course's final hand-in.</p>\r\n                </header>\r\n                <ul className=\"cv-list flex justify-center\" >\r\n                    {us.map(star =>\r\n                        <li className=\"cv flex col align-center\" key={star.name}>\r\n                            <img className=\"user-img\" src={star.img} alt={star.img} />\r\n                            <div className=\"txt\">\r\n                                <h3>{star.name}</h3>\r\n                                {/* <a className=\"mail-address\" href={`mailto:${star.email}`} >{star.email}</a> */}\r\n                                {star.txt.map(skil =>\r\n                                    <p className=\"skil\" key={skil}>{skil} </p>\r\n                                )}\r\n                                {/* <p>Full Stack Web Developer, passionate about solving challenges, with experience in writing single-page-applications using the latest WEB technologies such as Node.js, Vue.js, Vue, React, Redux, Angular and MongoDb.</p> */}\r\n                                <nav className=\"social-media\">\r\n                                    <a href={star.linkedin} className=\"linkedin\" ></a>\r\n                                    <a href={star.facebook} className=\"facebook\"></a>\r\n                                    <a href={`mailto:${star.email}`} className=\"email\"></a>\r\n                                </nav>\r\n                            </div>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","\r\nexport function AppFooter() {\r\n\r\n    return (\r\n        <footer className=\"app-footer\">\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\n","import { Link } from \"react-router-dom\"\r\n\r\nexport function AboutTasx() {\r\n\r\n    const sections = [\r\n        {\r\n            img: 'homeNote',\r\n            title: 'Hit your deadlines',\r\n            txt: 'Collaborate, manage projects, and reach new productivity peaks. From high rises to the home office, the way your team works is unique - accomplish it all with TASX.',\r\n            flexDiraction: ''\r\n        },\r\n        {\r\n            img: 'homeTeam',\r\n            title: 'Keep everyone looped in',\r\n            txt: 'Start with a TASX board, lists, and cards. Customize and expand with more features as your teamwork grows. Manage projects, organize tasks, and build team spirit - all in one place.',\r\n            flexDiraction: 'reverse'\r\n        },\r\n        {\r\n            img: 'homeData1',\r\n            title: 'Stay updated on project\\'s progress',\r\n            txt: 'Quick access to data about the progress of the tasks and team members in your projects, all shown in formatted graphs.',\r\n            flexDiraction: ''\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <section className=\"about-tasx main-container\">\r\n            <ul className=\"\" >\r\n                {sections.map(section =>\r\n                    <li className={`about-unit flex space-between ${section.flexDiraction}`} key={section.img}>\r\n                        <div className=\"txt\">\r\n                            <h3>{section.title}</h3>\r\n                            <p className=\"\">{section.txt}</p>\r\n                        </div>\r\n                        <img className={` ${section.flexDiraction}`} src={require(`../../assets/imgs/home/${section.img}.jpg`).default} alt=\"\" />\r\n                    </li>\r\n                )}\r\n                <li className={`cta about-unit flex justify-center align-center space-between`}>\r\n                    <div >\r\n                        <h3>What are you wating for?</h3>\r\n                        <p>Build bords or use our templates to manage your projects</p>\r\n                    </div>\r\n                    <Link to=\"/board\">\r\n                        <button className=\"start-btn\">start here</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\nimport { HomeHero } from '../cmps/home/HomeHero.jsx';\r\nimport { AboutMe } from '../cmps/home/AboutMe.jsx';\r\nimport { AppFooter } from '../cmps/AppFooter.jsx';\r\nimport { AboutTasx } from '../cmps/home/AboutTasx.jsx';\r\n\r\n\r\nfunction _Home({ loggedInUser }) {\r\n\r\n  const scrollToBottom = () => {\r\n    window.scrollTo(0, document.body.scrollHeight)\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <HomeHeader loggedInUser={loggedInUser} />\r\n      <HomeHero scrollToBottom={scrollToBottom} />\r\n      <AboutTasx />\r\n      <AboutMe />\r\n      <AppFooter />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\n\r\n\r\nexport const Home = connect(mapStateToProps)(_Home)\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n// var socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb = null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n","// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nimport { socketService } from './socketService'\r\n\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n    increaseScore\r\n}\r\n\r\n// window.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function increaseScore(by = SCORE_FOR_REVIEW) {\r\n    const user = getLoggedinUser()\r\n    user.score = user.score + by || by\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _handleLogin(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    socketService.emit('set-user-socket', user._id);\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    // socketService.emit('unset-user-socket');\r\n\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    makeId\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}","\r\n\r\nimport { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport { userService } from './userService'\r\nimport { utilService } from './utilService'\r\n\r\nexport const boardService = {\r\n  add,\r\n  query,\r\n  remove,\r\n  getById,\r\n  makeGroup,\r\n  updateBoard,\r\n  makeCard,\r\n  makeBoard,\r\n  filterByCardTitle,\r\n  makeActivity\r\n}\r\n\r\nfunction query(filterBy = null) {\r\n  let queryParams = new URLSearchParams()\r\n  queryParams.set('userId', filterBy.userId)\r\n  return httpService.get(`board?${queryParams}`)\r\n  // return storageService.query('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n  return httpService.get(`board/${boardId}`)\r\n}\r\n\r\nfunction remove(boardId) {\r\n  return httpService.delete(`board/${boardId}`)\r\n  // return storageService.delete('board', boardId)\r\n\r\n}\r\n\r\nasync function updateBoard(board) {\r\n  const user = userService.getLoggedinUser()\r\n  const updatedBoard = await httpService.put(`board/${board._id}`, { board, userId: user?._id || null })\r\n  return updatedBoard\r\n}\r\n\r\nasync function add(board) {\r\n\r\n  const addedBoard = await httpService.post(`board`, board)\r\n\r\n  // board.byUser = userService.getLoggedinUser()\r\n  // board.aboutUser = await userService.getById(board.aboutUserId)\r\n  // const addedBoard = storageService.post('board', board)\r\n\r\n  return addedBoard\r\n}\r\n\r\n\r\nfunction makeGroup(groupTitle) {\r\n  let group = {\r\n    id: 'g' + utilService.makeId(),\r\n    title: groupTitle,\r\n    cards: [{\r\n      id: 'c' + utilService.makeId(),\r\n      title: 'default-empty',\r\n      description: '',\r\n      comments: [],\r\n      checklists: [],\r\n      members: [],\r\n      labels: [],\r\n      createdAt: Date.now(),\r\n      dueDate: '',\r\n      byMember: {},\r\n      style: { coverType: 'top' }\r\n    }]\r\n\r\n  }\r\n\r\n  return group\r\n\r\n}\r\n\r\n\r\nfunction makeCard(cardTitle) {\r\n  let card = {\r\n    id: 'c' + utilService.makeId(),\r\n    title: cardTitle,\r\n    description: '',\r\n    comments: [],\r\n    checklists: [],\r\n    members: [],\r\n    labels: [],\r\n    createdAt: Date.now(),\r\n    dueDate: '',\r\n    byMember: {},\r\n    style: { coverType: 'top' }\r\n\r\n  }\r\n  return card\r\n\r\n}\r\n\r\nasync function makeActivity(txt, card = {}) {\r\n  let activity = {\r\n    id: 'a' + utilService.makeId(),\r\n    createdAt: Date.now(),\r\n    txt: txt,\r\n    byMember: await getMiniUser(),\r\n    card: card\r\n  }\r\n  return activity\r\n}\r\n\r\nasync function getMiniUser() {\r\n  let loggedinUser = userService.getLoggedinUser()\r\n  let createdBy = (loggedinUser) ? loggedinUser : await userService.login({ username: 'Guest', password: '123' })\r\n  return createdBy\r\n}\r\n\r\nasync function makeBoard(boardTitle, bgUrl) {\r\n\r\n  const colors = ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF']\r\n  const labels = colors.map(color => { return { id: color, title: '', accessibility: '' } })\r\n\r\n  let miniUser = await getMiniUser()\r\n  const newBoard = {\r\n    title: boardTitle,\r\n    createdAt: Date.now(),\r\n    createdBy: miniUser,\r\n    style: {\r\n      bgurl: bgUrl\r\n    },\r\n    members: [miniUser],\r\n    groups: [makeGroup('New List')],\r\n    activities: [],\r\n\r\n    labels\r\n  }\r\n\r\n  const activity = await makeActivity('Created Board')\r\n\r\n  newBoard.activities.unshift(activity)\r\n\r\n  const addedBoard = await httpService.post(`board`, newBoard);\r\n  return addedBoard\r\n\r\n}\r\n\r\n\r\nasync function filterByCardTitle(board, filterBy) {\r\n  console.log('Board got to board service', board)\r\n  console.log('filter got to board service', filterBy)\r\n  if (filterBy.title) {\r\n    const filterRegex = new RegExp(filterBy.title, 'i')\r\n    board.groups = board.groups.map(group => {\r\n      const newGroup = { ...group }\r\n      newGroup.cards = newGroup.cards.filter(card => filterRegex.test(card.title))\r\n      return newGroup\r\n    })\r\n  }\r\n\r\n  return board;\r\n\r\n}","import { boardService } from '../../services/boardService'\r\nimport { socketService } from '../../services/socketService'\r\n\r\nexport function loadBoards(filterBy = {}) {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query(filterBy)\r\n      if (filterBy.userId === '6004748cf9fd65ff47dc81e4') {\r\n        dispatch({ type: 'SET_TEMPLATES', boards })\r\n      }\r\n      else dispatch({ type: 'SET_BOARDS', boards })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoards', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadBoard(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function createBoard(boardTitle, backgroundImageUrl) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.makeBoard(boardTitle, backgroundImageUrl)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      return board\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function addGroup(title, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let groupToAdd = boardService.makeGroup(title)\r\n      let activity = await boardService.makeActivity(`created new list ${groupToAdd.title}`)\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      boardToUpdate.groups.push(groupToAdd)\r\n\r\n      boardToUpdate.activities.unshift(activity)\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in addGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateGroup(groupTitleToUpdate, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[groupToUpdateIdx].title = groupTitleToUpdate\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function addCard(title, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n      let newCard = boardService.makeCard(title)\r\n      let activity = await boardService.makeActivity(`created new card ${newCard.title}`)\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[groupToUpdateIdx].cards.push(newCard)\r\n      boardToUpdate.activities.unshift(activity)\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    } catch (err) {\r\n      console.log('BoardActions: err in addCard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function removeCard(cardId, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n\r\n      const updatedCardList = boardToUpdate.groups[groupToUpdateIdx].cards.filter(card => card.id !== cardId)\r\n\r\n      boardToUpdate.groups[groupToUpdateIdx].cards = updatedCardList\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in removeGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateBoard(boardToChange, msg = '', card = {}) {\r\n  return async dispatch => {\r\n    try {\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      if (msg) {\r\n        let activity = await boardService.makeActivity(msg, card)\r\n        boardToUpdate.activities.unshift(activity)\r\n      }\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroupOrder', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function filterByCardText(boardId, filterBy) {\r\n  return async dispatch => {\r\n    try {\r\n      const boardToFilter = await boardService.getById(boardId)\r\n\r\n      const board = await boardService.filterByCardTitle(boardToFilter, filterBy)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      dispatch({ type: 'SET_FILTER', filterBy })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroupOrder', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function updateBoardFromSocket(changedBoard) {\r\n\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let board = JSON.parse(JSON.stringify(changedBoard))\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateBoardAfterSocket', err)\r\n    }\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateGroup } from '../../store/actions/boardActions.js'\r\n\r\nexport class _EditGroupTitle extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.group\r\n        this.setState({ title })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.updateGroup(this.state.title, this.props.group.id, this.props.selectedBoard)\r\n        this.props.toggleEditMode()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-group-title\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input className=\"new-title-input\" placeholder=\"Group Title\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-btn\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateGroup,\r\n\r\n};\r\n\r\nexport const EditGroupTitle = connect(mapStateToProps, mapDispatchToProps)(_EditGroupTitle);","import React from 'react'\r\n\r\n\r\nexport function CardLabelShowMin(props) {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ul className=\"card-label-show\">\r\n                {props.labels.map(label => {\r\n                    return (\r\n                        <li\r\n                            key={label.id} className={`label ${label.id}`} >\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import { userService } from '../../services/userService'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport function CardEditNav(props) {\r\n\r\n    const toggleNav = (ev) => {\r\n        props.toggleShowingNav(ev.target.name)\r\n    }\r\n\r\n\r\n    return (\r\n        <nav className=\"card-edit-nav flex column\">\r\n            <h3>Add to card</h3>\r\n            <button className=\"label-fa\" name=\"labelPalette\" onClick={toggleNav}> Labels</button>\r\n            <button className=\"checklist-fa\" name=\"checklist\" onClick={toggleNav}> Checklist</button>\r\n            <button className=\"cover-fa\" name=\"cover\" onClick={toggleNav}> Cover</button>\r\n            <button className=\"duetime-fa\" name=\"dueTime\" onClick={toggleNav}> Due Date</button>\r\n            <button className=\"duetime-fa\" name=\"members\" onClick={toggleNav}> Members</button>\r\n            <button className=\"delete-fa\" name=\"delete\" onClick={toggleNav}> Delete</button>\r\n            <button className=\"img-fa\" name=\"img\" onClick={toggleNav}> Image</button>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardLabelShow extends Component {\r\n\r\n    removeLable = (labelId) => {\r\n        const cardToSave = { ...this.props.card }\r\n        const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n        cardToSave.labels = labelsToSave\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Labels </h5>\r\n                <ul className=\"card-label-show\">\r\n                    {this.props.labels.map(label => {\r\n                        return (\r\n                            <li key={label.id} className={`label-edit ${label.id} flex align-center justify-center `} >\r\n                                <p className=\"label-title\">{label.title}</p>\r\n                                {/* <button className=\"hover-nav\" onClick={() => { this.removeLable(label.id) }}>X</button> */}\r\n                            </li>\r\n\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardLabelShow = connect(mapStateToProps, mapDispatchToProps)(_CardLabelShow)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _TodoShow extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ todo: this.props.todo })\r\n    }\r\n\r\n\r\n    handleChange = async (ev) => {\r\n        const todo = { ...this.state.todo }\r\n        todo.isDone = ev.target.checked\r\n        await this.setState({ todo })\r\n\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistIndex = cardToSave.checklists.findIndex(checklist => checklist.id === this.props.checklistId)\r\n        const todoIndex = cardToSave.checklists[checklistIndex].todos.findIndex(todo => todo.id === this.state.todo.id)\r\n        cardToSave.checklists[checklistIndex].todos[todoIndex] = this.state.todo\r\n        try {\r\n            await this.props.updateCard(cardToSave)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { todo } = this.state\r\n        if (!todo) return <div>Loading...</div>\r\n        return (\r\n            <li className=\"todo-show flex space-between align-center\">\r\n                <span className=\"content\">\r\n                    <input type=\"checkbox\" name=\"isDone\" value={todo.isDone} checked={todo.isDone} onChange={this.handleChange} ></input>\r\n                    <h3 className={`${todo.isDone}`} >{todo.txt}</h3>\r\n                </span>\r\n                <span className=\"nav\">\r\n                    <button className=\" delete\" onClick={() => { this.props.removeTodo(todo.id, this.props.checklistId) }} ></button>\r\n                </span>\r\n            </li>)\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const TodoShow = connect(mapStateToProps, mapDispatchToProps)(_TodoShow)\r\n","import React from 'react'\r\nimport { TodoShow } from './TodoShow'\r\n\r\nexport function TodoListShow(props) {\r\n\r\n\r\n    const { checklist, card, updateCard, removeTodo } = props\r\n    return (\r\n        <ul className=\"show\">\r\n            {checklist.todos.map(todo => <TodoShow key={todo.id} todo={todo}\r\n                card={card} checklistId={checklist.id}\r\n                updateCard={updateCard} removeTodo={removeTodo} />)}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TodoListShow } from './TodoListShow'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nclass _CardChecklistShow extends Component {\r\n    state = {\r\n        todo: { txt: '', isDone: false },\r\n        progress: 0\r\n    }\r\n    componentDidMount() {\r\n        this.getProgress()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps !== this.props) {\r\n            this.getProgress()\r\n        }\r\n    }\r\n\r\n\r\n    removeChecklist = (checklistId) => {\r\n        // const labelsToSave = this.props.labels.filter(label => label.id !== labelId)\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistsToSave = cardToSave.checklists.filter(checklist => checklist.id !== checklistId)\r\n\r\n        cardToSave.checklists = checklistsToSave\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    handleTaskChange = (ev) => {\r\n        const todo = { ...this.state.todo }\r\n        if (ev.target.name === 'isDone') todo.isDone = ev.target.checked\r\n        else todo[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ todo })\r\n    }\r\n\r\n    addTask = (ev, checklistId) => {\r\n        ev.preventDefault()\r\n\r\n        const todo = { ...this.state.todo, id: utilService.makeId() }\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistToSave = cardToSave.checklists.find(checklist => checklist.id === checklistId)\r\n        checklistToSave.todos = (checklistToSave.todos) ? [...checklistToSave.todos, todo] : [todo]\r\n        const checklistsToSave = cardToSave.checklists.map(checklist => {\r\n            if (checklist.id === checklistId) return checklistToSave\r\n            else return checklist\r\n        })\r\n        cardToSave.checklists = checklistsToSave\r\n\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave)\r\n            .then(this.setState({ todo: { txt: '', isDone: false } }))\r\n    }\r\n\r\n\r\n    removeTodo = (todoId, checklistId) => {\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistIndex = cardToSave.checklists.findIndex(checklist => checklist.id === checklistId)\r\n        const todoToSave = cardToSave.checklists[checklistIndex].todos.filter(todo => todo.id !== todoId)\r\n        cardToSave.checklists[checklistIndex].todos = todoToSave\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    getProgress = () => {\r\n        let done = 0\r\n        let all = 0\r\n        this.props.checklists.forEach(Checklist => {\r\n            Checklist.todos.forEach(todo => {\r\n                if (todo.isDone === true) done++\r\n                all++\r\n            })\r\n        })\r\n        const progress = Math.round(done / all * 100)\r\n        this.setState({ progress })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { checklists } = this.props\r\n        if (!checklists || !checklists.length) return <div></div>\r\n        const { todo, progress } = this.state\r\n        const done = (progress === 100) ? 'done' : ''\r\n        return (\r\n            <ul className=\"card-checklist-show card-show \">\r\n                {/* <progress value={progress.done} max={progress.all}> </progress> */}\r\n                <div className=\"show flex align-center\">\r\n                    <span>{`${progress}%`}</span>\r\n                    <div className=\"progress-wraper\"><div className={`progress-inner ${done}`} style={{ width: `${progress}%` }}></div></div>\r\n                </div>\r\n                {checklists.map(checklist => {\r\n                    return (\r\n                        <li key={checklist.id} className=\"checklist-wraper\" >\r\n                            <header className=\"flex space-between\">\r\n                                <h4 className=\"checklist-title\" > {checklist.title}</h4>\r\n                                <button className=\"edit-btn\" onClick={() => { this.removeChecklist(checklist.id) }}>Delete</button>\r\n                            </header>\r\n                            <TodoListShow checklist={checklist} card={this.props.card} updateCard={this.props.updateCard}\r\n                                removeTodo={this.removeTodo} />\r\n                            <form onSubmit={(event) => { this.addTask(event, checklist.id) }}>\r\n                                <input type=\"text\" name=\"txt\" value={todo.txt} onChange={this.handleTaskChange}\r\n                                    placeholder=\"Add an item\" autoComplete=\"off\" required></input>\r\n                                <button className=\"add-btn\">Add</button>\r\n                                {/* <button className=\"add-btn\" onClick>X</button> */}\r\n                            </form>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardChecklistShow = connect(mapStateToProps, mapDispatchToProps)(_CardChecklistShow)\r\n","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardDuedateShow(props) {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    const { card } = props\r\n    const m = new Date(card.duedate).getMonth() + 1\r\n    let month = ''\r\n    switch (m) {\r\n        case 1: month = 'Jan'; break;\r\n        case 2: month = 'Feb'; break;\r\n        case 3: month = 'Mar'; break;\r\n        case 4: month = 'Apr'; break;\r\n        case 5: month = 'May'; break;\r\n        case 6: month = 'Jun'; break;\r\n        case 7: month = 'Jul'; break;\r\n        case 8: month = 'Aug'; break;\r\n        case 9: month = 'Sep'; break;\r\n        case 10: month = 'Oct'; break;\r\n        case 11: month = 'Nov'; break;\r\n        case 12: month = 'Dec'; break;\r\n        default: break;\r\n    }\r\n    const day = card.duedate.substring(8, 10)\r\n    const remainingTime = (new Date(card.duedate) - Date.now())\r\n    const urgent = (remainingTime < 1000 * 60 * 60 * 24) ? 'urgent' : ''\r\n\r\n\r\n    return (\r\n        <div className=\"duedate\">\r\n            <h5>Due Date </h5>\r\n            <p className={`duetime-fa ${urgent} `}>{` ${month} ${day}`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport function CardImgShow(props) {\r\n    const img = props.card.img\r\n\r\n    return (\r\n        <div className=\"card-img\">\r\n            <span className=\"card-ow\">\r\n                <img className=\"show\" src={img} alt=\"\" />\r\n\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport function CardMembersShow(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"members\">\r\n            {props.isBig && <h5>Members </h5>}\r\n            <ul className=\"card-member-show flex flex-end\">\r\n\r\n                {props.members.map(member => {\r\n                    let userImgStyle = {\r\n                        backgroundImage: `url(${member.imgUrl})`\r\n                    }\r\n                    return (\r\n                        <li key={member._id} style={userImgStyle} className='user-img' >\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","\r\n\r\nexport function ActivityTime({ time }) {\r\n    let timeToPresent\r\n    const a = new Date(time)\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    if (min < 10) min = '0' + min\r\n    if (hour < 10) hour = '0' + hour\r\n    var dateToPresent = month + ' ' + date\r\n    var hourToPresent = ' at ' + hour + ':' + min\r\n\r\n\r\n    switch (Date.now() - time) {\r\n        case Date.now() - time < 1000 * 60:\r\n            timeToPresent = \"Just now\";\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 2:\r\n            timeToPresent = \"a minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 3:\r\n            timeToPresent = \"two minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 4:\r\n            timeToPresent = \"three minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 5:\r\n            timeToPresent = \"four minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 6:\r\n            timeToPresent = \"about five minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 31:\r\n            timeToPresent = \"half an hour ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 61:\r\n            timeToPresent = \"an hour ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 60 * 24:\r\n            timeToPresent = \"an few houers ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 60 * 60 * 48:\r\n            timeToPresent = \"an day ago\" + hourToPresent\r\n            break;\r\n\r\n        default:\r\n            timeToPresent = dateToPresent + hourToPresent\r\n\r\n    }\r\n\r\n    return (\r\n        <small className=\"activity-time\">{timeToPresent}</small>\r\n    )\r\n\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ActivityTime } from './ActivityTime'\r\n\r\nclass _CardActivitiesShow extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section>\r\n                <h4 className=\"activity-sign\">Activity</h4>\r\n                <ul className=\"card-activities-show card-show show\">\r\n                    {this.props.activities.map(activity => {\r\n                        if (activity.card.id === this.props.card.id) return (\r\n                            <li key={activity.id} className=\"flex align-center\" >\r\n                                <div className=\"user-img inline-block\" style={{ backgroundImage: `url(${activity.byMember.imgUrl})` }}></div>\r\n                                <div className=\"txt\">\r\n                                    <p><span>{activity.byMember.fullname} </span> {` ${activity.txt} to this card`}</p>\r\n                                    <ActivityTime time={activity.createdAt} />\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                        else return ''\r\n                    })}\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardActivitiesShow = connect(mapStateToProps, mapDispatchToProps)(_CardActivitiesShow)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddChecklistBar extends Component {\r\n    state = {\r\n        checklist: { title: '', todos: [] }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const checklist = { ...this.state.checklist }\r\n        checklist[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ checklist })\r\n    }\r\n\r\n    onAddChecklist = (ev) => {\r\n        ev.preventDefault()\r\n        const checklist = { id: utilService.makeId(), ...this.state.checklist }\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.checklists = (cardToSave.checklists) ? [...cardToSave.checklists, checklist] : [checklist]\r\n        // console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave, 'added checklist')\r\n        this.setState({ checklist: { title: '', todos: [] } })\r\n        this.props.toggleChecklistBar()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"edit-bar\" onSubmit={this.onAddChecklist}>\r\n                <header className=\"seconde\">\r\n                    <h3>Add Checklist</h3>\r\n                    <button onClick={this.props.toggleChecklistBar}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <label>Title\r\n                    <input type=\"text\" name=\"title\" value={this.state.checklist.title} placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange} autoComplete=\"off\" required autoFocus ></input>\r\n                    </label>\r\n                    <button className=\"add-btn\">Add</button>\r\n                </main>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddChecklistBar = connect(mapStateToProps, mapDispatchToProps)(_AddChecklistBar)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddCoverBar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    handleStyle = async (ev) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.style = (cardToSave.style) ? { ...cardToSave.style, [ev.target.name]: ev.target.value } : { [ev.target.name]: ev.target.value }\r\n        await this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    removeCover = async (ev) => {\r\n        ev.preventDefault()\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.style = { coverType: 'top' }\r\n        await this.props.updateCard(cardToSave)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"add-cover-bar edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>cover</h3>\r\n                    <button onClick={this.props.toggleCoverBar}>x</button>\r\n                </header>\r\n                <button onClick={this.removeCover} className=\"edit-btn remove\">Remove Cover </button>\r\n                <h5>size</h5>\r\n                <main>\r\n                    <label className=\"inline-block\">\r\n                        <div className=\"full demo window\">\r\n                            <div className=\"demo header\"></div>\r\n                            <div className=\"demo content\">\r\n                                <div className=\"demo p1\"></div>\r\n                                <div className=\"demo p2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"radio\" name=\"coverType\" value=\"full\" onClick={this.handleStyle} ></input>\r\n                    </label>\r\n                    <label className=\"inline-block\" >\r\n                        <div className=\"top demo window\">\r\n                            <div className=\"demo header\"></div>\r\n                            <div className=\"demo content\">\r\n                                <div className=\"demo p1\"></div>\r\n                                <div className=\"demo p2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"radio\" name=\"coverType\" value=\"top\" onClick={this.handleStyle}></input>\r\n                    </label>\r\n                </main>\r\n                <h5>colors</h5>\r\n                <main>\r\n                    <nav className=\"colors\">\r\n                        <label className=\"color #7bc86c\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#7bc86c\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #f5dd29\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#f5dd29\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ffaf3f\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ffaf3f\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ef7564\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ef7564\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #cd8de5\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#cd8de5\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #5ba4cf\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#5ba4cf\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #29cce5\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#29cce5\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #6deca9\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#6deca9\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ff8ed4\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ff8ed4\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #172b4d\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#172b4d\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                    </nav>\r\n                </main>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddCoverBar = connect(mapStateToProps, mapDispatchToProps)(_AddCoverBar)\r\n","import React, { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddDeutimeBar(props) {\r\n\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Due Date</h3>\r\n                <button onClick={props.toggleAddDeutime}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                />\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","export const cloudinaryService = {\r\n  uploadImg\r\n}\r\n\r\nvar cloudinaryCloudName = \"dtg8d5gnc\"\r\n\r\nasync function uploadImg(file) {\r\n  // const CLOUD_NAME = \r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${cloudinaryCloudName}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file)\r\n  formData.append('upload_preset', 'mkdsw2hg');\r\n  try {\r\n    const res = await fetch(UPLOAD_URL, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    const data = await res.json()\r\n    return data\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/cloudinaryService'\r\n\r\nexport class Uploader extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 300,\r\n    width: 300,\r\n    isUploading: false\r\n  }\r\n  onUploadImg = async ev => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev.target.files[0])\r\n    this.setState({ imgUrl: secure_url, isUploading: false, height, width })\r\n    this.props.addImg(secure_url)\r\n    // this.props.onFinishUpload(secure_url)\r\n  }\r\n  render() {\r\n    // const { imgUrl, isUploading, height, width } = this.state\r\n    const { imgUrl, isUploading } = this.state\r\n    const uploadStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n      objectFit: 'cover'\r\n    }\r\n    return (\r\n      <div className=\"uploader flex align-center justify-center\"\r\n        style={uploadStyle}>\r\n\r\n        <label htmlFor=\"imageUploader\">\r\n          {isUploading ? 'Uploading....' : 'Upload Image'}\r\n        </label>\r\n        <input onChange={this.onUploadImg}\r\n          type=\"file\" accept=\"image/*\" id=\"imageUploader\" style={{ display: \"none\" }} />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { Uploader } from '../Uploader'\r\n// import { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddImgBar(props) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Upload image</h3>\r\n                <button onClick={props.toggleAddImg}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <Uploader addImg={props.addImg} />\r\n                {/* <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                /> */}\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddMembersBar extends Component {\r\n    state = {\r\n        member: { fullname: '' }\r\n    }\r\n\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const member = { ...this.state.member }\r\n        member[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ member })\r\n    }\r\n\r\n    onAddMembers = (user) => {\r\n        const { card } = this.props\r\n        const cardToSave = { ...card }\r\n        const userToRemove = card.members.find(currUser => currUser._id === user._id)\r\n        if (userToRemove) {\r\n            const newMembers = card.members.filter(currUser => currUser._id !== user._id)\r\n            cardToSave.members = newMembers\r\n            this.setState({ member: { fullname: '' } })\r\n\r\n        } else {\r\n            const miniUser = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n            cardToSave.members = (cardToSave.members) ? [...cardToSave.members, miniUser] : [miniUser]\r\n        }\r\n        this.props.updateCard(cardToSave, `added ${this.state.member.fullname}`)\r\n        this.setState({ member: { fullname: '' } })\r\n    }\r\n\r\n    render() {\r\n        const { toggleAddMembers, users, card } = this.props\r\n\r\n        return (\r\n\r\n            <div className=\"add-members-bar edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Add Members</h3>\r\n                    <button onClick={toggleAddMembers}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <label>Members\r\n                    <input list=\"members\" name=\"fullname\" value={this.state.member.fullname}\r\n                            onChange={this.handleChange} autoFocus autoComplete=\"off\" ></input>\r\n                    </label>\r\n                    <ul>\r\n                        {users.map(user => {\r\n                            const alreadyMember = (card.members?.find(currUser => currUser.fullname === user.fullname)) ? 'alreadyMember' : ''\r\n                            return (\r\n                                <li className={alreadyMember} key={user._id} value={user.fullname} onClick={() => { this.onAddMembers(user) }}>\r\n                                    <div className=\"member-item\">\r\n                                        <div className=\"user-img\" style={{ backgroundImage: `url(${user.imgUrl})` }}></div>\r\n                                        {user.fullname}\r\n                                    </div>\r\n                                </li>)\r\n                        })}\r\n                    </ul>\r\n                    {/* <datalist id=\"members\">\r\n                        {users.map(user => {\r\n                            const alreadyMember = (card.members?.find(currUser => currUser.fullname === user.fullname)) ? 'alreadyMember' : ''\r\n                            return <option className={alreadyMember} key={user._id} value={user.fullname}> </option>\r\n                        })}\r\n                    </datalist> */}\r\n                    {/* <button className=\"add-btn\">Add</button> */}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AddMembersBar = connect(mapStateToProps, mapDispatchToProps)(_AddMembersBar)\r\n","import React from 'react'\r\n\r\nexport function DeleteCardBar(props) {\r\n\r\n    const deleteCard = async () => {\r\n        try {\r\n            props.onRemoveCard(props.cardId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"edit-bar\" onSubmit={deleteCard}>\r\n            <header className=\"seconde\">\r\n                <h3> Delete card?</h3>\r\n                <button type=\"button\" onClick={props.toggleDeleteCard}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <p>All actions will be removed from the activity feed and you won’t be able to re-open the card. There is no undo.</p>\r\n                <button className=\"add-btn red\">Delete</button>\r\n            </main>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n","\r\n\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport class EditLabelBar extends Component {\r\n    state = {\r\n        label: { title: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const label = { ...this.props.label }\r\n        this.setState({ label })\r\n    }\r\n\r\n    handleChange = async (ev) => {\r\n        const label = { ...this.state.label }\r\n        label[ev.target.name] = ev.target.value\r\n\r\n        await this.setState({ label })\r\n\r\n        const boardToSave = { ...this.props.board }\r\n        boardToSave.labels = boardToSave.labels.map(currLabel => {\r\n            if (currLabel.id !== label.id) return currLabel\r\n            else return label\r\n        })\r\n\r\n        try {\r\n            await this.props.updateBoard(boardToSave)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"label-palette edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Edit Label</h3>\r\n                    <button onClick={this.props.toggleEditLabel}>x</button>\r\n                </header>\r\n                <main>\r\n                    <label>Title\r\n                        <input type=\"text\" name=\"title\" value={this.state.label.title} placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange} autoComplete=\"off\" required autoFocus ></input>\r\n                    </label>\r\n                </main>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { EditLabelBar } from './EditLabelBar'\r\n\r\nexport class LabelPalette extends Component {\r\n    state = {\r\n        isEditLabelShow: false,\r\n        labelToEdit: null\r\n    }\r\n\r\n    addLable = (label) => {\r\n        const cardToSave = { ...this.props.card }\r\n        if (!cardToSave.labels) cardToSave.labels = [label]\r\n        else {\r\n            const alredyOnCard = cardToSave.labels.find(currLabel => currLabel.id === label.id)\r\n            if (alredyOnCard) cardToSave.labels = cardToSave.labels.filter(currLabel => currLabel.id !== label.id)\r\n            else cardToSave.labels.push(label)\r\n        }\r\n        this.props.updateCard(cardToSave, 'added label')\r\n    }\r\n\r\n    toggleEditLabel = () => {\r\n        this.setState({ isEditLabelShow: !this.state.isEditLabelShow })\r\n    }\r\n\r\n    openEditLabel = async (label) => {\r\n        await this.setState({ labelToEdit: label })\r\n        this.toggleEditLabel()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"label-palette edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Labels</h3>\r\n                    <button onClick={this.props.toggleLabelPalette}>x</button>\r\n                </header>\r\n                <main>\r\n                    <ul>\r\n                        {this.props.board.labels.map(label => {\r\n                            const alredyOnCard = (this.props.card.labels?.find(currLabel => currLabel.id === label.id)) ? 'alredyOnCard' : ''\r\n                            return (\r\n                                <li key={label.id} >\r\n                                    <div className={`${label.id}`} onClick={() => { this.addLable(label) }}>{label.title} <span className={`${alredyOnCard}`}></span></div>\r\n                                    <button className=\"open-edit-label\" onClick={() => { this.openEditLabel(label) }}></button>\r\n                                </li>)\r\n                        })}\r\n\r\n                        {this.state.isEditLabelShow && <EditLabelBar toggleEditLabel={this.toggleEditLabel} label={this.state.labelToEdit} board={this.props.board} updateBoard={this.props.updateBoard} />}\r\n                    </ul>\r\n                </main>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { AddChecklistBar } from './AddChecklistBar'\r\nimport { AddCoverBar } from './AddCoverBar'\r\nimport { AddDeutimeBar } from './AddDeutimeBar'\r\nimport { AddImgBar } from './AddImgBar'\r\nimport { AddMembersBar } from './AddMembersBar'\r\nimport { DeleteCardBar } from './DeleteCardBar'\r\nimport { LabelPalette } from './LabelPalette'\r\n\r\n\r\nexport function DynamicNav(props) {\r\n    const { showingNav, toggleShowingNav, card, updateCard, board, updateBoard, addDeuDate, users, addImg, onRemoveCard } = props\r\n\r\n    const closeNav = () => { toggleShowingNav(null) }\r\n\r\n    switch (showingNav) {\r\n        case 'labelPalette':\r\n            var cmp = <LabelPalette card={card} updateCard={updateCard} board={board} updateBoard={updateBoard} toggleLabelPalette={closeNav} />\r\n            break\r\n        case 'checklist':\r\n            cmp = <AddChecklistBar card={card} updateCard={updateCard} toggleChecklistBar={closeNav} />\r\n            break\r\n        case 'cover':\r\n            cmp = <AddCoverBar card={card} updateCard={updateCard} toggleCoverBar={closeNav} />\r\n            break\r\n        case 'dueTime':\r\n            cmp = <AddDeutimeBar card={card} updateCard={updateCard} addDeuDate={addDeuDate} toggleAddDeutime={closeNav} />\r\n            break\r\n        case 'members':\r\n            cmp = <AddMembersBar card={card} updateCard={updateCard} users={users} toggleAddMembers={closeNav} />\r\n            break\r\n        case 'delete':\r\n            cmp = <DeleteCardBar cardId={card.id} boardId={board._id} onRemoveCard={onRemoveCard} toggleDeleteCard={closeNav} />\r\n            break\r\n        case 'img':\r\n            cmp = <AddImgBar card={card} updateCard={updateCard} toggleAddImg={closeNav} addImg={addImg} />\r\n            break\r\n\r\n        default:\r\n            cmp = <div></div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-list\">\r\n            {cmp}\r\n        </div>\r\n    )\r\n\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddDescription extends Component {\r\n    state = {\r\n        description: { txt: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const description = (this.props.card.description) ? this.props.card.description : ''\r\n        this.setState({ description: { txt: description } })\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const description = { ...this.state.description }\r\n        description[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ description })\r\n    }\r\n\r\n    onAddDescription = async (ev) => {\r\n        ev.preventDefault()\r\n        const newDescription = { ...this.state.description }\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.description = newDescription.txt\r\n        try {\r\n            await this.props.updateCard(cardToSave)\r\n            this.props.toggleAddDescription()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        // this.setState({ description: { txt: '' } })\r\n        // \r\n    }\r\n\r\n\r\n    render() {\r\n        const { description } = this.state\r\n        return (\r\n            <form className=\"add-description show\" onSubmit={this.onAddDescription}>\r\n                <textarea name=\"txt\" value={description.txt}\r\n                    placeholder=\"add a more detailed description...\" onChange={this.handleChange} ></textarea>\r\n                <button className=\"add-btn\">Add</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddDescription = connect(mapStateToProps, mapDispatchToProps)(_AddDescription)\r\n","import React from 'react'\r\nimport { AddDescription } from './AddDescription'\r\n\r\n\r\nexport function CardDescriptionShow({ isDescriptionShowing, card, toggleAddDescription, updateCard }) {\r\n\r\n\r\n    return (\r\n        <div className=\"card-img\">\r\n            {(isDescriptionShowing) ? <AddDescription card={card} toggleAddDescription={toggleAddDescription} updateCard={updateCard} /> : ((card.description) ?\r\n                <div className=\"description show\">{card.description} <button className=\"edit-btn\" onClick={toggleAddDescription}>Edit</button></div> :\r\n                <div className=\"show description\" onClick={toggleAddDescription}>add a more detailed description...</div>)}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { utilService } from '../services/utilService.js'\r\nimport { loadBoard, updateBoard } from '../store/actions/boardActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { CardEditNav } from '../cmps/cardEdit/CardEditNav'\r\nimport { CardLabelShow } from '../cmps/cardEdit/CardLabelShow'\r\nimport { CardChecklistShow } from '../cmps/cardEdit/CardChecklistShow'\r\nimport { CardDuedateShow } from '../cmps/cardEdit/CardDuedateShow'\r\nimport { CardImgShow } from '../cmps/cardEdit/CardImgShow'\r\nimport { CardMembersShow } from '../cmps/cardEdit/CardMembersShow'\r\nimport { CardActivitiesShow } from '../cmps/cardEdit/CardActivitiesShow'\r\nimport { DynamicNav } from '../cmps/cardEdit/DynamicNav.jsx'\r\nimport { CardDescriptionShow } from '../cmps/cardEdit/CardDescriptionShow.jsx'\r\n\r\nclass _CardEdit extends Component {\r\n    state = {\r\n        board: null,\r\n        groupId: null,\r\n        card: null,\r\n        showingNav: null,\r\n        isDescriptionShowing: false,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            this.loadCard()\r\n            this.props.loadUsers()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.match !== prevprops.match) this.loadCard()\r\n    }\r\n\r\n    loadCard = async () => {\r\n        try {\r\n            const { groupId, cardId, selectedBoard } = this.props\r\n            await this.props.loadBoard(selectedBoard._id)\r\n            const group = selectedBoard.groups.find(group => group.id === groupId)\r\n            const card = group.cards.find(currCard => currCard.id === cardId)\r\n            this.setState({ board: selectedBoard, groupId, card })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateBoard = async (cardToSave, txt = '') => {\r\n        try {\r\n            const boardToSave = this.updateCard(cardToSave)\r\n            if (txt) {\r\n                const activity = this.createActivity(txt)\r\n                boardToSave.activities.unshift(activity)\r\n            }\r\n            await this.props.updateBoard(boardToSave)\r\n            // this.loadCard()\r\n\r\n        } catch (err) {\r\n            console.log('err in updateCard', err)\r\n        }\r\n    }\r\n\r\n    updateCard = (cardToSave) => {\r\n        return {\r\n            ...this.props.selectedBoard,\r\n            groups: this.props.selectedBoard.groups.map(group => {\r\n                if (group.id === this.state.groupId) {\r\n                    group.cards = group.cards.map(card => {\r\n                        if (card.id === cardToSave.id) return cardToSave\r\n                        else return card\r\n                    })\r\n                }\r\n                return group\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    createActivity = (txt) => {\r\n        const { loggedInUser, card } = this.props\r\n        const miniUser = (loggedInUser) ? { _id: loggedInUser._id, fullname: loggedInUser.fullname, imgUrl: loggedInUser.imgUrl } : { _id: '123', fullname: 'guest', imgUrl: 'https://res.cloudinary.com/ddgevj2yp/image/upload/v1610989052/avatar-1_kbr5un.jpg' }\r\n        const miniCard = { id: card.id, title: card.title }\r\n        const activity = { id: 'a' + utilService.makeId(), createdAt: Date.now(), txt, byMember: miniUser, card: miniCard }\r\n        return activity\r\n    }\r\n\r\n    toggleShowingNav = (showingNav) => {\r\n        this.setState({ showingNav })\r\n    }\r\n\r\n    toggleAddDescription = () => {\r\n        this.setState({ isDescriptionShowing: !this.state.isDescriptionShowing })\r\n    }\r\n\r\n    addDeuDate = (date) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.duedate = date\r\n        this.updateBoard(cardToSave, `added due date`)\r\n    }\r\n\r\n    addImg = (img) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.img = img\r\n        this.updateBoard(cardToSave, 'added img')\r\n    }\r\n\r\n    stopProg = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isDescriptionShowing } = this.state\r\n        const { card, users, toggleCardEdit, onRemoveCard, selectedBoard } = this.props\r\n        if (!card) return <div></div>\r\n\r\n        const isLabels = (card.labels?.length > 0)\r\n        const isDuedate = (card.duedate)\r\n        const isMember = (card.members?.length > 0)\r\n        const coverShow = (card.style?.coverType) ? `top t${card.style.bgColor}` : ''\r\n        const isImg = (card.img)\r\n\r\n        return (\r\n            <div className=\"screen\" onClick={toggleCardEdit}>\r\n                <section className={`card-edit ${coverShow}`} onClick={(ev) => { this.stopProg(ev) }}>\r\n                    <header className=\"edit-header\">\r\n                        <button className=\"close\" onClick={toggleCardEdit}></button>\r\n                        <h1 className=\"title-sign\">{card.title}</h1>\r\n                    </header>\r\n\r\n                    <div className=\"edit-container\">\r\n                        <main>\r\n                            <div className=\"nav-mini-show show flex \">\r\n                                {isLabels && <CardLabelShow labels={card.labels} card={card} updateCard={this.updateBoard} />}\r\n                                {isDuedate && <CardDuedateShow duedate={card.duedate} card={card} updateCard={this.updateBoard} />}\r\n                                {isMember && <CardMembersShow members={card.members} card={card} isBig={true} updateCard={this.updateBoard} />}\r\n                            </div>\r\n                            <h4 className=\"description-sign\">Description </h4>\r\n                            <CardDescriptionShow isDescriptionShowing={isDescriptionShowing} card={card} toggleAddDescription={this.toggleAddDescription} updateCard={this.updateBoard} />\r\n                            <p>{card.description && ''}</p>\r\n                            {isImg && <CardImgShow img={card.img} card={card} updateCard={this.updateBoard} />}\r\n                            <CardChecklistShow checklists={card.checklists} card={card} updateCard={this.updateBoard} />\r\n                            <CardActivitiesShow activities={selectedBoard.activities} card={card} updateCard={this.updateBoard} />\r\n                        </main>\r\n\r\n                        <DynamicNav showingNav={this.state.showingNav} toggleShowingNav={this.toggleShowingNav} card={card} updateCard={this.updateBoard} board={selectedBoard} updateBoard={this.props.updateBoard} addDeuDate={this.addDeuDate} users={users} addImg={this.addImg} onRemoveCard={onRemoveCard} />\r\n\r\n                        <CardEditNav toggleShowingNav={this.toggleShowingNav} card={card} toggleLabelPalette={this.toggleLabelPalette} toggleChecklistBar={this.toggleChecklistBar} toggleCoverBar={this.toggleCoverBar}\r\n                            toggleAddDeutime={this.toggleAddDeutime} toggleAddImg={this.toggleAddImg} toggleAddMembers={this.toggleAddMembers} toggleDeleteCard={this.toggleDeleteCard} />\r\n                    </div>\r\n\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    loadUsers\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n","\r\n\r\nimport React from 'react'\r\n\r\nexport function ChecklistSign(props) {\r\n    let done = 0\r\n    let all = 0\r\n\r\n    props.checklists.forEach(Checklist => {\r\n        Checklist.todos.forEach(todo => {\r\n            if (todo.isDone === true) done++\r\n            all++\r\n        })\r\n    })\r\n\r\n    return (\r\n        <span className=\"checklistSign sign\" > {`${done} / ${all}`} </span>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardDuedateShowMin(props) {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    const { card } = props\r\n    const m = new Date(card.duedate).getMonth() + 1\r\n    let month = ''\r\n    switch (m) {\r\n        case 1: month = 'Jan'; break;\r\n        case 2: month = 'Feb'; break;\r\n        case 3: month = 'Mar'; break;\r\n        case 4: month = 'Apr'; break;\r\n        case 5: month = 'May'; break;\r\n        case 6: month = 'Jun'; break;\r\n        case 7: month = 'Jul'; break;\r\n        case 8: month = 'Aug'; break;\r\n        case 9: month = 'Sep'; break;\r\n        case 10: month = 'Oct'; break;\r\n        case 11: month = 'Nov'; break;\r\n        case 12: month = 'Dec'; break;\r\n        default: break;\r\n    }\r\n    const day = card.duedate.substring(8, 10)\r\n    const remainingTime = (new Date(card.duedate) - Date.now())\r\n    const urgent = (remainingTime < 1000 * 60 * 60 * 24) ? 'urgent' : ''\r\n\r\n\r\n    return (\r\n        <span className=\"card-duedate-show\">\r\n            <span className={`duetime-fa duetime-fa-min ${urgent} `}>{` ${month} ${day}`}</span>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { removeCard } from '../../store/actions/boardActions.js'\r\nimport { CardLabelShowMin } from '../cardEdit/CardLabelShowMin'\r\nimport { CardEdit } from '../../pages/CardEdit'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { ChecklistSign } from './ChecklistSign'\r\n// import { CardCoverShowMin } from './CardCoverShowMin'\r\nimport { CardImgShow } from '../cardEdit/CardImgShow'\r\nimport { CardDuedateShowMin } from '../cardEdit/CardDuedateShowMin'\r\nimport { CardMembersShow } from '../cardEdit/CardMembersShow'\r\n\r\nexport class _CardPreview extends Component {\r\n\r\n    state = {\r\n        isCardEtidShow: false\r\n    }\r\n\r\n\r\n    onRemoveCard = (cardId) => {\r\n        console.log('cardId to remove', cardId)\r\n        this.props.removeCard(cardId, this.props.groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleCardEdit = () => {\r\n        this.setState({ isCardEtidShow: !this.state.isCardEtidShow })\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isCardEtidShow } = this.state\r\n        // const cardBgc = (card.style && card.style.coverType && card.style.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardBgc = (card.style?.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardCover = (card.style?.coverType === 'top' && card.style.bgColor) ? `top t${card.style.bgColor}` : ''\r\n        return (\r\n\r\n\r\n            <Draggable draggableId={String(card.id)} index={this.props.index} direction=\"horizontal\" type=\"card\">\r\n                {(provided) => {\r\n                    return (\r\n\r\n                        <li key={card.id}  {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className={(card.title !== 'default-empty') ? `` : `list-preview-empty`}>\r\n                            <article className={(card.title !== 'default-empty') ? `card-preview ${cardBgc} ${cardCover}` : `card-preview-empty`}>\r\n                                {/* {(card.style?.coverType === 'top') ? <CardCoverShowMin card={card} /> : ''} */}\r\n                                {/* <button className=\"edit-fa\" onClick={() => this.toggleCardEdit}></button> */}\r\n                                <button className=\"edit-s\" onClick={this.toggleCardEdit}></button>\r\n\r\n                                {/* <button className=\"delete-s\" onClick={() => this.onRemoveCard(card.id)}></button> */}\r\n                                {card.labels && <CardLabelShowMin labels={card.labels} />}\r\n                                <p onClick={this.toggleCardEdit}>{card.title}</p>\r\n                                {card.img && <CardImgShow card={card} />}\r\n                                <nav className=\"flex space-between flex-end\">\r\n                                    <span>\r\n                                        {(card.description) ? <span className=\"descriptionSign sign\"></span> : ''}\r\n                                        {(card.checklists && card.checklists.length > 0) ? <ChecklistSign checklists={card.checklists} /> : ''}\r\n                                        {(card.duedate) ? <CardDuedateShowMin card={card} /> : ''}\r\n                                    </span>\r\n                                    <span>\r\n                                        {(card.members) ? <CardMembersShow members={card.members} /> : ''}\r\n                                    </span>\r\n                                </nav>\r\n                                {isCardEtidShow && <CardEdit card={card} groupId={this.props.groupId} toggleCardEdit={this.toggleCardEdit} onRemoveCard={this.onRemoveCard} />}\r\n                            </article>\r\n                        </li>\r\n                    )\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    removeCard\r\n\r\n};\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);","import { CardPreview } from './CardPreview.jsx'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\n\r\n\r\nexport function CardList(props) {\r\n    return (\r\n        <Droppable droppableId={props.groupId} type=\"card\" >\r\n            {(provided) => (\r\n                <ul className=\"card-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {props.cards.map((card, index) =>\r\n                        <CardPreview key={card.id} card={card} groupId={props.groupId} index={index} />\r\n                    )}\r\n                    {provided.placeholder}\r\n                </ul>\r\n            )}\r\n        </Droppable>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addCard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddCard extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addCard(this.state.title, this.props.group.id, this.props.selectedBoard)\r\n        this.props.toggleAddCardMode()\r\n\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddCardMode()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-card\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <textarea placeholder=\"Enter a title for this card...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-btn\">Add Card</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addCard\r\n\r\n};\r\n\r\nexport const AddCard = connect(mapStateToProps, mapDispatchToProps)(_AddCard);","\r\n\r\nexport function RemoveList(props) {\r\n\r\n    return (\r\n        <section className=\"edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3> Delete list?</h3>\r\n                    <button onClick={props.toggleDeleteBar}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <p>All actions will be removed from the activity feed and you won’t be able to re-open the list. There is no undo.</p>\r\n                    <button className=\"add-btn red\" onClick={()=>props.onRemoveGroup(props.group.id, props.group.title)}>Delete</button>\r\n                </main>\r\n            </section>\r\n    )\r\n}","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AddCard } from './AddCard.jsx'\r\nimport { RemoveList } from './RemoveList'\r\n\r\n\r\nexport class _EditGroupNav extends Component {\r\n\r\n    state = {\r\n        isOnAddCardMode: false,\r\n        isDeleteBarShow: false\r\n    }\r\n\r\n\r\n    toggleDeleteBar = () => {\r\n        this.setState({ isDeleteBarShow: !this.state.isDeleteBarShow })\r\n    }\r\n\r\n   \r\n    toggleAddCardMode = () => {\r\n\r\n        this.setState({ isOnAddCardMode: !this.state.isOnAddCardMode })\r\n    }\r\n\r\n    render() {\r\n        const { onRemoveGroup } = this.props\r\n        const { isDeleteBarShow } = this.state\r\n        const { isOnAddCardMode } = this.state\r\n        const { group } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                < nav className=\"edit-group-container\">\r\n                    {(!isOnAddCardMode) ? <button onClick={this.toggleAddCardMode}>Add another card...</button> : <AddCard group={group} toggleAddCardMode={this.toggleAddCardMode} />}\r\n                    {(!isDeleteBarShow) ? <button onClick={this.toggleDeleteBar}>Delete this list...</button> : <RemoveList group={group} toggleDeleteBar={this.toggleDeleteBar} onRemoveGroup={onRemoveGroup} />}\r\n                    \r\n                </nav >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport const EditGroupNav = connect(mapStateToProps, mapDispatchToProps)(_EditGroupNav);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\nimport { EditGroupTitle } from './EditGroupTitle'\r\nimport { CardList } from '../card/CardList'\r\nimport { AddCard } from './AddCard.jsx'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { EditGroupNav } from './EditGroupNav'\r\n\r\n\r\n\r\nexport class _GroupPreview extends Component {\r\n\r\n    state = {\r\n        isOnAddCardMode: false,\r\n        isEditMode: false,\r\n        isEditGroupNavShow: false,\r\n        title: '',\r\n        groupHeight: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ groupHeight: document.body.clientHeight })\r\n    }\r\n\r\n    onRemoveGroup = async (groupId, groupTitle) => {\r\n        let boardToUpdate = JSON.parse(JSON.stringify(this.props.selectedBoard))\r\n        let msg = `removed list titled ${groupTitle}`\r\n        const updatedGroups = boardToUpdate.groups.filter(group => group.id !== groupId)\r\n        boardToUpdate.groups = updatedGroups\r\n\r\n        const board = await this.props.updateBoard(boardToUpdate, msg)\r\n        return board\r\n        // this.props.removeGroup(groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n    toggleAddCardMode = () => {\r\n\r\n        this.setState({ isOnAddCardMode: !this.state.isOnAddCardMode })\r\n    }\r\n    toggleEditGroupNav = () => {\r\n        this.setState({ isEditGroupNavShow: !this.state.isEditGroupNavShow })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isEditMode, isOnAddCardMode, isEditGroupNavShow } = this.state\r\n        const { group } = this.props\r\n        return (\r\n            <Draggable draggableId={group.id} index={this.props.index}>\r\n                {(provided) => {\r\n                    return (\r\n                        <li className=\"group\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                            <article className=\"group-preview\">\r\n                                <div className=\"group-wraper\" >\r\n                                    <header>\r\n                                        {(!isEditMode) ? <p onClick={this.toggleEditMode}>{group.title} </p> : <EditGroupTitle group={group} toggleEditMode={this.toggleEditMode} />}\r\n                                        <button className=\"menu-group\" onClick={() => this.toggleEditGroupNav(group.id)}></button>\r\n                                        {isEditGroupNavShow && <EditGroupNav group={group} onRemoveGroup={this.onRemoveGroup} />}\r\n                                    </header>\r\n                                    <main style={{ maxHeight: `${this.state.groupHeight - 260}px` }}>\r\n                                        <div className=\"main-group-wraper\">\r\n                                            {group.cards && <CardList groupId={group.id} cards={group.cards} />}\r\n                                        </div>\r\n                                    </main>\r\n                                    {(!isOnAddCardMode) ? <p className=\"add-another-card\" onClick={this.toggleAddCardMode}> Add another card</p> : <AddCard group={group} toggleAddCardMode={this.toggleAddCardMode} />}\r\n                                </div>\r\n                            </article>\r\n                        </li>\r\n\r\n                    )\r\n\r\n                }}\r\n\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n\r\n};\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../store/actions/boardActions.js'\r\n// import Icon from '@material-ui/core/Icon';\r\nexport class _AddNewGroup extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addGroup(this.state.title, this.props.selectedBoard)\r\n        this.setState({ title: '' })\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-group\">\r\n                <form className=\"add-new-wraper\" onSubmit={this.onSubmit} >\r\n                    <input className=\"add-another-group\" placeholder=\"Add another list\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" />\r\n                    <button className=\"save-group-btn\">Add List</button>\r\n                    <button className=\"cancel-group-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    addGroup,\r\n};\r\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","import React, { Component } from 'react'\r\nimport { GroupPreview } from './GroupPreview.jsx'\r\nimport { AddNewGroup } from './AddNewGroup.jsx'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\n\r\nexport class GroupList extends Component {\r\n    state = {\r\n        isOnAddGroupMode: false,\r\n    }\r\n    toggleAddGroupMode = () => {\r\n        this.setState({ isOnAddGroupMode: !this.state.isOnAddGroupMode })\r\n    }\r\n    render() {\r\n        const { isOnAddGroupMode } = this.state\r\n        return (\r\n            <DragDropContext onDragEnd={this.props.onDragEnd}>\r\n                <section className=\"group-list-container\">\r\n                    <Droppable droppableId={'moveGroups'} direction=\"horizontal\" type=\"group\">\r\n                        {(provided) => (\r\n                            <ul className=\"group-list clean-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {this.props.groups.map((group, index) =>\r\n                                    <GroupPreview key={group.id} group={group} index={index} />\r\n                                )}\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                    {(!isOnAddGroupMode) ? <p className=\"add-another-list\" onClick={this.toggleAddGroupMode}> Add another list</p> : <AddNewGroup boardId={this.props.boardId} toggleAddGroupMode={this.toggleAddGroupMode} />}\r\n                </section>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _EditBoardTitle extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.selectedBoard\r\n        this.setState({ title })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        const { title } = this.state\r\n        if (!title) return\r\n        const board = { ...this.props.selectedBoard, title }\r\n        await this.props.updateBoard(board, `changed board title to ${title}`)\r\n        this.props.toggleEditMode()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-board-title\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input className=\"new-title-input\" placeholder=\"Board Title\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" autoFocus />\r\n                    <button className=\"add-btn\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n};\r\n\r\nexport const EditBoardTitle = connect(mapStateToProps, mapDispatchToProps)(_EditBoardTitle);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { EditBoardTitle } from './EditBoardTitle'\r\n\r\n\r\n\r\nexport class _AboutBoard extends Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    render() {\r\n        const { isEditMode } = this.state\r\n        const { selectedBoard } = this.props\r\n        return (\r\n            <div className=\"about-board-container side-menu-sub-item\">\r\n                <header>\r\n                    <h1>About this board</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleAboutBoard}>x</button>\r\n                </header>\r\n                <main className=\"menu-container\">\r\n                    <section>\r\n                        <p className=\"menu-item made-by\"> Made by </p>\r\n                        <div className=\"flex align-center\">\r\n                            <div className=\"user-img sub inline-block\" style={{ backgroundImage: `url(${selectedBoard.createdBy.imgUrl})` }}></div>\r\n                            <span>{selectedBoard.createdBy.username} </span>\r\n                        </div>\r\n                    </section>\r\n                    <section>\r\n                        <p className=\"menu-item board-name\">Board name <span className=\"board-name-edit\">click to edit</span></p>\r\n\r\n                        {(!isEditMode) ? <p className=\"board-name-edit\" onClick={this.toggleEditMode}> {selectedBoard.title} </p> : <EditBoardTitle toggleEditMode={this.toggleEditMode} />}\r\n                        {/* <button onClick={() => { this.props.toggleAboutBoard() }}>Back to Menu</button> */}\r\n                    </section>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n\r\n};\r\n\r\nexport const AboutBoard = connect(mapStateToProps, mapDispatchToProps)(_AboutBoard);\r\n\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _ChangeBoardBackground extends Component {\r\n\r\n    state = {\r\n        bgurl: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onChooseBackground = (bgUrl) => {\r\n        const callback = () => {\r\n            this.onSubmit();\r\n        };\r\n        this.setState({ bgurl: bgUrl }, callback)\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let boardToUpdate = JSON.parse(JSON.stringify(this.props.selectedBoard))\r\n        boardToUpdate.style.bgurl = this.state.bgurl\r\n        await this.props.updateBoard(boardToUpdate, 'changed background')\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg104',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\r\n\r\n            },\r\n            {\r\n                id: 'bg105',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg106',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg107',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/02/19/11/33/backround-1209772_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg108',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/08/15/15/37/pen-2644392_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg109',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg110',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/05/31/13/13/rain-3443977_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg111',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/04/05/11/38/bokeh-316425_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg112',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/25/13/01/stones-167089_1280.jpg\"\r\n            }\r\n\r\n        ]\r\n        return (\r\n            <section className=\"side-menu-sub-item \" onClick={this.stopPropagation}>\r\n                <header>\r\n                    <h3>Choose background</h3>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleChangeBackground}>x</button>\r\n                </header>\r\n                <main className=\"add-board-backgrounds\">\r\n                    {backgroundImages.map(background => {\r\n                        return (\r\n                            <div className=\"backgrounds-tumbs\" key={background.id}\r\n                                style={{ backgroundImage: `url(${background.bgurl})` }}\r\n                                onClick={() => this.onChooseBackground(background.bgurl)}>\r\n                                <div className=\"plus\">+</div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </main>\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n};\r\n\r\nexport const ChangeBoardBackground = connect(mapStateToProps, mapDispatchToProps)(_ChangeBoardBackground);\r\n\r\n\r\n","import { ActivityTime } from \"../cardEdit/ActivityTime\";\r\n\r\n\r\nexport function ActivityPreview(props) {\r\n\r\n    return (\r\n        <li className=\"activity-preview flex align-center\">\r\n            <div className=\"user-img inline-block\" style={{ backgroundImage: `url(${props.activity.byMember.imgUrl})` }}></div>\r\n            <div className=\"txt\">\r\n                <p> <span className=\"user-name\">{props.activity.byMember.fullname}</span> {props.activity.txt}  </p>\r\n                <ActivityTime time={props.activity.createdAt} />\r\n            </div>\r\n        </li>\r\n\r\n    )\r\n}","import { ActivityPreview } from './ActivityPreview'\r\n\r\n\r\nexport function ActivityBoard(props) {\r\n\r\n    return (\r\n        <section className=\"activity-container\">\r\n            <p className=\"menu-item menu-activity\">Activity Log</p>\r\n            <ul className=\"activity-list\">\r\n                {props.activities.map(activity =>\r\n                    <ActivityPreview key={activity.id} activity={activity} />\r\n                )}\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AboutBoard } from '../boardMenu/AboutBoard'\r\nimport { ChangeBoardBackground } from '../boardMenu/ChangeBoardBackground'\r\nimport { ActivityBoard } from '../boardMenu/ActivityBoard'\r\n// import { RemoveBoard } from '../boardMenu/RemoveBoard'\r\n// import { Dashboard } from '../dashboard/Dashboard'\r\n\r\nclass _BoardSideMenu extends Component {\r\n    state = {\r\n        isAboutBoardShown: false,\r\n        isChangeBackgroundShown: false,\r\n        isBoardAnalysisShown: false,\r\n        isDeleteBoardShown: false,\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    toggleAboutBoard = () => {\r\n        this.setState({ isAboutBoardShown: !this.state.isAboutBoardShown })\r\n    }\r\n    toggleChangeBackground = () => {\r\n        this.setState({ isChangeBackgroundShown: !this.state.isChangeBackgroundShown })\r\n    }\r\n    toggleBoardAnalysis = () => {\r\n        this.setState({ isBoardAnalysisShown: !this.state.isBoardAnalysisShown })\r\n    }\r\n    toggleDeleteBoard = () => {\r\n        this.setState({ isDeleteBoardShown: !this.state.isDeleteBoardShown })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isAboutBoardShown } = this.state\r\n        const { isChangeBackgroundShown } = this.state\r\n        // const { isBoardAnalysisShown } = this.state\r\n        // const { isDeleteBoardShown } = this.state\r\n        const { selectedBoard, classname } = this.props\r\n        const open = (classname) ? 'open' : ''\r\n\r\n        return (\r\n            <section className={`board-side-menu ${open}`}>\r\n                <header className=\"menu-header\">\r\n                    <h1>Menu</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleSideMenu}>X</button>\r\n                    <hr />\r\n                </header>\r\n                {/* <div className=\"hr\"></div> */}\r\n\r\n                <div className=\"menu-container\">\r\n                    {(!isAboutBoardShown) ? <div className=\"menu-item\" onClick={this.toggleAboutBoard}> <p className=\"menu-about\"> About this board</p></div> : <AboutBoard toggleAboutBoard={this.toggleAboutBoard} board={selectedBoard} />}\r\n                    {(!isChangeBackgroundShown) ? <p className=\"menu-item menu-background\" onClick={this.toggleChangeBackground}> Change Background</p> : <ChangeBoardBackground toggleChangeBackground={this.toggleChangeBackground} />}\r\n                    {/* {(isBoardAnalysisShown) && <p className=\"board-analysis\" onClick={this.isBoardAnalysisShown}>Board Analysis</p>} */}\r\n                    {/* {(!isDashboardShown) ? <p className=\"menu-dashboard menu-item\" onClick={this.toggleDashboard}>Board Analysis</p> : <Dashboard toggleDashboard={this.toggleDashboard} />} */}\r\n                    {/* {(!isDeleteBoardShown) ? <p className=\"delete-board\" onClick={this.toggleDeleteBoard}> Delete Board</p> : <RemoveBoard toggleDeleteBoard={this.toggleDeleteBoard} board={selectedBoard} />} */}\r\n                    <hr />\r\n                    {selectedBoard.activities && <ActivityBoard activities={selectedBoard.activities} />}\r\n                </div>\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const BoardSideMenu = connect(mapStateToProps, mapDispatchToProps)(_BoardSideMenu)","import { Link } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass _AppHeader extends Component {\r\n\r\n    state = {\r\n        userImgStyle: {\r\n            backgroundImage: \"url(https://res.cloudinary.com/ddgevj2yp/image/upload/v1610989052/avatar-1_kbr5un.jpg\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.loggedInUser) return\r\n        const userImgUrl = this.props.loggedInUser.imgUrl\r\n        let userImgStyle = {\r\n            backgroundImage: `url(${userImgUrl})`\r\n        }\r\n        this.setState({ userImgStyle })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { selectedBoard, toggleSideMenu, toggleDashboard } = this.props\r\n        return (\r\n            <div className=\"main-header\">\r\n                <header className=\"app-header flex space-between align-center\">\r\n                    <nav>\r\n                        <Link to=\"/\" className=\"header-home\"></Link>\r\n                        <Link to=\"/board\" className=\"header-board\"> Boards </Link>\r\n                    </nav>\r\n                    <h3 className=\"header-logo\">TASX</h3>\r\n\r\n                    <nav className=\"navbar-links flex space-between align-center\">\r\n                        <Link to=\"/home\" className=\"header-about-us normal-media\">About Us</Link>\r\n                        <Link to=\"/login\" className=\"user-img\" style={this.state.userImgStyle}></Link>\r\n                    </nav>\r\n                </header>\r\n                <header className=\"narrow-media app-header flex space-between align-center\">\r\n                    <Link to=\"/home\" className=\"header-about-us\">About Us</Link>\r\n                </header>\r\n                <header className=\"app-header board-header flex space-between align-center\">\r\n                    <nav>\r\n                        <h5>{selectedBoard.title}</h5>\r\n                    </nav>\r\n\r\n                    <nav className=\"navbar-links  \">\r\n                        <button className=\"header-invite\" onClick={toggleDashboard}>Statistics</button>\r\n                        <button className=\"header-show-menu\" onClick={toggleSideMenu}> Show Menu</button>\r\n\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import { Pie } from 'react-chartjs-2';\r\n\r\nexport function PieBoard(props) {\r\n    const membersTaskMap = props.board.groups.reduce((membersMapAcc, group) => {\r\n        group.cards?.forEach(card => {\r\n            card.members?.forEach(member => {\r\n                const count = membersMapAcc[member.fullname] + 1 || 1\r\n                membersMapAcc[member.fullname] = count\r\n            })\r\n        })\r\n        return membersMapAcc\r\n    }, {})\r\n\r\n\r\n\r\n\r\n    const data = {\r\n        labels: Object.keys(membersTaskMap),\r\n        datasets: [{\r\n            data: Object.values(membersTaskMap),\r\n            backgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            hoverBackgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            fontColor: '#ffff'\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Pie data={data} options={{\r\n                title: { display: true, text: 'Total Cards Per Member', fontColor: '#ffff', fontSize: '14' },\r\n                legend: { display: false },\r\n                ticks: { precision: 0 },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            fontColor: '#ffff',\r\n                            beginAtZero: true,\r\n                            userCallback: function (label, index, labels) {\r\n                                if (Math.floor(label) === label) {\r\n                                    return label;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        ticks: {\r\n                            fontColor: '#ffff'\r\n\r\n                        }\r\n                    }]\r\n                }\r\n            }} />\r\n        </section>\r\n    )\r\n}\r\n","import { HorizontalBar } from 'react-chartjs-2';\r\n\r\nexport function BarBoard(props) {\r\n\r\n    const groupCardMap = props.board.groups.reduce((cardsMapAcc, group) => {\r\n        cardsMapAcc[group.title] = group.cards.length\r\n        return cardsMapAcc\r\n    }, {})\r\n\r\n\r\n    const myData = {\r\n        labels: Object.keys(groupCardMap),\r\n        datasets: [{\r\n            label: 'tasks',\r\n            data: Object.values(groupCardMap),\r\n            backgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            hoverBackgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF']\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <HorizontalBar data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Total Cards Per List', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n\r\n                                // beginAtZero: true,\r\n                                // userCallback: function (label, index, labels) {\r\n                                //     // when the floored value is the same as the value we have a whole number\r\n                                //     if (Math.floor(label) === label) {\r\n                                //         return label;\r\n                                //     }\r\n\r\n                                // }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }} />\r\n        </section>\r\n    )\r\n}\r\n","import { Line } from 'react-chartjs-2';\r\n\r\nexport function LineBoard(props) {\r\n    // console.log(props.board);\r\n    // let membersActivities = {}\r\n    // props.board.activities.forEach(activity => {\r\n    //     if (membersActivities[activity.byMember.fullname]) membersActivities[activity.byMember.fullname]++\r\n    //     else membersActivities = { ...membersActivities, [activity.byMember.fullname]: 1 }\r\n    // })\r\n    // console.log(membersActivities);\r\n\r\n    const now = Date.now()\r\n    const groupTimeMap = props.board.groups.reduce((timeMapAcc, group) => {\r\n        let cardsInGroupSum = 0\r\n        group.cards?.forEach(card => {\r\n            cardsInGroupSum++\r\n            // let diff = Math.round((now - card.createdAt) / (1000 * 60 * 60 * 24))\r\n            let diff = (now - card.createdAt) / 36000 / 1000\r\n            timeMapAcc[group.title] = Math.round(diff / cardsInGroupSum)\r\n\r\n        })\r\n        return timeMapAcc\r\n    }, {})\r\n\r\n\r\n    const myData = {\r\n        labels: Object.keys(groupTimeMap),\r\n        datasets: [{\r\n            data: Object.values(groupTimeMap),\r\n            backgroundColor: ['#0079BF'],\r\n            hoverBackgroundColor: ['#0079BF'],\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Line\r\n                data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Average Lifetime Of Cards Per List In Days', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true,\r\n                                userCallback: function (label, index, labels) {\r\n                                    // when the floored value is the same as the value we have a whole number\r\n                                    if (Math.floor(label) === label) {\r\n                                        return label;\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff'\r\n\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { Bar } from 'react-chartjs-2';\r\n\r\nexport function BarLabels(props) {\r\n    const labelsTitle = []\r\n    const labelsTotal = []\r\n    props.board.groups.forEach((group) => {\r\n        group.cards?.forEach(card => {\r\n            card.labels?.forEach(label => {\r\n                if (labelsTotal[label.id]) labelsTotal[label.id]++\r\n                else labelsTotal[label.id] = 1\r\n                labelsTitle[label.id] = label.title\r\n            })\r\n        })\r\n    })\r\n\r\n    const myData = {\r\n        labels: Object.values(labelsTitle),\r\n        datasets: [{\r\n            label: 'tasks',\r\n            data: Object.values(labelsTotal),\r\n            backgroundColor: Object.keys(labelsTitle),\r\n            hoverBackgroundColor: Object.keys(labelsTitle)\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Bar\r\n                data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Labels Usage', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true,\r\n                                userCallback: function (label, index, labels) {\r\n                                    // when the floored value is the same as the value we have a whole number\r\n                                    if (Math.floor(label) === label) {\r\n                                        return label;\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff'\r\n\r\n                            }\r\n                        }]\r\n                    }\r\n                }} />\r\n        </section>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PieBoard } from './PieBoard'\r\nimport { BarBoard } from './BarBoard'\r\nimport { LineBoard } from './LineBoard'\r\nimport { BarLabels } from './BarLabels'\r\n\r\n\r\nclass _Dashboard extends Component {\r\n\r\n    state = {\r\n        todos: '',\r\n        cardSum: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.todosAndCardsSum()\r\n    }\r\n\r\n    todosAndCardsSum = () => {\r\n        let total = 0\r\n        let complited = 0\r\n        let cardSum = 0\r\n        this.props.selectedBoard.groups.forEach(group => {\r\n            group.cards?.forEach(card => {\r\n                cardSum++\r\n                card.checklists.forEach(checklist => {\r\n                    checklist.todos.forEach(todo => {\r\n                        total++\r\n                        if (todo.isDone) complited++\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        this.setState({ todos: `${complited} / ${total}`, cardSum })\r\n    }\r\n\r\n    render() {\r\n        const board = this.props.selectedBoard\r\n        const { toggleDashboard } = this.props\r\n        const { todos, cardSum } = this.state\r\n        const membersSum = board.members.length\r\n\r\n        return (\r\n            <section className=\"dashboard\">\r\n                <header>\r\n                    <h1>Board Statistics</h1>\r\n                    <button className=\"close-menu\" onClick={toggleDashboard}>x</button>\r\n                </header>\r\n                <main className=\"menu-container\">\r\n                    <div className=\"summery\">\r\n                        <p><span>{membersSum}</span> Total members</p>\r\n                        <p><span>{todos}</span> Checked todos</p>\r\n                        <p><span>{cardSum}</span> Total Cards on board</p>\r\n                    </div>\r\n                    <div className=\"data\">\r\n                        <PieBoard board={board} />\r\n                        <BarBoard board={board} />\r\n                        <BarLabels board={board} />\r\n                        <LineBoard board={board} />\r\n                    </div>\r\n                </main>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupList } from '../cmps/group/GroupList'\r\nimport { BoardSideMenu } from '../cmps/board/BoardSideMenu'\r\nimport { socketService } from '../services/socketService'\r\nimport { loadBoard, updateBoard, updateBoardFromSocket } from '../store/actions/boardActions.js'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\nimport { Dashboard } from '../cmps/dashboard/Dashboard'\r\n\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        board: {},\r\n        isBoardMenuShown: false,\r\n        isDashboardShown: false,\r\n        filterBy: {\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const boardId = this.props.match.params.id\r\n        socketService.setup()\r\n        await this.props.loadBoard(boardId)\r\n        socketService.emit('join board', boardId)\r\n        socketService.on('update board', this.onChangeBoard)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('update board', this.onChangeBoard)\r\n        socketService.terminate()\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        // console.log('on drag result', result)\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return\r\n        }\r\n        if (type === 'group') {\r\n            this.onDragGroups(source.index, destination.index)\r\n        }\r\n        if (type === 'card') {\r\n            this.onDragCards(destination, source, draggableId)\r\n        }\r\n    }\r\n\r\n    onChangeBoard = async (board) => {\r\n        // console.log('on change board', board)\r\n        await this.props.updateBoardFromSocket(board)\r\n    }\r\n\r\n    // per react beautiful dnd after performing optimistic update to let server know that a reorder has occurred\r\n    onDragGroups = async (startIndex, endIndex) => {\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMove = boardToUpdate.groups.splice(startIndex, 1)\r\n        boardToUpdate.groups.splice(endIndex, 0, groupToMove[0])\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n    }\r\n\r\n    onDragCards = async (destination, source) => {\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMoveFromIdx = boardToUpdate.groups.findIndex(group => group.id === source.droppableId)\r\n        const groupToMoveToIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\r\n        const cardToMove = boardToUpdate.groups[groupToMoveFromIdx].cards.splice(source.index, 1)\r\n        boardToUpdate.groups[groupToMoveToIdx].cards.splice(destination.index, 0, cardToMove[0])\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n    }\r\n\r\n    toggleSideMenu = () => {\r\n        this.setState({ isBoardMenuShown: !this.state.isBoardMenuShown })\r\n    }\r\n    toggleDashboard = () => {\r\n        this.setState({ isDashboardShown: !this.state.isDashboardShown })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedBoard } = this.props\r\n        const { isBoardMenuShown, isDashboardShown } = this.state\r\n\r\n        if (!selectedBoard) return <div>Loading...</div>\r\n        const style = {\r\n            boardStyle: { ...selectedBoard.style }\r\n        }\r\n        return (\r\n            <section className=\"board-wraper\"\r\n                style={{\r\n                    backgroundImage: \"url(\" + style.boardStyle.bgurl + \")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\"\r\n                }}>\r\n                <AppHeader toggleSideMenu={this.toggleSideMenu} toggleDashboard={this.toggleDashboard} />\r\n                <BoardSideMenu classname={isBoardMenuShown} toggleSideMenu={this.toggleSideMenu} />\r\n                {selectedBoard.groups && <GroupList groups={selectedBoard.groups} boardId={selectedBoard._id} onDragEnd={this.onDragEnd} />}\r\n                {isDashboardShown && <Dashboard toggleDashboard={this.toggleDashboard} />}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        filterBy: state.boardModule.filterBy,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    updateBoardFromSocket,\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\r\n","import { Link } from 'react-router-dom'\r\n\r\n\r\nexport function BoardPreview(props) {\r\n    const { board } = props\r\n    const style = { boardStyle: { ...board.style } }\r\n\r\n    return (\r\n        <Link to={`/board/${board._id}`}>\r\n            <li className=\"board-preview\"\r\n                style={{ backgroundImage: `url(${style.boardStyle.bgurl})` }}>\r\n                <div className=\"content\">\r\n                    <p>{board.title}</p>\r\n                </div>\r\n            </li>\r\n        </Link>\r\n    )\r\n}","import { BoardPreview } from './BoardPreview.jsx'\r\n\r\nexport function BoardList({ boards, title, toggleNewBoard }) {\r\n    const boardsForDisplay = boards\r\n    // console.log(boardsForDisplay);\r\n    // const boardsForDisplay = props.boards.slice(0, 6)\r\n\r\n    return (\r\n        <section className=\"board-list \">\r\n            <h2 className=\"title\">{title}</h2>\r\n            <ul className=\"flex wrap\">\r\n                {boardsForDisplay.map(board =>\r\n                    <BoardPreview board={board} key={board._id} className=\"board\" />\r\n                )}\r\n                {(title !== 'Templates boards') && <li onClick={toggleNewBoard} className=\"board-preview add-board-btn\"><p>+ Add board</p></li>}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddBoard extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        bgurl: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onChooseBackground = (bgUrl) => {\r\n        const callback = () => {\r\n            this.onSubmit();\r\n        };\r\n        this.setState({ bgurl: bgUrl }, callback)\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        // ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const board = await this.props.createBoard(this.state.title, this.state.bgurl)\r\n        this.props.onLoadNewBoard(board._id)\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg104',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\r\n\r\n            },\r\n            {\r\n                id: 'bg105',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg106',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg107',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/02/19/11/33/backround-1209772_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg108',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/08/15/15/37/pen-2644392_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg109',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg110',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/05/31/13/13/rain-3443977_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg111',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/04/05/11/38/bokeh-316425_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg112',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/25/13/01/stones-167089_1280.jpg\"\r\n            }\r\n\r\n        ]\r\n        return (\r\n            <div className=\"screen\" onClick={this.onCancelAdd}>\r\n                <div className=\"add-board\" onSubmit={this.onSubmit} onClick={this.stopPropagation}>\r\n                    <input placeholder=\"Enter a title for your new board...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" required />\r\n                    <section className=\"add-board-backgrounds\">\r\n                        <h3>Enter a title, Choose a background - and get started!</h3>\r\n                        {backgroundImages.map(background => {\r\n                            return (\r\n                                <div className=\"backgrounds-tumbs\" key={background.id}\r\n                                    style={{ backgroundImage: `url(${background.bgurl})` }}\r\n                                    onClick={() => this.onChooseBackground(background.bgurl)}>\r\n                                    <div className=\"plus\">+</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </section>\r\n                    {/* <button className=\"save-btn\">+ Add Board</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}>X Cancel</button> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    createBoard\r\n\r\n};\r\n\r\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardList } from '../cmps/board/BoardList'\r\nimport { AddBoard } from '../cmps/board/AddBoard'\r\nimport { loadBoards } from '../store/actions/boardActions.js'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\n\r\nclass _Boards extends Component {\r\n    state = {\r\n        isNewBoard: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards({ userId: '6004748cf9fd65ff47dc81e4' })\r\n        const userId = this.props.loggedInUser?._id || '6007ffeea8c0ad4b8ad3c478'\r\n        this.props.loadBoards({ userId })\r\n    }\r\n\r\n    toggleNewBoard = () => {\r\n        this.setState({ isNewBoard: !this.state.isNewBoard })\r\n    }\r\n\r\n    onLoadNewBoard = (boardId) => {\r\n        this.toggleNewBoard()\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <HomeHeader loggedInUser={this.props.loggedInUser} />\r\n                <div className=\"boards flex col\">\r\n                    <h1>TASX</h1>\r\n                    <h2>Get on Board</h2>\r\n                    <hr />\r\n                    <section className=\"board-lists main-container\">\r\n                        {this.props.templatesBoards && <BoardList boards={this.props.templatesBoards} title=\"Templates boards\" toggleNewBoard={this.toggleNewBoard} />}\r\n                        <BoardList boards={this.props.boards} title=\"Personal boards\" toggleNewBoard={this.toggleNewBoard} />\r\n                    </section>\r\n                    {this.state.isNewBoard && <AddBoard toggleNewBoard={this.toggleNewBoard} onLoadNewBoard={this.onLoadNewBoard} />}\r\n                </div >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        templatesBoards: state.boardModule.templatesBoards,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\n\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../store/actions/userActions'\r\n\r\nclass _LoginSignup extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    signupCred: {\r\n      username: '',\r\n      password: '',\r\n      fullname: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = this.state.loginCred\r\n    if (!username) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    const userCreds = { username, password }\r\n    try {\r\n      this.props.login(userCreds)\r\n      this.setState({ loginCred: { username: '', password: '' } })\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password, fullname } = this.state.signupCred\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' })\r\n    }\r\n    const signupCreds = { username, password, fullname }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"frm\" onSubmit={this.doSignup}>\r\n        <h2>Signup</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"fullname\"\r\n          value={this.state.signupCred.fullname}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Full name\"\r\n          autoComplete=\"fullname\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n          autoComplete=\"username\"\r\n        />\r\n        <br />\r\n        <button>Signup</button>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form className=\"frm\" onSubmit={this.doLogin}>\r\n        <h2>Login</h2>\r\n        <select\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n        >\r\n          <option value=\"\">Select User</option>\r\n          {this.props.users && this.props.users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n        </select>\r\n\r\n        <button>Login</button>\r\n      </form>\r\n\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    return (\r\n      <div className=\"login\">\r\n        <HomeHeader />\r\n        <h1>\r\n          TASKX\r\n        </h1>\r\n\r\n        <p>{this.state.msg}</p>\r\n        {loggedInUser && (\r\n          <div>\r\n            <h3>\r\n              Welcome {loggedInUser.fullname}\r\n              <button onClick={this.props.logout}>Logout</button>\r\n            </h3>\r\n          </div>\r\n        )}\r\n        {!loggedInUser && loginSection}\r\n        {!loggedInUser && signupSection}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    // isLoading: state.systemModule.isLoading\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)\r\n","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport { Home } from './pages/Home'\r\nimport { Board } from './pages/Board'\r\nimport { Boards } from './pages/Boards'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\n\r\n\r\nexport function App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <main className=\"main-app\">\r\n          <Switch>\r\n            <Route path=\"/board/:id\" component={Board} />\r\n            <Route path=\"/board\" component={Boards} />\r\n            <Route path=\"/login\" component={LoginSignup} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  boards: [],\r\n  templatesBoards: [],\r\n  selectedBoard: {},\r\n  filterBy: {}\r\n}\r\n\r\nexport function boardReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_TEMPLATES':\r\n      return { ...state, templatesBoards: action.boards }\r\n    case 'SET_BOARD':\r\n      return { ...state, selectedBoard: action.board }\r\n    case 'SET_FILTER':\r\n      return { ...state, filterBy: action.filterBy }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_SCORE':\r\n      return { ...state, loggedInUser: { ...state.loggedInUser, score: action.score } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { boardReducer } from './boardReducer'\r\nimport { userReducer } from './userReducer'\r\nimport { systemReducer } from './systemReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  systemModule: systemReducer,\r\n  boardModule: boardReducer,\r\n  userModule: userReducer\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './assets/styles/main.scss'\nimport { store } from './store/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}