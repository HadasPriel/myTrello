{"version":3,"sources":["assets/imgs/home sync /^/.*/.jpg$","assets/imgs/home/homeData.jpg","assets/imgs/home/homeData1.jpg","assets/imgs/home/homeNote.jpg","assets/imgs/home/homeTeam.jpg","services/httpService.js","services/userService.js","services/utilService.js","services/boardService.js","services/socketService.js","store/actions/boardActions.js","cmps/HomeHeader.jsx","cmps/home/HomeHero.jsx","cmps/home/AboutMe.jsx","cmps/AppFooter.jsx","cmps/home/AboutTasx.jsx","pages/Home.jsx","cmps/group/EditGroupTitle.jsx","cmps/cardEdit/CardLabelShowMin.jsx","store/actions/userActions.js","cmps/cardEdit/CardEditNav.jsx","cmps/cardEdit/AddDescription.jsx","cmps/cardEdit/EditLabelBar.jsx","cmps/cardEdit/LabelPalette.jsx","cmps/cardEdit/AddChecklistBar.jsx","cmps/cardEdit/AddCoverBar.jsx","cmps/cardEdit/CardLabelShow.jsx","cmps/cardEdit/TodoShow.jsx","cmps/cardEdit/TodoListShow.jsx","cmps/cardEdit/CardChecklistShow.jsx","cmps/cardEdit/AddDeutimeBar.jsx","cmps/cardEdit/CardDuedateShow.jsx","services/cloudinaryService.js","cmps/Uploader.jsx","cmps/cardEdit/AddImgBar.jsx","cmps/cardEdit/CardImgShow.jsx","cmps/cardEdit/AddMembersBar.jsx","cmps/cardEdit/CardMembersShow.jsx","cmps/cardEdit/ActivityTime.jsx","cmps/cardEdit/CardActivitiesShow.jsx","cmps/cardEdit/DeleteCardBar.jsx","pages/CardEdit.jsx","cmps/card/ChecklistSign.jsx","cmps/cardEdit/CardDuedateShowMin.jsx","cmps/card/CardPreview.jsx","cmps/card/CardList.jsx","cmps/group/AddCard.jsx","cmps/group/RemoveList.jsx","cmps/group/EditGroupNav.jsx","cmps/group/GroupPreview.jsx","cmps/group/AddNewGroup.jsx","cmps/group/GroupList.jsx","cmps/boardMenu/EditBoardTitle.jsx","cmps/boardMenu/AboutBoard.jsx","cmps/boardMenu/ChangeBoardBackground.jsx","cmps/boardMenu/ActivityPreview.jsx","cmps/boardMenu/ActivityBoard.jsx","cmps/board/BoardSideMenu.jsx","cmps/board/BoardFilter.jsx","cmps/AppHeader.jsx","cmps/dashboard/PieBoard.jsx","cmps/dashboard/BarBoard.jsx","cmps/dashboard/LineBoard.jsx","cmps/dashboard/BarLabels.jsx","cmps/dashboard/Dashboard.jsx","pages/Board.jsx","cmps/board/BoardPreview.jsx","cmps/board/BoardList.jsx","cmps/board/AddBoard.jsx","pages/Boards.jsx","pages/LoginSignup.jsx","App.jsx","serviceWorkerRegistration.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/reducers/index.js","store/store.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","userService","login","logout","signup","getUsers","getById","userId","remove","update","getLoggedinUser","increaseScore","user","_id","_saveLocalUser","by","score","userCred","sessionStorage","clear","setItem","JSON","stringify","parse","getItem","utilService","delay","ms","Promise","setTimeout","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","txt","possible","i","charAt","boardService","add","query","filterBy","queryParams","URLSearchParams","set","boardId","makeGroup","updateBoard","makeCard","cardTitle","title","description","comments","checklists","members","labels","createdAt","Date","now","dueDate","byMember","style","coverType","makeBoard","filterByCardTitle","makeActivity","board","updatedBoard","addedBoard","groupTitle","cards","card","getMiniUser","activity","loggedinUser","username","password","createdBy","boardTitle","bgUrl","color","accessibility","miniUser","newBoard","bgurl","groups","activities","unshift","filterRegex","RegExp","group","newGroup","filter","test","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoards","dispatch","boards","type","loadBoard","boardToChange","msg","boardToUpdate","HomeHeader","props","className","to","loggedInUser","backgroundImage","imgUrl","HomeHero","height","document","body","clientHeight","paddingTop","onClick","scrollToBottom","AboutMe","name","img","email","facebook","linkedin","star","src","alt","skil","href","AppFooter","AboutTasx","flexDiraction","section","require","default","_Home","state","isNewBoard","toggleNewBoard","setState","onLoadNewBoard","history","push","scrollTo","scrollHeight","templatesBoards","this","Component","mapDispatchToProps","Home","connect","boardModule","userModule","_EditGroupTitle","handleChange","ev","value","target","field","onSubmit","preventDefault","updateGroup","selectedBoard","toggleEditMode","placeholder","onChange","autoComplete","groupTitleToUpdate","groupId","groupToUpdateIdx","findIndex","EditGroupTitle","CardLabelShowMin","label","loadUsers","users","CardEditNav","toggleLabelPalette","toggleChecklistBar","toggleCoverBar","toggleAddDeutime","toggleAddMembers","toggleDeleteCard","toggleAddImg","_AddDescription","onAddDescription","newDescription","cardToSave","updateCard","toggleAddDescription","AddDescription","_EditLabelBar","boardToSave","currLabel","toggleEditLabel","required","autoFocus","EditLabelBar","_LabelPalette","isEditLabelShow","labelToEdit","addLable","find","openEditLabel","alredyOnCard","LabelPalette","_AddChecklistBar","checklist","todos","onAddChecklist","AddChecklistBar","_AddCoverBar","handleStyle","removeCover","AddCoverBar","_CardLabelShow","removeLable","labelId","labelsToSave","CardLabelShow","_TodoShow","todo","isDone","checked","checklistIndex","checklistId","todoIndex","removeTodo","TodoShow","TodoListShow","_CardChecklistShow","progress","removeChecklist","checklistsToSave","handleTaskChange","addTask","checklistToSave","then","todoId","todoToSave","getProgress","done","all","forEach","Checklist","round","prevProps","prevState","width","event","CardChecklistShow","AddDeutimeBar","useState","startDate","setStartDate","selected","onSelect","date","addDeuDate","inline","CardDuedateShow","month","duedate","getMonth","day","substring","urgent","cloudinaryService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","json","Uploader","isUploading","onUploadImg","files","secure_url","addImg","uploadStyle","objectFit","htmlFor","accept","display","AddImgBar","CardImgShow","_AddMembersBar","member","fullname","onAddMembers","currUser","newMembers","list","alreadyMember","AddMembersBar","_CardMembersShow","userImgStyle","CardMembersShow","ActivityTime","timeToPresent","time","getDate","hour","getHours","getMinutes","dateToPresent","hourToPresent","_CardActivitiesShow","CardActivitiesShow","_DeleteCardBar","deleteCard","onRemoveCard","cardId","err","DeleteCardBar","_CardEdit","isDescriptionShowing","isLabelPaletteShowing","isAddChecklistShowing","isCoverShowing","isAddDeutimeShowing","isAddImgShowing","isAddMembersShowing","isDeleteCardShowing","isActivitiesShowing","loadCard","currCard","groupToSave","cardsToSave","groupsToSave","createActivity","miniCard","stopProg","stopPropagation","prevprops","match","toggleCardEdit","isLabels","isChecklists","isDuedate","isMember","coverShow","bgColor","isImg","Fragment","CardEdit","ChecklistSign","CardDuedateShowMin","_CardPreview","isCardEtidShow","removeCard","cardBgc","cardCover","draggableId","String","index","direction","provided","draggableProps","dragHandleProps","ref","innerRef","updatedCardList","CardPreview","CardList","droppableId","droppableProps","_AddCard","addCard","toggleAddCardMode","onCancelAdd","newCard","AddCard","RemoveList","toggleDeleteBar","onRemoveGroup","_EditGroupNav","isOnAddCardMode","isDeleteBarShow","EditGroupNav","_GroupPreview","isEditMode","isEditGroupNavShow","groupHeight","updatedGroups","toggleEditGroupNav","maxHeight","GroupPreview","_AddNewGroup","addGroup","toggleAddGroupMode","groupToAdd","AddNewGroup","_GroupList","isOnAddGroupMode","onDragEnd","GroupList","_EditBoardTitle","EditBoardTitle","_AboutBoard","toggleAboutBoard","AboutBoard","_ChangeBoardBackground","onChooseBackground","toggleChangeBackground","background","ChangeBoardBackground","ActivityPreview","ActivityBoard","_BoardSideMenu","isAboutBoardShown","isChangeBackgroundShown","isBoardAnalysisShown","isDeleteBoardShown","toggleBoardAnalysis","toggleDeleteBoard","open","classname","toggleSideMenu","BoardSideMenu","_BoardFilter","filterByCardText","boardToFilter","BoardFilter","_AppHeader","userImgUrl","toggleDashboard","AppHeader","PieBoard","membersTaskMap","reduce","membersMapAcc","count","datasets","values","backgroundColor","hoverBackgroundColor","fontColor","options","text","fontSize","legend","ticks","precision","scales","yAxes","beginAtZero","userCallback","xAxes","BarBoard","groupCardMap","cardsMapAcc","myData","LineBoard","groupTimeMap","timeMapAcc","cardsInGroupSum","diff","BarLabels","labelsTitle","labelsTotal","_Dashboard","cardSum","todosAndCardsSum","total","complited","membersSum","Dashboard","_Board","isBoardMenuShown","isDashboardShown","result","destination","source","onDragGroups","onDragCards","onChangeBoard","updateBoardAfterSocket","startIndex","endIndex","groupToMove","splice","groupToMoveFromIdx","groupToMoveToIdx","cardToMove","params","boardStyle","backgroundPosition","backgroundSize","backgroundRepeat","changedBoard","Board","BoardPreview","BoardList","boardsForDisplay","_AddBoard","createBoard","backgroundImageUrl","AddBoard","_Boards","Boards","_LoginSignup","loginCred","signupCred","loginHandleChange","signupHandleChange","doLogin","userCreds","doSignup","signupCreds","removeUser","signupSection","loginSection","LoginSignup","App","path","component","Boolean","hostname","initialState","localLoggedinUser","isLoading","rootReducer","combineReducers","systemModule","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"+EAAA,IAAIA,EAAM,CACT,iBAAkB,IAClB,kBAAmB,IACnB,iBAAkB,IAClB,iBAAkB,KAInB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,iCCzBpB,OAAe,cAA0B,sC,iCCAzC,OAAe,cAA0B,uC,iCCAzC,OAAe,cAA0B,sC,iCCAzC,OAAe,cAA0B,sC,wMCEnCY,EACA,QAIFC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IAFxBF,EAAc,SAIlBC,EAAUC,GACX,OAAOC,EAAKF,EAAU,OAAQC,IALzBF,EAAc,SAOnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IARxBF,EAAc,SAUhBC,EAAUC,GACb,OAAOC,EAAKF,EAAU,SAAUC,I,SAIzBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAE0BN,EAAM,CACpBU,IAAI,GAAD,OAAKX,GAAL,OAAgBM,GACnBI,SACAH,SALZ,cAEcK,EAFd,yBAOeA,EAAIL,MAPnB,sCASQM,QAAQC,IAAR,qBAA0BJ,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFM,QAAQE,IAAR,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,QAC7BC,OAAOC,SAASC,OAAO,YAZnC,+D,sBCxBA,IAEaC,EAAc,CACvBC,M,4CACAC,O,2CACAC,O,4CACAC,SAaJ,WAEI,OAAOpB,EAAA,SAdPqB,QAiBJ,SAAiBC,GAEb,OAAOtB,EAAA,eAAwBsB,KAlB/BC,OAoBJ,SAAgBD,GAEZ,OAAOtB,EAAA,eAA2BsB,KArBlCE,SACAC,kBACAC,c,qDAsBWF,E,8EAAf,WAAsBG,GAAtB,SAAAvB,EAAA,sEAEiBJ,EAAA,eAAwB2B,EAAKC,KAAOD,GAFrD,OAEIA,EAFJ,OAIQF,IAAkBG,MAAQD,EAAKC,KAAKC,EAAeF,GAJ3D,4C,kEAOA,0CAAAvB,EAAA,6DAA6B0B,EAA7B,+BAxCyB,IAyCfH,EAAOF,KACRM,MAAQJ,EAAKI,MAAQD,GAAMA,EAFpC,SAGUN,EAAOG,GAHjB,gCAIWA,EAAKI,OAJhB,4C,kEAOA,WAAqBC,GAArB,eAAA5B,EAAA,sEAKuBJ,EAAiB,aAAcgC,GALtD,YAKUL,EALV,iDAMqBE,EAAeF,IANpC,4C,kEAQA,WAAsBK,GAAtB,eAAA5B,EAAA,sEAEuBJ,EAAiB,cAAegC,GAFvD,cAEUL,EAFV,yBAGWE,EAAeF,IAH1B,4C,kEAKA,sBAAAvB,EAAA,6DACI6B,eAAeC,QADnB,SAEiBlC,EAAiB,eAFlC,oF,sBAIA,SAAS6B,EAAeF,GAEpB,OADAM,eAAeE,QAAQ,eAAgBC,KAAKC,UAAUV,IAC/CA,EAGX,SAASF,IACL,OAAOW,KAAKE,MAAML,eAAeM,QAAQ,iBAxD7C1B,OAAOG,YAAcA,ECfd,IAAMwB,EAAc,CACvBC,MAKJ,WAA2B,IAAZC,EAAW,uDAAN,KAChB,OAAO,IAAIC,SAAQ,SAAAnD,GACfoD,WAAWpD,EAASkD,OANxBG,aAUJ,SAAsBC,EAAKC,GAGvB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,IAZhDM,OAeJ,WAGI,IAHyB,IAAbC,EAAY,uDAAH,EACjBC,EAAM,GACNC,EAAW,iEACNC,EAAI,EAAGA,EAAIH,EAAQG,IACxBF,GAAOC,EAASE,OAAOT,KAAKE,MAAMF,KAAKG,SAAWI,EAASF,SAE/D,OAAOC,IClBJ,IAAMI,EAAe,CAC1BC,I,4CACAC,MAgBF,WAAiC,IAAlBC,EAAiB,uDAAN,KACpBC,EAAc,IAAIC,gBAEtB,OADAD,EAAYE,IAAI,SAAUH,EAASvC,QAC5BtB,EAAA,gBAAyB8D,KAlBhCvC,OA0BF,SAAgB0C,GACd,OAAOjE,EAAA,gBAA4BiE,KA1BnC5C,QAqBF,SAAiB4C,GACf,OAAOjE,EAAA,gBAAyBiE,KArBhCC,YACAC,Y,4CACAC,SAqEF,SAAkBC,GAehB,MAdW,CACTtF,GAAI,IAAMyD,EAAYY,SACtBkB,MAAOD,EACPE,YAAa,GACbC,SAAU,GACVC,WAAY,GACZC,QAAS,GACTC,OAAQ,GACRC,UAAWC,KAAKC,MAChBC,QAAS,GACTC,SAAU,GACVC,MAAO,CAAEC,UAAW,SAhFtBC,U,8CACAC,kB,8CACAC,gB,4CAyBF,WAA2BC,GAA3B,eAAAlF,EAAA,sEAC6BJ,EAAA,gBAAyBsF,EAAM1D,KAAO0D,GADnE,cACQC,EADR,yBAESA,GAFT,4C,kEAIA,WAAmBD,GAAnB,eAAAlF,EAAA,sEAE2BJ,EAAA,QAA0BsF,GAFrD,cAEQE,EAFR,yBAQSA,GART,4C,sBAYA,SAAStB,EAAUuB,GAoBjB,MAnBY,CACV1G,GAAI,IAAMyD,EAAYY,SACtBkB,MAAOmB,EACPC,MAAO,CAAC,CACN3G,GAAI,IAAMyD,EAAYY,SACtBkB,MAAO,gBACPC,YAAa,GACbC,SAAU,GACVC,WAAY,GACZC,QAAS,GACTC,OAAQ,GACRC,UAAWC,KAAKC,MAChBC,QAAS,GACTC,SAAU,GACVC,MAAO,CAAEC,UAAW,U,SA6BXG,E,8EAAf,WAA4B/B,GAA5B,6BAAAlD,EAAA,6DAAiCuF,EAAjC,+BAAwC,GAAxC,KAEQ,IAAMnD,EAAYY,SAF1B,KAGeyB,KAAKC,MAHpB,KAISxB,EAJT,SAKoBsC,IALpB,+BAMUD,EALJE,EADN,CAEI9G,GAFJ,KAGI6F,UAHJ,KAIItB,IAJJ,KAKI0B,SALJ,KAMIW,KANJ,wBAQSE,GART,6C,+BAWeD,I,2EAAf,8BAAAxF,EAAA,2DACM0F,EAAe9E,EAAYS,mBADjC,qBAEmCqE,EAFnC,sCAEwD9E,EAAYC,MAAM,CAAE8E,SAAU,QAASC,SAAU,QAFzG,iCAEMC,EAFN,uBAGSA,GAHT,6C,kEAMA,WAAyBC,EAAYC,GAArC,uBAAA/F,EAAA,6DAGQuE,EADS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACjD/F,KAAI,SAAAwH,GAAW,MAAO,CAAErH,GAAIqH,EAAO9B,MAAO,GAAI+B,cAAe,OAHrF,SAKuBT,IALvB,cAKMU,EALN,OAMQC,EAAW,CACfjC,MAAO4B,EACPtB,UAAWC,KAAKC,MAChBmB,UAAWK,EACXrB,MAAO,CACLuB,MAAOL,GAETzB,QAAS,CAAC4B,GACVG,OAAQ,CAACvC,EAAU,aACnBwC,WAAY,GAEZ/B,UAjBJ,SAoByBU,EAAa,iBApBtC,cAoBQQ,EApBR,OAsBEU,EAASG,WAAWC,QAAQd,GAtB9B,UAwB2B7F,EAAA,QAA0BuG,GAxBrD,eAwBQf,EAxBR,yBAyBSA,GAzBT,6C,kEA8BA,WAAiCF,EAAOzB,GAAxC,eAAAzD,EAAA,6DACEI,QAAQC,IAAI,6BAA8B6E,GAC1C9E,QAAQC,IAAI,8BAA+BoD,GACvCA,EAASS,QACLsC,EAAc,IAAIC,OAAOhD,EAASS,MAAO,KAC/CgB,EAAMmB,OAASnB,EAAMmB,OAAO7H,KAAI,SAAAkI,GAC9B,IAAMC,EAAQ,eAAQD,GAEtB,OADAC,EAASrB,MAAQqB,EAASrB,MAAMsB,QAAO,SAAArB,GAAI,OAAIiB,EAAYK,KAAKtB,EAAKrB,UAC9DyC,MARb,kBAYSzB,GAZT,4C,oDClJa4B,EAMb,WACE,IAAIC,EAqBJ,MAnBsB,CACpBC,MADoB,WAElBD,EAASE,IAZ2C,GAY/B,CACnBtH,iBAAiB,KAGrBuH,GANoB,SAMjBC,EAAWC,GACZL,EAAOG,GAAGC,EAAWC,IAEvBC,IAToB,SAShBF,EAAWC,GACbL,EAAOM,IAAIF,EAAWC,IAExBE,KAZoB,SAYfH,EAAWrH,GACdiH,EAAOO,KAAKH,EAAWrH,IAEzByH,UAfoB,WAgBlBR,EAAS,OAzBcS,GCAtB,SAASC,IAA2B,IAAhBhE,EAAe,uDAAJ,GACpC,8CAAO,WAAMiE,GAAN,eAAA1H,EAAA,+EAEkBsD,EAAaE,MAAMC,GAFrC,OAEGkE,EAFH,OAGqB,6BAApBlE,EAASvC,QACXd,QAAQC,IAAI,QACZD,QAAQC,IAAIsH,GACZD,EAAS,CAAEE,KAAM,gBAAiBD,YAE/BD,EAAS,CAAEE,KAAM,aAAcD,WARjC,gDAWHvH,QAAQC,IAAI,kCAAZ,MAXG,yDAAP,sDAgBK,SAASwH,EAAUlJ,GACxB,8CAAO,WAAM+I,GAAN,eAAA1H,EAAA,+EAEiBsD,EAAarC,QAAQtC,GAFtC,OAEGuG,EAFH,OAIHwC,EAAS,CAAEE,KAAM,YAAa1C,UAJ3B,gDAOH9E,QAAQC,IAAI,iCAAZ,MAPG,yDAAP,sDAmHK,SAAS0D,GAAY+D,GAAqC,IAAtBC,EAAqB,uDAAf,GAAIxC,EAAW,uDAAJ,GAC1D,8CAAO,WAAMmC,GAAN,mBAAA1H,EAAA,kEAGCgI,EAAgBhG,KAAKE,MAAMF,KAAKC,UAAU6F,KAC1CC,EAJD,gCAKoBzE,EAAa2B,aAAa8C,EAAKxC,GALnD,OAKGE,EALH,OAMDuC,EAAc1B,WAAWC,QAAQd,GANhC,uBAQiBnC,EAAaS,YAAYiE,GAR1C,OAQG9C,EARH,OASH4B,EAAcQ,KAAK,eAAgBpC,GAThC,kDAYH9E,QAAQC,IAAI,wCAAZ,MAZG,0DAAP,sDCpIK,SAAS4H,GAAWC,GAGvB,OACI,yBAAQC,UAAU,6CAAlB,UACI,gCACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACvB,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,eAA5B,yBAGJ,sBAAKA,UAAU,eAAf,WACMD,EAAMG,cAAgB,cAAC,IAAD,CAAMD,GAAG,SAASD,UAAU,cAA5B,oBACvBD,EAAMG,cAAgB,cAAC,IAAD,CAAMD,GAAG,SAASD,UAAU,WAAWtD,MAAO,CAAEyD,gBAAgB,OAAD,OAASJ,EAAMG,aAAaE,OAA5B,MAA/D,qBChBhC,SAASC,GAASN,GAErB,OACI,0BAASrD,MAAO,CAAE4D,OAAQC,SAASC,KAAKC,aAAe,GAAIC,WAAYH,SAASC,KAAKC,aAAe,KAAOT,UAAU,YAArH,UACI,oBAAIA,UAAU,WAAd,kBACA,oFAEA,wBAAQA,UAAU,cAAcW,QAASZ,EAAMa,oBCNpD,SAASC,KAsBZ,OAGI,yBAASb,UAAU,WAAnB,SACI,sBAAKA,UAAU,iBAAf,UACI,mCACI,+CACA,wKAEJ,oBAAIA,UAAU,8BAAd,SA7BD,CACP,CACIc,KAAM,cACNC,IAAK,oHACLhG,IAAK,CAAC,2BAA4B,uDAAwD,yBAC1FiG,MAAO,qBACPC,SAAU,uCACVC,SAAU,0DAEd,CACIJ,KAAM,gBACNC,IAAK,oHACLhG,IAAK,CAAC,4BAA6B,kDAAmD,iDAAkD,mCACxIiG,MAAO,uBACPC,SAAU,kCACVC,SAAU,uDAeE7K,KAAI,SAAA8K,GAAI,OACR,qBAAInB,UAAU,2BAAd,UACI,qBAAKA,UAAU,WAAWoB,IAAKD,EAAKJ,IAAKM,IAAKF,EAAKJ,MACnD,sBAAKf,UAAU,MAAf,UACI,6BAAKmB,EAAKL,OAETK,EAAKpG,IAAI1E,KAAI,SAAAiL,GAAI,OACd,oBAAGtB,UAAU,OAAb,UAAgCsB,EAAhC,MAAyBA,MAG7B,sBAAKtB,UAAU,eAAf,UACI,mBAAGuB,KAAMJ,EAAKD,SAAUlB,UAAU,aAClC,mBAAGuB,KAAMJ,EAAKF,SAAUjB,UAAU,aAClC,mBAAGuB,KAAI,iBAAYJ,EAAKH,OAAShB,UAAU,kBAZTmB,EAAKL,gBClCpE,SAASU,KAEZ,OACI,wBAAQxB,UAAU,eCFnB,SAASyB,KAuBZ,OACI,yBAASzB,UAAU,4BAAnB,SACI,qBAAIA,UAAU,GAAd,UAvBS,CACb,CACIe,IAAK,WACLhF,MAAO,qBACPhB,IAAK,uKACL2G,cAAe,IAEnB,CACIX,IAAK,WACLhF,MAAO,0BACPhB,IAAK,wLACL2G,cAAe,WAEnB,CACIX,IAAK,YACLhF,MAAO,mCACPhB,IAAK,yHACL2G,cAAe,KAODrL,KAAI,SAAAsL,GAAO,OACjB,qBAAI3B,UAAS,wCAAmC2B,EAAQD,eAAxD,UACI,sBAAK1B,UAAU,MAAf,UACI,6BAAK2B,EAAQ5F,QACb,mBAAGiE,UAAU,GAAb,SAAiB2B,EAAQ5G,SAE7B,qBAAKiF,UAAS,WAAM2B,EAAQD,eAAiBN,IAAKQ,OAAQ,YAA0BD,EAAQZ,IAAnC,SAA8Cc,QAASR,IAAI,OAL1CM,EAAQZ,QAQ1F,qBAAIf,UAAS,gEAAb,UACI,gCACI,0DACA,2FAEJ,cAAC,IAAD,CAAMC,GAAG,SAAT,SACI,wBAAQD,UAAU,YAAlB,kCNrCxB1H,OAAOqG,cAAgBA,E,IOIjBmD,G,4MACJC,MAAQ,CACNC,YAAY,G,EAWdC,eAAiB,WACf,EAAKC,SAAS,CAAEF,YAAa,EAAKD,MAAMC,c,EAG1CG,eAAiB,SAACzG,GAChB,EAAKuG,iBACL,EAAKlC,MAAMqC,QAAQC,KAAnB,iBAAkC3G,K,EAGpCkF,eAAiB,WACftI,OAAOgK,SAAS,EAAG/B,SAASC,KAAK+B,cACjCtK,QAAQC,IAAI,EAAK6J,MAAMS,kB,kEAnBJ,IAAD,EAElBC,KAAK1C,MAAMT,WAAW,CAAEvG,OAAQ,6BAEhC,IAAMA,GAAS,UAAA0J,KAAK1C,MAAMG,oBAAX,eAAyB7G,MAAO,2BAC/CoJ,KAAK1C,MAAMT,WAAW,CAAEvG,a,+BAoBhB,IACAmH,EAAiBuC,KAAK1C,MAAtBG,aACR,OACE,sBAAKF,UAAU,YAAf,UACE,cAACF,GAAD,CAAYI,aAAcA,IAC1B,cAACG,GAAD,CAAUO,eAAgB6B,KAAK7B,iBAC/B,cAACa,GAAD,IACA,cAACZ,GAAD,IACA,cAACW,GAAD,W,GAtCYkB,aAwDdC,GAAqB,CACzBrD,cAGWsD,GAAOC,aAXI,SAAAd,GACtB,MAAO,CACLvC,OAAQuC,EAAMe,YAAYtD,OAC1BgD,gBAAiBT,EAAMe,YAAYN,gBACnCtC,aAAc6B,EAAMgB,WAAW7C,gBAOUyC,GAAzBE,CAA6Cf,I,SClEpDkB,GAAb,4MAEIjB,MAAQ,CACJhG,MAAO,IAHf,EAWIkH,aAAe,SAACC,GACZ,IAAMC,EAAQD,EAAGE,OAAOD,MAClBE,EAAQH,EAAGE,OAAOtC,KACxB,EAAKoB,SAAL,gBAAiBmB,EAAQF,KAdjC,EAiBIG,SAjBJ,uCAiBe,WAAOJ,GAAP,SAAArL,EAAA,yDACPqL,EAAGK,iBACE,EAAKxB,MAAMhG,MAFT,iEAGD,EAAKgE,MAAMyD,YAAY,EAAKzB,MAAMhG,MAAO,EAAKgE,MAAMxB,MAAM/H,GAAI,EAAKuJ,MAAM0D,eAHxE,OAIP,EAAK1D,MAAM2D,iBAJJ,2CAjBf,wHAMyB,IACT3H,EAAU0G,KAAK1C,MAAMxB,MAArBxC,MACR0G,KAAKP,SAAS,CAAEnG,YARxB,+BA0BQ,OACI,qBAAKiE,UAAU,mBAAf,SACI,uBAAMsD,SAAUb,KAAKa,SAArB,UACI,uBAAOtD,UAAU,kBAAkB2D,YAAY,cAAclE,KAAK,OAAOmE,SAAUnB,KAAKQ,aAAcE,MAAOV,KAAKV,MAAMhG,MAAO+E,KAAK,QAAQ+C,aAAa,QACzJ,wBAAQ7D,UAAU,WAAlB,2BA9BpB,GAAqC0C,aA2C/BC,GAAqB,CACvBa,YPsBG,SAAqBM,EAAoBC,EAASpE,GACvD,8CAAO,WAAMJ,GAAN,mBAAA1H,EAAA,sEAGCgI,EAAgBhG,KAAKE,MAAMF,KAAKC,UAAU6F,IACxCqE,EAAmBnE,EAAc3B,OAAO+F,WAAU,SAAA1F,GAAK,OAAIA,EAAM/H,KAAOuN,KAC9ElE,EAAc3B,OAAO8F,GAAkBjI,MAAQ+H,EAL5C,SAOiB3I,EAAaS,YAAYiE,GAP1C,OAOG9C,EAPH,OASHwC,EAAS,CAAEE,KAAM,YAAa1C,UAT3B,kDAYH9E,QAAQC,IAAI,mCAAZ,MAZG,0DAAP,wDOnBWgM,GAAiBrB,aAXN,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAScd,GAAzBE,CAA6CG,ICjDpE,SAASmB,GAAiBpE,GAE7B,OACI,oBAAIC,UAAU,kBAAd,SACKD,EAAM3D,OAAO/F,KAAI,SAAA+N,GACd,OACI,oBACmBpE,UAAS,gBAAWoE,EAAM5N,KAApC4N,EAAM5N,SCL5B,SAAS6N,KACd,8CAAO,WAAM9E,GAAN,eAAA1H,EAAA,sEAEH0H,EAAS,CAAEE,KAAM,kBAFd,SAGiBhH,EAAYI,WAH7B,OAGGyL,EAHH,OAIH/E,EAAS,CAAEE,KAAM,YAAa6E,UAJ3B,gDAMHrM,QAAQC,IAAI,gCAAZ,MANG,yBAQHqH,EAAS,CAAEE,KAAM,iBARd,4EAAP,sDCJK,SAAS8E,GAAYxE,GAGxB,OACI,sBAAKC,UAAU,4BAAf,UACI,6CACA,wBAAQA,UAAU,WAAWW,QAASZ,EAAMyE,mBAA5C,qBACA,wBAAQxE,UAAU,eAAeW,QAASZ,EAAM0E,mBAAhD,wBACA,wBAAQzE,UAAU,WAAWW,QAASZ,EAAM2E,eAA5C,oBACA,wBAAQ1E,UAAU,aAAaW,QAASZ,EAAM4E,iBAA9C,uBACA,wBAAQ3E,UAAU,aAAaW,QAASZ,EAAM6E,iBAA9C,sBAEA,wBAAQ5E,UAAU,YAAYW,QAASZ,EAAM8E,iBAA7C,qBACA,wBAAQ7E,UAAU,SAASW,QAASZ,EAAM+E,aAA1C,uB,ICVNC,G,4MACFhD,MAAQ,CACJ/F,YAAa,CAAEjB,IAAK,K,EASxBkI,aAAe,SAACC,GACZ,IAAMlH,EAAW,eAAQ,EAAK+F,MAAM/F,aACpCA,EAAYkH,EAAGE,OAAOtC,MAAQoC,EAAGE,OAAOD,MAExC,EAAKjB,SAAS,CAAElG,iB,EAGpBgJ,iB,uCAAmB,WAAO9B,GAAP,iBAAArL,EAAA,6DACfqL,EAAGK,iBACG0B,EAFS,eAEa,EAAKlD,MAAM/F,cACjCkJ,EAHS,eAGS,EAAKnF,MAAM3C,OACxBpB,YAAciJ,EAAelK,IAJzB,kBAML,EAAKgF,MAAMoF,WAAWD,GANjB,OAOX,EAAKnF,MAAMqF,uBAPA,kDASXnN,QAAQC,IAAR,MATW,0D,wHAZf,IAAM8D,EAAeyG,KAAK1C,MAAM3C,KAAKpB,YAAeyG,KAAK1C,MAAM3C,KAAKpB,YAAc,GAClFyG,KAAKP,SAAS,CAAElG,YAAa,CAAEjB,IAAKiB,O,+BA2B9B,IACEA,EAAgByG,KAAKV,MAArB/F,YACR,OACI,uBAAMgE,UAAU,uBAAuBsD,SAAUb,KAAKuC,iBAAtD,UACI,0BAAUlE,KAAK,MAAMqC,MAAOnH,EAAYjB,IACpC4I,YAAY,qCAAqCC,SAAUnB,KAAKQ,eACpE,wBAAQjD,UAAU,UAAlB,wB,GAxCc0C,aAsDjB2C,GAAiBxC,aAPN,SAAAd,GACpB,MAAO,KAGgB,GAGGc,CAA6CkC,ICpDrEO,G,4MACFvD,MAAQ,CACJqC,MAAO,CAAErI,MAAO,K,EASpBkH,a,uCAAe,WAAOC,GAAP,iBAAArL,EAAA,6DACLuM,EADK,eACQ,EAAKrC,MAAMqC,QACxBlB,EAAGE,OAAOtC,MAAQoC,EAAGE,OAAOD,MAFvB,SAIL,EAAKjB,SAAS,CAAEkC,UAJX,cAMLmB,EANK,eAMc,EAAKxF,MAAMhD,QACxBX,OAASmJ,EAAYnJ,OAAO/F,KAAI,SAAAmP,GACxC,OAAIA,EAAUhP,KAAO4N,EAAM5N,GAAWgP,EAC1BpB,KAEhBnM,QAAQC,IAAIqN,GAXD,mBAaD,EAAKxF,MAAMnE,YAAY2J,GAbtB,0DAgBPtN,QAAQC,IAAR,MAhBO,0D,wHALX,IAAMkM,EAAK,eAAQ3B,KAAK1C,MAAMqE,OAC9BnM,QAAQC,IAAIkM,GACZ3B,KAAKP,SAAS,CAAEkC,Y,+BAyBhB,OACI,0BAASpE,UAAU,yBAAnB,UACI,yBAAQA,UAAU,UAAlB,UACI,4CACA,wBAAQW,QAAS8B,KAAK1C,MAAM0F,gBAA5B,kBAEJ,+BACI,0CACA,uBAAOhG,KAAK,OAAOqB,KAAK,QAAQqC,MAAOV,KAAKV,MAAMqC,MAAMrI,MAAO4H,YAAY,cACnEC,SAAUnB,KAAKQ,aAAcY,aAAa,MAAM6B,UAAQ,EAACC,WAAS,gB,GA1ClEjD,aA0DfkD,GAAe/C,aAPJ,SAAAd,GACpB,MAAO,KAGgB,GAGCc,CAA6CyC,IC3DnEO,G,4MACF9D,MAAQ,CACJ+D,iBAAiB,EACjBC,YAAa,M,EAQjBC,SAAW,SAAC5B,GACRnM,QAAQC,IAAIkM,GACZ,IAAMc,EAAU,eAAQ,EAAKnF,MAAM3C,MAC9B8H,EAAW9I,OAES8I,EAAW9I,OAAO6J,MAAK,SAAAT,GAAS,OAAIA,EAAUhP,KAAO4N,EAAM5N,MAC9D0O,EAAW9I,OAAS8I,EAAW9I,OAAOqC,QAAO,SAAA+G,GAAS,OAAIA,EAAUhP,KAAO4N,EAAM5N,MAC9F0O,EAAW9I,OAAOiG,KAAK+B,GAJRc,EAAW9I,OAAS,CAACgI,GAM7CnM,QAAQC,IAAI,aAAcgN,GAC1B,EAAKnF,MAAMoF,WAAWD,EAAY,gB,EAGtCO,gBAAkB,WACd,EAAKvD,SAAS,CAAE4D,iBAAkB,EAAK/D,MAAM+D,mB,EAGjDI,c,uCAAgB,WAAO9B,GAAP,SAAAvM,EAAA,sEACN,EAAKqK,SAAS,CAAE6D,YAAa3B,IADvB,OAEZ,EAAKqB,kBAFO,2C,wHArBZxN,QAAQC,IAAIuK,KAAK1C,MAAMhD,S,+BA0BjB,IAAD,OAEL,OACI,0BAASiD,UAAU,yBAAnB,UACI,yBAAQA,UAAU,UAAlB,UACI,wCACA,wBAAQW,QAAS8B,KAAK1C,MAAMyE,mBAA5B,kBAEJ,+BACI,+BACK/B,KAAK1C,MAAMhD,MAAMX,OAAO/F,KAAI,SAAA+N,GAAU,IAAD,EAC5B+B,GAAe,UAAC,EAAKpG,MAAM3C,KAAKhB,cAAjB,aAAC,EAAwB6J,MAAK,SAAAT,GAAS,OAAIA,EAAUhP,KAAO4N,EAAM5N,OAAO,eAAiB,GAC/G,OACI,+BACI,sBAAKwJ,UAAS,UAAKoE,EAAM5N,IAAMmK,QAAS,WAAQ,EAAKqF,SAAS5B,IAA9D,UAAyEA,EAAMrI,MAA/E,IAAsF,sBAAMiE,UAAS,UAAKmG,QAC1G,wBAAQnG,UAAU,kBAAkBW,QAAS,WAAQ,EAAKuF,cAAc9B,QAFnEA,EAAM5N,OAMtBiM,KAAKV,MAAM+D,iBAAmB,cAACF,GAAD,CAAcH,gBAAiBhD,KAAKgD,gBAAiBrB,MAAO3B,KAAKV,MAAMgE,YAAahJ,MAAO0F,KAAK1C,MAAMhD,MAAOnB,YAAa6G,KAAK1C,MAAMnE,0B,GApDhK8G,aAoEf0D,GAAevD,aAPJ,SAAAd,GACpB,MAAO,KAGgB,GAGCc,CAA6CgD,ICpEnEQ,G,4MACFtE,MAAQ,CACJuE,UAAW,CAAEvK,MAAO,GAAIwK,MAAO,K,EAGnCtD,aAAe,SAACC,GACZ,IAAMoD,EAAS,eAAQ,EAAKvE,MAAMuE,WAClCA,EAAUpD,EAAGE,OAAOtC,MAAQoC,EAAGE,OAAOD,MAEtC,EAAKjB,SAAS,CAAEoE,e,EAGpBE,eAAiB,SAACtD,GACdA,EAAGK,iBACH,IAAM+C,EAAS,aAAK9P,GAAIyD,EAAYY,UAAa,EAAKkH,MAAMuE,WACtDpB,EAAU,eAAQ,EAAKnF,MAAM3C,MACnC8H,EAAWhJ,WAAcgJ,EAAWhJ,WAAZ,sBAA8BgJ,EAAWhJ,YAAzC,CAAqDoK,IAAa,CAACA,GAE3F,EAAKvG,MAAMoF,WAAWD,EAAY,mBAClC,EAAKhD,SAAS,CAAEoE,UAAW,CAAEvK,MAAO,GAAIwK,MAAO,MAC/C,EAAKxG,MAAM0E,sB,uDAOX,OACI,uBAAMzE,UAAU,WAAWsD,SAAUb,KAAK+D,eAA1C,UACI,yBAAQxG,UAAU,UAAlB,UACI,+CACA,wBAAQW,QAAS8B,KAAK1C,MAAM0E,mBAA5B,kBAGJ,iCACI,0CACA,uBAAOhF,KAAK,OAAOqB,KAAK,QAAQqC,MAAOV,KAAKV,MAAMuE,UAAUvK,MAAO4H,YAAY,cACvEC,SAAUnB,KAAKQ,aAAcY,aAAa,MAAM6B,UAAQ,EAACC,WAAS,OAE1E,wBAAQ3F,UAAU,UAAlB,2B,GAvCW0C,aAsDlB+D,GAAkB5D,aAPP,SAAAd,GACpB,MAAO,KAGgB,GAGIc,CAA6CwD,ICvDtEK,G,4MACF3E,MAAQ,G,EAOR4E,Y,uCAAc,WAAOzD,GAAP,eAAArL,EAAA,6DACJqN,EADI,eACc,EAAKnF,MAAM3C,OACxBV,MAASwI,EAAWxI,MAAZ,YAAC,eAAyBwI,EAAWxI,OAArC,mBAA6CwG,EAAGE,OAAOtC,KAAOoC,EAAGE,OAAOD,QAAxE,gBAAqFD,EAAGE,OAAOtC,KAAOoC,EAAGE,OAAOD,OAFzH,SAGJ,EAAKpD,MAAMoF,WAAWD,GAHlB,2C,wDAMd0B,Y,uCAAc,WAAO1D,GAAP,eAAArL,EAAA,6DACVqL,EAAGK,kBACG2B,EAFI,eAEc,EAAKnF,MAAM3C,OACxBV,MAAQ,CAAEC,UAAW,OAHtB,SAIJ,EAAKoD,MAAMoF,WAAWD,GAJlB,2C,0JAWV,OACI,sBAAKlF,UAAU,yBAAf,UACI,yBAAQA,UAAU,UAAlB,UACI,uCACA,wBAAQW,QAAS8B,KAAK1C,MAAM2E,eAA5B,kBAEJ,wBAAQ/D,QAAS8B,KAAKmE,YAAa5G,UAAU,kBAA7C,2BACA,sCACA,iCACI,wBAAOA,UAAU,eAAjB,UACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBACf,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,YACf,qBAAKA,UAAU,kBAGvB,uBAAOP,KAAK,QAAQqB,KAAK,YAAYqC,MAAM,OAAOxC,QAAS8B,KAAKkE,iBAEpE,wBAAO3G,UAAU,eAAjB,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,gBACf,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,YACf,qBAAKA,UAAU,kBAGvB,uBAAOP,KAAK,QAAQqB,KAAK,YAAYqC,MAAM,MAAMxC,QAAS8B,KAAKkE,oBAGvE,wCACA,+BACI,sBAAK3G,UAAU,SAAf,UACI,uBAAOA,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,gBAErE,uBAAO3G,UAAU,gBAAjB,SACI,uBAAOP,KAAK,QAAQqB,KAAK,UAAUqC,MAAM,UAAUxC,QAAS8B,KAAKkE,4B,GAtFlEjE,aAuGdmE,GAAchE,aAPH,SAAAd,GACpB,MAAO,KAGgB,GAGAc,CAA6C6D,ICvGlEI,G,4MAEFC,YAAc,SAACC,GACX,IAAM9B,EAAU,eAAQ,EAAKnF,MAAM3C,MAC7B6J,EAAe/B,EAAW9I,OAAOqC,QAAO,SAAA2F,GAAK,OAAIA,EAAM5N,KAAOwQ,KACpE9B,EAAW9I,OAAS6K,EACpB,EAAKlH,MAAMoF,WAAWD,I,uDAItB,OACI,oBAAIlF,UAAU,kBAAd,SACKyC,KAAK1C,MAAM3D,OAAO/F,KAAI,SAAA+N,GACnB,OACI,oBAAmBpE,UAAS,qBAAgBoE,EAAM5N,GAAtB,sCAA5B,SACI,mBAAGwJ,UAAU,cAAb,SAA4BoE,EAAMrI,SAD7BqI,EAAM5N,a,GAdVkM,aAkChBwE,GAAgBrE,aAPL,SAAAd,GACpB,MAAO,KAGgB,GAGEc,CAA6CiE,IClCpEK,G,4MACFpF,MAAQ,G,EAQRkB,a,uCAAe,WAAOC,GAAP,qBAAArL,EAAA,6DACLuP,EADK,eACO,EAAKrF,MAAMqF,OACxBC,OAASnE,EAAGE,OAAOkE,QAFb,SAGL,EAAKpF,SAAS,CAAEkF,SAHX,cAKLlC,EALK,eAKa,EAAKnF,MAAM3C,MAC7BmK,EAAiBrC,EAAWhJ,WAAW+H,WAAU,SAAAqC,GAAS,OAAIA,EAAU9P,KAAO,EAAKuJ,MAAMyH,eAC1FC,EAAYvC,EAAWhJ,WAAWqL,GAAgBhB,MAAMtC,WAAU,SAAAmD,GAAI,OAAIA,EAAK5Q,KAAO,EAAKuL,MAAMqF,KAAK5Q,MAC5G0O,EAAWhJ,WAAWqL,GAAgBhB,MAAMkB,GAAa,EAAK1F,MAAMqF,KARzD,mBAUD,EAAKrH,MAAMoF,WAAWD,GAVrB,0DAYPjN,QAAQC,IAAR,MAZO,0D,wHAJXuK,KAAKP,SAAS,CAAEkF,KAAM3E,KAAK1C,MAAMqH,S,+BAwB3B,IAAD,OACGA,EAAS3E,KAAKV,MAAdqF,KACR,OAAKA,EAED,qBAAIpH,UAAU,4CAAd,UACI,uBAAMA,UAAU,UAAhB,UACI,uBAAOP,KAAK,WAAWqB,KAAK,SAASqC,MAAOiE,EAAKC,OAAQC,QAASF,EAAKC,OAAQzD,SAAUnB,KAAKQ,eAC9F,oBAAIjD,UAAS,UAAKoH,EAAKC,QAAvB,SAAmCD,EAAKrM,SAE5C,sBAAMiF,UAAU,MAAhB,SACI,wBAAQA,UAAU,UAAUW,QAAS,WAAQ,EAAKZ,MAAM2H,WAAWN,EAAK5Q,GAAI,EAAKuJ,MAAMyH,qBARjF,iD,GA/BF9E,aAsDXiF,GAAW9E,aAPA,SAAAd,GACpB,MAAO,KAGgB,GAGHc,CAA6CsE,ICxD9D,SAASS,GAAa7H,GAAQ,IAGzBuG,EAA4CvG,EAA5CuG,UAAWlJ,EAAiC2C,EAAjC3C,KAAM+H,EAA2BpF,EAA3BoF,WAAYuC,EAAe3H,EAAf2H,WACrC,OACI,oBAAI1H,UAAU,OAAd,SACKsG,EAAUC,MAAMlQ,KAAI,SAAA+Q,GAAI,OAAI,cAACO,GAAD,CAAwBP,KAAMA,EACvDhK,KAAMA,EAAMoK,YAAalB,EAAU9P,GACnC2O,WAAYA,EAAYuC,WAAYA,GAFIN,EAAK5Q,S,ICFvDqR,G,4MACF9F,MAAQ,CACJqF,KAAM,CAAErM,IAAK,GAAIsM,QAAQ,GACzBS,SAAU,G,EAadC,gBAAkB,SAACP,GAEf,IAAMtC,EAAU,eAAQ,EAAKnF,MAAM3C,MAC7B4K,EAAmB9C,EAAWhJ,WAAWuC,QAAO,SAAA6H,GAAS,OAAIA,EAAU9P,KAAOgR,KAEpFtC,EAAWhJ,WAAa8L,EACxB/P,QAAQC,IAAI,aAAcgN,GAC1B,EAAKnF,MAAMoF,WAAWD,I,EAG1B+C,iBAAmB,SAAC/E,GAChB,IAAMkE,EAAI,eAAQ,EAAKrF,MAAMqF,MACN,WAAnBlE,EAAGE,OAAOtC,KAAmBsG,EAAKC,OAASnE,EAAGE,OAAOkE,QACpDF,EAAKlE,EAAGE,OAAOtC,MAAQoC,EAAGE,OAAOD,MAEtC,EAAKjB,SAAS,CAAEkF,U,EAGpBc,QAAU,SAAChF,EAAIsE,GACXtE,EAAGK,iBAEH,IAAM6D,EAAI,2BAAQ,EAAKrF,MAAMqF,MAAnB,IAAyB5Q,GAAIyD,EAAYY,WAC7CqK,EAAU,eAAQ,EAAKnF,MAAM3C,MAC7B+K,EAAkBjD,EAAWhJ,WAAW+J,MAAK,SAAAK,GAAS,OAAIA,EAAU9P,KAAOgR,KACjFW,EAAgB5B,MAAS4B,EAAgB5B,MAAjB,sBAA8B4B,EAAgB5B,OAA9C,CAAqDa,IAAQ,CAACA,GACtF,IAAMY,EAAmB9C,EAAWhJ,WAAW7F,KAAI,SAAAiQ,GAC/C,OAAIA,EAAU9P,KAAOgR,EAAoBW,EAC7B7B,KAEhBpB,EAAWhJ,WAAa8L,EAExB/P,QAAQC,IAAI,aAAcgN,GAC1B,EAAKnF,MAAMoF,WAAWD,GACjBkD,KAAK,EAAKlG,SAAS,CAAEkF,KAAM,CAAErM,IAAK,GAAIsM,QAAQ,O,EAIvDK,WAAa,SAACW,EAAQb,GAClB,IAAMtC,EAAU,eAAQ,EAAKnF,MAAM3C,MAC7BmK,EAAiBrC,EAAWhJ,WAAW+H,WAAU,SAAAqC,GAAS,OAAIA,EAAU9P,KAAOgR,KAC/Ec,EAAapD,EAAWhJ,WAAWqL,GAAgBhB,MAAM9H,QAAO,SAAA2I,GAAI,OAAIA,EAAK5Q,KAAO6R,KAC1FnD,EAAWhJ,WAAWqL,GAAgBhB,MAAQ+B,EAC9C,EAAKvI,MAAMoF,WAAWD,I,EAG1BqD,YAAc,WACV,IAAIC,EAAO,EACPC,EAAM,EACV,EAAK1I,MAAM7D,WAAWwM,SAAQ,SAAAC,GAC1BA,EAAUpC,MAAMmC,SAAQ,SAAAtB,IACA,IAAhBA,EAAKC,QAAiBmB,IAC1BC,UAGR,IAAMX,EAAWrN,KAAKmO,MAAMJ,EAAOC,EAAM,KACzC,EAAKvG,SAAS,CAAE4F,c,kEAjEhBrF,KAAK8F,gB,yCAGUM,EAAWC,GACtBD,IAAcpG,KAAK1C,OACnB0C,KAAK8F,gB,+BA+DH,IAAD,SACsB9F,KAAKV,MAAxBqF,EADH,EACGA,KAAMU,EADT,EACSA,SACRU,EAAqB,MAAbV,EAAoB,OAAS,GAC3C,OACI,qBAAI9H,UAAU,iCAAd,UAEI,sBAAKA,UAAU,yBAAf,UACI,yCAAU8H,EAAV,OACA,qBAAK9H,UAAU,kBAAf,SAAiC,qBAAKA,UAAS,yBAAoBwI,GAAQ9L,MAAO,CAAEqM,MAAM,GAAD,OAAKjB,EAAL,aAE5FrF,KAAK1C,MAAM7D,WAAW7F,KAAI,SAAAiQ,GACvB,OACI,qBAAuBtG,UAAU,mBAAjC,UACI,yBAAQA,UAAU,qBAAlB,UACI,qBAAIA,UAAU,kBAAd,cAAmCsG,EAAUvK,SAC7C,wBAAQiE,UAAU,WAAWW,QAAS,WAAQ,EAAKoH,gBAAgBzB,EAAU9P,KAA7E,uBAEJ,cAACoR,GAAD,CAActB,UAAWA,EAAWlJ,KAAM,EAAK2C,MAAM3C,KAAM+H,WAAY,EAAKpF,MAAMoF,WAC9EuC,WAAY,EAAKA,aACrB,uBAAMpE,SAAU,SAAC0F,GAAY,EAAKd,QAAQc,EAAO1C,EAAU9P,KAA3D,UACI,uBAAOiJ,KAAK,OAAOqB,KAAK,MAAMqC,MAAOiE,EAAKrM,IAAK6I,SAAU,EAAKqE,iBAC1DtE,YAAY,cAAcE,aAAa,MAAM6B,UAAQ,IACzD,wBAAQ1F,UAAU,UAAlB,sBAVCsG,EAAU9P,c,GAtFVkM,aAoHpBuG,GAAoBpG,aAPT,SAAAd,GACpB,MAAO,KAGgB,GAGMc,CAA6CgF,I,sCCpHvE,SAASqB,GAAcnJ,GAAQ,IAAD,EAKCoJ,mBAAS,IAAI7M,MALd,oBAK1B8M,EAL0B,KAKfC,EALe,KAQjC,OACI,sBAAKrJ,UAAU,WAAf,UACI,yBAAQA,UAAU,UAAlB,UACI,0CACA,wBAAQW,QAASZ,EAAM4E,iBAAvB,kBAGJ,+BACI,cAAC,KAAD,CACI2E,SAAUF,EACVG,SAAU,SAAAC,GAAI,OAAIH,GAAa,WAAQtJ,EAAM0J,WAAWD,OACxDE,QAAM,SCrBnB,SAASC,GAAgB5J,GAAO,IAS3B3C,EAAS2C,EAAT3C,KAEJwM,EAAQ,GACZ,OAFU,IAAItN,KAAKc,EAAKyM,SAASC,WAAa,GAG1C,KAAK,EAAGF,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,GAAIA,EAAQ,MAAO,MACxB,KAAK,GAAIA,EAAQ,MAAO,MACxB,KAAK,GAAIA,EAAQ,MAGrB,IAAMG,EAAM3M,EAAKyM,QAAQG,UAAU,EAAG,IAEhCC,EADiB,IAAI3N,KAAKc,EAAKyM,SAAWvN,KAAKC,MACrB,MAAuB,SAAW,GAGlE,OACI,mBAAGyD,UAAS,qBAAgBiK,EAAhB,KAAZ,oBAA4CL,EAA5C,YAAqDG,KCtCtD,IAAMG,GAAoB,CAC/BC,U,4FAEF,WAAyBC,GAAzB,qBAAAvS,EAAA,4DACqB,YACbwS,EAFR,0CACqB,YADrB,kBAIQC,EAAW,IAAIC,UACZC,OAAO,OAAQJ,GACxBE,EAASE,OAAO,gBAAiB,YANnC,kBAQsBC,MAAMJ,EAAY,CAClCvS,OAAQ,OACR0I,KAAM8J,IAVZ,cAQUtS,EARV,iBAYuBA,EAAI0S,OAZ3B,eAYU/S,EAZV,yBAaWA,GAbX,kCAgBIM,QAAQC,IAAR,MAhBJ,2D,sBCAO,IAAMyS,GAAb,4MACE5I,MAAQ,CACN3B,OAAQ,KACRE,OAAQ,IACRyI,MAAO,IACP6B,aAAa,GALjB,EAOEC,YAPF,uCAOgB,WAAM3H,GAAN,qBAAArL,EAAA,6DACZ,EAAKqK,SAAS,CAAE0I,aAAa,IADjB,SAEgCV,GAAkBC,UAAUjH,EAAGE,OAAO0H,MAAM,IAF5E,gBAEJC,EAFI,EAEJA,WAAYzK,EAFR,EAEQA,OAAQyI,EAFhB,EAEgBA,MAC5B,EAAK7G,SAAS,CAAE9B,OAAQ2K,EAAYH,aAAa,EAAOtK,SAAQyI,UAChE,EAAKhJ,MAAMiL,OAAOD,GAJN,2CAPhB,6GAcW,MAEyBtI,KAAKV,MAA7B3B,EAFD,EAECA,OAAQwK,EAFT,EAESA,YACVK,EAAc,CAClB9K,gBAAgB,OAAD,OAASC,EAAT,KACf8K,UAAW,SAEb,OACE,sBAAKlL,UAAU,4CACbtD,MAAOuO,EADT,UAGE,uBAAOE,QAAQ,gBAAf,SACGP,EAAc,gBAAkB,iBAEnC,uBAAOhH,SAAUnB,KAAKoI,YACpBpL,KAAK,OAAO2L,OAAO,UAAU5U,GAAG,gBAAgBkG,MAAO,CAAE2O,QAAS,iBA7B5E,GAA8B3I,aCGvB,SAAS4I,GAAUvL,GAItB,OACI,sBAAKC,UAAU,WAAf,UACI,yBAAQA,UAAU,UAAlB,UACI,8CACA,wBAAQW,QAASZ,EAAM+E,aAAvB,kBAGJ,+BACI,cAAC,GAAD,CAAUkG,OAAQjL,EAAMiL,cCbjC,SAASO,GAAYxL,GAAQ,IAI1BgB,EADWhB,EAAT3C,KACS2D,IAGjB,OACI,sBAAMf,UAAU,UAAhB,SACI,qBAAKA,UAAU,OAAOoB,IAAKL,EAAKM,IAAI,O,ICT1CmK,G,4MACFzJ,MAAQ,CACJ0J,OAAQ,CAAEC,SAAU,K,EAKxBzI,aAAe,SAACC,GACZ,IAAMuI,EAAM,eAAQ,EAAK1J,MAAM0J,QAC/BA,EAAOvI,EAAGE,OAAOtC,MAAQoC,EAAGE,OAAOD,MAEnC,EAAKjB,SAAS,CAAEuJ,Y,EAGpBE,aAAe,SAACvS,GAAU,IACdgE,EAAS,EAAK2C,MAAd3C,KACF8H,EAAU,eAAQ9H,GAExB,GADqBA,EAAKjB,QAAQ8J,MAAK,SAAA2F,GAAQ,OAAIA,EAASvS,MAAQD,EAAKC,OACvD,CACd,IAAMwS,EAAazO,EAAKjB,QAAQsC,QAAO,SAAAmN,GAAQ,OAAIA,EAASvS,MAAQD,EAAKC,OACzE6L,EAAW/I,QAAU0P,EACrB,EAAK3J,SAAS,CAAEuJ,OAAQ,CAAEC,SAAU,UAEjC,CACH,IAAM3N,EAAW,CAAE1E,IAAKD,EAAKC,IAAKqS,SAAUtS,EAAKsS,SAAUtL,OAAQhH,EAAKgH,QACxE8E,EAAW/I,QAAW+I,EAAW/I,QAAZ,sBAA2B+I,EAAW/I,SAAtC,CAA+C4B,IAAY,CAACA,GAErF,EAAKgC,MAAMoF,WAAWD,EAAtB,gBAA2C,EAAKnD,MAAM0J,OAAOC,WAC7D,EAAKxJ,SAAS,CAAEuJ,OAAQ,CAAEC,SAAU,O,uDAG9B,IAAD,SACqCjJ,KAAK1C,MAAvC6E,EADH,EACGA,iBAAkBN,EADrB,EACqBA,MAAOlH,EAD5B,EAC4BA,KAEjC,OAEI,sBAAK4C,UAAU,2BAAf,UACI,yBAAQA,UAAU,UAAlB,UACI,6CACA,wBAAQW,QAASiE,EAAjB,kBAGJ,iCACI,4CACA,uBAAOkH,KAAK,UAAUhL,KAAK,WAAWqC,MAAOV,KAAKV,MAAM0J,OAAOC,SACvD9H,SAAUnB,KAAKQ,aAAc0C,WAAS,EAAC9B,aAAa,WAE5D,6BACKS,EAAMjO,KAAI,SAAA+C,GAAS,IAAD,EACT2S,GAAgB,UAAC3O,EAAKjB,eAAN,aAAC,EAAc8J,MAAK,SAAA2F,GAAQ,OAAIA,EAASF,WAAatS,EAAKsS,aAAa,gBAAkB,GAChH,OACI,oBAAI1L,UAAW+L,EAA8B5I,MAAO/J,EAAKsS,SAAU/K,QAAS,WAAQ,EAAKgL,aAAavS,IAAtG,SACI,sBAAK4G,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAWtD,MAAO,CAAEyD,gBAAgB,OAAD,OAAS/G,EAAKgH,OAAd,QACjDhH,EAAKsS,aAHqBtS,EAAKC,oB,GAnD3CqJ,aAgFhBsJ,GAAgBnJ,aARL,SAAAd,GACpB,MAAO,KAGgB,GAIEc,CAA6C2I,IChFpES,G,uKAaE,OACI,oBAAIjM,UAAU,iCAAd,SAEKyC,KAAK1C,MAAM5D,QAAQ9F,KAAI,SAAAoV,GACpB,IAAIS,EAAe,CACf/L,gBAAgB,OAAD,OAASsL,EAAOrL,OAAhB,MAEnB,OACI,oBAAqB1D,MAAOwP,EAAclM,UAAU,YAA3CyL,EAAOpS,c,GArBTqJ,aAuClByJ,GAAkBtJ,aAPP,SAAAd,GACpB,MAAO,KAGgB,GAGIc,CAA6CoJ,IC1CrE,SAASG,GAAT,GAAiC,IAChCC,EADuBC,EAAQ,EAARA,KAErBzU,EAAI,IAAIyE,KAAKgQ,GAEf1C,EADS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxE/R,EAAEiS,YACjBN,EAAO3R,EAAE0U,UACTC,EAAO3U,EAAE4U,WACTlS,EAAM1C,EAAE6U,aACRnS,EAAM,KAAIA,EAAM,IAAMA,GACtBiS,EAAO,KAAIA,EAAO,IAAMA,GAC5B,IAAIG,EAAgB/C,EAAQ,IAAMJ,EAC9BoD,EAAgB,OAASJ,EAAO,IAAMjS,EAG1C,OAAQ+B,KAAKC,MAAQ+P,GACjB,KAAKhQ,KAAKC,MAAQ+P,EAAO,IACrBD,EAAgB,WAChB,MACJ,KAAK/P,KAAKC,MAAQ+P,EAAO,KACrBD,EAAgB,eAAiBO,EACjC,MACJ,KAAKtQ,KAAKC,MAAQ+P,EAAO,KACrBD,EAAgB,iBAAmBO,EACnC,MACJ,KAAKtQ,KAAKC,MAAQ+P,EAAO,KACrBD,EAAgB,mBAAqBO,EACrC,MACJ,KAAKtQ,KAAKC,MAAQ+P,EAAO,IACrBD,EAAgB,kBAAoBO,EACpC,MACJ,KAAKtQ,KAAKC,MAAQ+P,EAAO,KACrBD,EAAgB,wBAA0BO,EAC1C,MACJ,KAAKtQ,KAAKC,MAAQ+P,EAAO,MACrBD,EAAgB,mBAAqBO,EACrC,MACJ,KAAKtQ,KAAKC,MAAQ+P,EAAO,MACrBD,EAAgB,cAAgBO,EAChC,MACJ,KAAKtQ,KAAKC,MAAQ+P,EAAO,MACrBD,EAAgB,oBAAsBO,EACtC,MACJ,KAAKtQ,KAAKC,MAAQ+P,EAAO,QACrBD,EAAgB,aAAeO,EAC/B,MAEJ,QACIP,EAAgBM,EAAgBC,EAIxC,OACI,uBAAO5M,UAAU,gBAAjB,SAAkCqM,I,IClDpCQ,G,uKAEQ,IAAD,OAIL,OAHApK,KAAK1C,MAAM5B,WAAWM,QAAO,SAAAnB,GACzB,GAAIA,EAASF,KAAK5G,KAAO,EAAKuJ,MAAM3C,KAAK5G,GAAI,OAAO,2BAGpD,oBAAIwJ,UAAU,sCAAd,SACKyC,KAAK1C,MAAM5B,WAAW9H,KAAI,SAAAiH,GACvB,GAAIA,EAASF,KAAK5G,KAAO,EAAKuJ,MAAM3C,KAAK5G,GAAI,OACzC,qBAAsBwJ,UAAU,oBAAhC,UACI,qBAAKA,UAAU,wBAAwBtD,MAAO,CAAEyD,gBAAgB,OAAD,OAAS7C,EAASb,SAAS2D,OAA3B,QAC/D,sBAAKJ,UAAU,MAAf,UACI,8BAAG,iCAAO1C,EAASb,SAASiP,SAAzB,OAAH,eAAmDpO,EAASvC,IAA5D,oBACA,cAACqR,GAAD,CAAcE,KAAMhP,EAASjB,iBAJ5BiB,EAAS9G,a,GAVRkM,aAiCrBoK,GAAqBjK,aAPV,SAAAd,GACpB,MAAO,KAGgB,GAGOc,CAA6CgK,IChCzEE,G,4MACFhL,MAAQ,G,EASRiL,W,sBAAa,sBAAAnV,EAAA,sDACT,IACI,EAAKkI,MAAMkN,aAAa,EAAKlN,MAAMmN,QACrC,MAAOC,GACLlV,QAAQC,IAAIiV,GAJP,2C,kEALTlV,QAAQC,IAAIuK,KAAK1C,S,+BAiBjB,OACI,uBAAMC,UAAU,WAAWsD,SAAUb,KAAKuK,WAA1C,UACI,yBAAQhN,UAAU,UAAlB,UACI,+CACA,wBAAQW,QAAS8B,KAAK1C,MAAM8E,iBAA5B,kBAGJ,iCACI,qJACA,wBAAQ7E,UAAU,cAAlB,8B,GA/BS0C,aA8ChB0K,GAAgBvK,aAPL,SAAAd,GACpB,MAAO,KAGgB,GAGEc,CAA6CkK,IC5BpEM,G,4MACFtL,MAAQ,CACJhF,MAAO,KACPgH,QAAS,KACT3G,KAAM,KACNkQ,sBAAsB,EACtBC,uBAAuB,EACvBC,uBAAuB,EACvBC,gBAAgB,EAChBC,qBAAqB,EACrBC,iBAAiB,EACjBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,G,EAgBzBC,S,sBAAW,sCAAAlW,EAAA,6DACD6D,EAAU,EAAKqE,MAAM0D,cAAcpK,IACnC0K,EAAU,EAAKhE,MAAMgE,QACrBmJ,EAAS,EAAKnN,MAAM3C,KAAK5G,GAHxB,kBAKG,EAAKuJ,MAAML,UAAUhE,GALxB,OAMGwC,EAAS,EAAK6B,MAAM0D,cAAcvF,OAClCK,EAAQL,EAAO+H,MAAK,SAAA1H,GAAK,OAAIA,EAAM/H,KAAOuN,KAC1C3G,EAAOmB,EAAMpB,MAAM8I,MAAK,SAAA+H,GAAQ,OAAIA,EAASxX,KAAO0W,KAC1D,EAAKhL,SAAS,CAAEnF,MAAO,EAAKgD,MAAM0D,cAAeM,UAAS3G,SATvD,kDAWHnF,QAAQC,IAAR,MAXG,0D,EAeXiN,W,uCAAa,WAAOD,GAAP,qCAAArN,EAAA,6DAAmBkD,EAAnB,+BAAyB,GAC5BwK,EADG,eACgB,EAAKxF,MAAM0D,eAC9BwK,EAAc1I,EAAYrH,OAAO+H,MAAK,SAAA1H,GAAK,OAAIA,EAAM/H,KAAO,EAAKuL,MAAMgC,WACvEmK,EAAcD,EAAY9Q,MAAM9G,KAAI,SAAA+G,GACtC,OAAIA,EAAK5G,KAAO0O,EAAW1O,GAAW0O,EAC1B9H,KAEhB6Q,EAAY9Q,MAAQ+Q,EACdC,EAAe5I,EAAYrH,OAAO7H,KAAI,SAAAkI,GACxC,OAAIA,EAAM/H,KAAOyX,EAAYzX,GAAWyX,EAC5B1P,KAEhBgH,EAAYrH,OAASiQ,EACjBpT,IACMuC,EAAW,EAAK8Q,eAAerT,GACrCwK,EAAYpH,WAAWC,QAAQd,IAf1B,mBAmBC,EAAKyC,MAAMnE,YAAY2J,GAnBxB,QAoBL,EAAKwI,WApBA,kDAuBL9V,QAAQC,IAAI,iCAAZ,MAvBK,0D,wDA2BbkW,eAAiB,SAACrT,GAAS,IAAD,EACS,EAAKgF,MAA5BG,EADc,EACdA,aAAc9C,EADA,EACAA,KAChBW,EAAYmC,EAAgB,CAAE7G,IAAK6G,EAAa7G,IAAKqS,SAAUxL,EAAawL,SAAUtL,OAAQF,EAAaE,QAAW,CAAE/G,IAAK,MAAOqS,SAAU,QAAStL,OAAQ,qFAC/JiO,EAAW,CAAE7X,GAAI4G,EAAK5G,GAAIuF,MAAOqB,EAAKrB,OAE5C,MADiB,CAAEvF,GAAI,IAAMyD,EAAYY,SAAUwB,UAAWC,KAAKC,MAAOxB,MAAK0B,SAAUsB,EAAUX,KAAMiR,I,EAI7G7J,mBAAqB,WACjB,EAAKtC,SAAS,CAAEqL,uBAAwB,EAAKxL,MAAMwL,yB,EAEvD9I,mBAAqB,WACjB,EAAKvC,SAAS,CAAEsL,uBAAwB,EAAKzL,MAAMyL,yB,EAEvD9I,eAAiB,WACb,EAAKxC,SAAS,CAAEuL,gBAAiB,EAAK1L,MAAM0L,kB,EAEhDrI,qBAAuB,WACnB,EAAKlD,SAAS,CAAEoL,sBAAuB,EAAKvL,MAAMuL,wB,EAEtD3I,iBAAmB,WACf,EAAKzC,SAAS,CAAEwL,qBAAsB,EAAK3L,MAAM2L,uB,EAErD9I,iBAAmB,WACf,EAAK1C,SAAS,CAAE0L,qBAAsB,EAAK7L,MAAM6L,uB,EAGrD9I,aAAe,WACX,EAAK5C,SAAS,CAAEyL,iBAAkB,EAAK5L,MAAM4L,mB,EAGjD9I,iBAAmB,WACf,EAAK3C,SAAS,CAAE2L,qBAAsB,EAAK9L,MAAM8L,uB,EAGrDpE,WAAa,SAACD,GACV,IAAMtE,EAAU,eAAQ,EAAKnF,MAAM3C,MACnC8H,EAAW2E,QAAUL,EACrB,EAAKrE,WAAWD,EAAhB,mB,EAIJ8F,OAAS,SAACjK,GACN,IAAMmE,EAAU,eAAQ,EAAKnF,MAAM3C,MACnC8H,EAAWnE,IAAMA,EACjB,EAAKoE,WAAWD,EAAY,c,EAIhCoJ,SAAW,SAACpL,GACRA,EAAGqL,mB,4KAxGH,IACI9L,KAAKsL,WACLtL,KAAK1C,MAAMsE,YACb,MAAO8I,GACLlV,QAAQC,IAAIiV,G,+IAIDqB,GACX/L,KAAK1C,MAAM0O,QAAUD,EAAUC,OAAOhM,KAAKsL,a,+BAmGzC,IAAD,WACiDtL,KAAKV,MAAnDuL,EADH,EACGA,qBAAsBQ,EADzB,EACyBA,oBADzB,EAEgErL,KAAK1C,MAAlE3C,EAFH,EAEGA,KAAMkH,EAFT,EAESA,MAAOoK,EAFhB,EAEgBA,eAAgBzB,EAFhC,EAEgCA,aAAcxJ,EAF9C,EAE8CA,cAC7CkL,EAAYvR,GAAQA,EAAKhB,QAAUgB,EAAKhB,OAAOtB,OAAS,EACxD8T,EAAgBxR,GAAQA,EAAKlB,YAAckB,EAAKlB,WAAWpB,OAAS,EACpE+T,EAAazR,GAAQA,EAAKyM,QAC1BiF,EAAY1R,GAAQA,EAAKjB,SAAWiB,EAAKjB,QAAQrB,OAAS,EAC1DiU,EAAa3R,IAAI,UAAIA,EAAKV,aAAT,aAAI,EAAYC,WAArB,eAA0CS,EAAKV,MAAMsS,SAAY,GAC7EC,EAAS7R,GAAQA,EAAK2D,IAG5B,OAAK3D,EAED,cAAC,IAAM8R,SAAP,UACI,qBAAKlP,UAAU,SAASW,QAAS+N,EAAjC,SACI,qBAAK/N,QAAS,SAACuC,GAAS,EAAKoL,SAASpL,IAAtC,SAEI,0BAASlD,UAAS,oBAAe+O,GAAjC,UAEI,yBAAQ/O,UAAU,cAAlB,UACI,wBAAQA,UAAU,QAAQW,QAAS+N,IACnC,oBAAI1O,UAAU,aAAd,SAA4B5C,EAAKrB,WAGrC,sBAAKiE,UAAU,YAAf,UACI,iCACI,sBAAKA,UAAU,2BAAf,UACI,qBAAKA,UAAU,gBAAf,SAAgC2O,GAAY,oCAAM,yCAAgB,cAACzH,GAAD,CAAe9K,OAAQgB,EAAKhB,OAAQgB,KAAMA,EAAM+H,WAAY1C,KAAK0C,kBACnI,qBAAKnF,UAAU,eAAf,SAA+B6O,GAAa,sBAAK7O,UAAU,UAAf,cAA0B,2CAA1B,IAA6C,cAAC2J,GAAD,CAAiBE,QAASzM,EAAKyM,QAASzM,KAAMA,EAAM+H,WAAY1C,KAAK0C,kBAC9J,qBAAKnF,UAAU,eAAf,SAA+B8O,GAAY,sBAAK9O,UAAU,UAAf,cAA0B,0CAA1B,IAA4C,cAACmM,GAAD,CAAiBhQ,QAASiB,EAAKjB,QAASiB,KAAMA,EAAM+H,WAAY1C,KAAK0C,qBAGhK,oBAAInF,UAAU,mBAAd,0BACEsN,EAAwB,cAACjI,GAAD,CAAgBjI,KAAMA,EAAMgI,qBAAsB3C,KAAK2C,qBAAsBD,WAAY1C,KAAK0C,aAAmB/H,EAAKpB,YAC5I,sBAAKgE,UAAU,mBAAf,UAAmC5C,EAAKpB,YAAxC,IAAqD,wBAAQgE,UAAU,WAAWW,QAAS8B,KAAK2C,qBAA3C,qBACrD,qBAAKpF,UAAU,mBAAmBW,QAAS8B,KAAK2C,qBAAhD,gDACJ,4BAAIhI,EAAKpB,aAAe,KACxB,qBAAKgE,UAAU,eAAf,SAA+BiP,GAAS,sBAAKjP,UAAU,WAAf,cAA2B,cAACuL,GAAD,CAAaxK,IAAK3D,EAAK2D,IAAK3D,KAAMA,EAAM+H,WAAY1C,KAAK0C,kBAC5H,8BAAMyJ,GAAgB,8BAAK,cAAC3F,GAAD,CAAmB/M,WAAYkB,EAAKlB,WAAYkB,KAAMA,EAAM+H,WAAY1C,KAAK0C,iBACxG,8BAAM2I,GAAuB,oCAAM,oBAAI9N,UAAU,gBAAd,uBAAN,IAAmD,cAAC8M,GAAD,CAAoB3O,WAAYsF,EAActF,WAAYf,KAAMA,EAAM+H,WAAY1C,KAAK0C,qBAE3K,sBAAKnF,UAAU,YAAf,UACKyC,KAAKV,MAAMwL,uBAAyB,cAACnH,GAAD,CAAchJ,KAAMA,EAAM+H,WAAY1C,KAAK0C,WAAYX,mBAAoB/B,KAAK+B,mBAAoBzH,MAAO0G,EAAe7H,YAAa6G,KAAK1C,MAAMnE,cACtL6G,KAAKV,MAAMyL,uBAAyB,cAAC/G,GAAD,CAAiBrJ,KAAMA,EAAM+H,WAAY1C,KAAK0C,WAAYV,mBAAoBhC,KAAKgC,qBACvHhC,KAAKV,MAAM0L,gBAAkB,cAAC5G,GAAD,CAAazJ,KAAMA,EAAM+H,WAAY1C,KAAK0C,WAAYT,eAAgBjC,KAAKiC,iBACxGjC,KAAKV,MAAM2L,qBAAuB,cAACxE,GAAD,CAAe9L,KAAMA,EAAM+H,WAAY1C,KAAK0C,WAAYR,iBAAkBlC,KAAKkC,iBAAkB8E,WAAYhH,KAAKgH,aACpJhH,KAAKV,MAAM6L,qBAAuB,cAAC5B,GAAD,CAAe5O,KAAMA,EAAM+H,WAAY1C,KAAK0C,WAAYP,iBAAkBnC,KAAKmC,iBAAkBN,MAAOA,IAC1I7B,KAAKV,MAAM4L,iBAAmB,cAACrC,GAAD,CAAWlO,KAAMA,EAAM+H,WAAY1C,KAAK0C,WAAYL,aAAcrC,KAAKqC,aAAckG,OAAQvI,KAAKuI,SAChIvI,KAAKV,MAAM8L,qBAAuB,cAACT,GAAD,CAAeF,OAAQ9P,EAAK5G,GAAIkF,QAAS+H,EAAcpK,IAAKwL,iBAAkBpC,KAAKoC,iBAAkBoI,aAAcA,OAE1J,cAAC1I,GAAD,CAAanH,KAAMA,EAAMoH,mBAAoB/B,KAAK+B,mBAAoBC,mBAAoBhC,KAAKgC,mBAAoBC,eAAgBjC,KAAKiC,eACpIC,iBAAkBlC,KAAKkC,iBAAkBG,aAAcrC,KAAKqC,aAAcF,iBAAkBnC,KAAKmC,iBAAkBC,iBAAkBpC,KAAKoC,+BAxCpJ,4B,GAxIFnC,aAmMlBC,GAAqB,CACvBjD,YACA9D,eACAyI,cAGS8K,GAAWtM,aAdA,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,cACjCa,MAAOvC,EAAMgB,WAAWuB,MACxBpE,aAAc6B,EAAMgB,WAAW7C,gBAUUyC,GAAzBE,CAA6CwK,I,SC5N9D,SAAS+B,GAAcrP,GAC1B,IAAIyI,EAAO,EACPC,EAAM,EASV,OAPA1I,EAAM7D,WAAWwM,SAAQ,SAAAC,GACrBA,EAAUpC,MAAMmC,SAAQ,SAAAtB,IACA,IAAhBA,EAAKC,QAAiBmB,IAC1BC,UAKJ,uBAAMzI,UAAU,qBAAhB,wBAA2CwI,EAA3C,cAAqDC,GAArD,OCXD,SAAS4G,GAAmBtP,GAAO,IAS9B3C,EAAS2C,EAAT3C,KAEJwM,EAAQ,GACZ,OAFU,IAAItN,KAAKc,EAAKyM,SAASC,WAAa,GAG1C,KAAK,EAAGF,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,EAAGA,EAAQ,MAAO,MACvB,KAAK,GAAIA,EAAQ,MAAO,MACxB,KAAK,GAAIA,EAAQ,MAAO,MACxB,KAAK,GAAIA,EAAQ,MAGrB,IAAMG,EAAM3M,EAAKyM,QAAQG,UAAU,EAAG,IAEhCC,EADiB,IAAI3N,KAAKc,EAAKyM,SAAWvN,KAAKC,MACrB,MAAuB,SAAW,GAGlE,OACI,sBAAMyD,UAAU,oBAAhB,SACI,sBAAMA,UAAS,oCAA+BiK,EAA/B,KAAf,oBAA8DL,EAA9D,YAAuEG,OC3B5E,IAAMuF,GAAb,4MAEIvN,MAAQ,CACJwN,gBAAgB,GAHxB,EAOItC,aAAe,SAACC,GACZjV,QAAQC,IAAI,mBAAoBgV,GAChC,EAAKnN,MAAMyP,WAAWtC,EAAQ,EAAKnN,MAAMgE,QAAS,EAAKhE,MAAM0D,gBATrE,EAYIiL,eAAiB,WACb,EAAKxM,SAAS,CAAEqN,gBAAiB,EAAKxN,MAAMwN,kBAbpD,uDAgBc,IAAD,WACGnS,EAASqF,KAAK1C,MAAd3C,KACAmS,EAAmB9M,KAAKV,MAAxBwN,eAEFE,EAAqC,UAA1B,UAAArS,EAAKV,aAAL,eAAYC,WAAb,eAA6CS,EAAKV,MAAMsS,SAAY,GAC9EU,EAAuC,SAA1B,UAAAtS,EAAKV,aAAL,eAAYC,YAAuBS,EAAKV,MAAMsS,QAA/C,eAAkE5R,EAAKV,MAAMsS,SAAY,GAC3G,OAGI,cAAC,KAAD,CAAWW,YAAaC,OAAOxS,EAAK5G,IAAKqZ,MAAOpN,KAAK1C,MAAM8P,MAAOC,UAAU,aAAarQ,KAAK,OAA9F,SACK,SAACsQ,GACE,OAEI,0DAAuBA,EAASC,gBAAoBD,EAASE,iBAA7D,IAA8EC,IAAKH,EAASI,SAAUnQ,UAA2B,kBAAf5C,EAAKrB,MAAN,wBAAjH,SACI,0BAASiE,UAA2B,kBAAf5C,EAAKrB,MAAN,uBAAmD0T,EAAnD,YAA8DC,GAA9D,qBAApB,UAGI,wBAAQ1P,UAAU,SAASW,QAAS,EAAK+N,iBAGxCtR,EAAKhB,QAAU,cAAC+H,GAAD,CAAkB/H,OAAQgB,EAAKhB,SAC/C,mBAAGuE,QAAS,EAAK+N,eAAjB,SAAkCtR,EAAKrB,QACtCqB,EAAK2D,KAAO,cAACwK,GAAD,CAAanO,KAAMA,IAChC,sBAAK4C,UAAU,8BAAf,UACI,iCACM5C,EAAKpB,YAAe,sBAAMgE,UAAU,yBAAiC,GACrE5C,EAAKlB,YAAckB,EAAKlB,WAAWpB,OAAS,EAAK,cAACsU,GAAD,CAAelT,WAAYkB,EAAKlB,aAAiB,GAClGkB,EAAKyM,QAAW,cAACwF,GAAD,CAAoBjS,KAAMA,IAAW,MAE3D,+BACMA,EAAKjB,QAAW,cAACgQ,GAAD,CAAiBhQ,QAASiB,EAAKjB,UAAc,QAGtEoT,GAAkB,cAACJ,GAAD,CAAU/R,KAAMA,EAAM2G,QAAS,EAAKhE,MAAMgE,QAAS2K,eAAgB,EAAKA,eAAgBzB,aAAc,EAAKA,oBApB7H7P,EAAK5G,WA7BtC,GAAkCkM,aAiE5BC,GAAqB,CACvB6M,WlCmCG,SAAoBtC,EAAQnJ,EAASpE,GAC1C,8CAAO,WAAMJ,GAAN,qBAAA1H,EAAA,sEAGCgI,EAAgBhG,KAAKE,MAAMF,KAAKC,UAAU6F,IAExCqE,EAAmBnE,EAAc3B,OAAO+F,WAAU,SAAA1F,GAAK,OAAIA,EAAM/H,KAAOuN,KAExEqM,EAAkBvQ,EAAc3B,OAAO8F,GAAkB7G,MAAMsB,QAAO,SAAArB,GAAI,OAAIA,EAAK5G,KAAO0W,KAEhGrN,EAAc3B,OAAO8F,GAAkB7G,MAAQiT,EAT5C,SAWiBjV,EAAaS,YAAYiE,GAX1C,OAWG9C,EAXH,OAaHwC,EAAS,CAAEE,KAAM,YAAa1C,UAb3B,kDAgBH9E,QAAQC,IAAI,mCAAZ,MAhBG,0DAAP,wDkChCWmY,GAAcxN,aAXH,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBASWd,GAAzBE,CAA6CyM,IC9EjE,SAASgB,GAASvQ,GACrB,OACI,cAAC,KAAD,CAAWwQ,YAAaxQ,EAAMgE,QAAStE,KAAK,OAA5C,SACK,SAACsQ,GAAD,OACG,6CAAI/P,UAAU,aAAgB+P,EAASS,gBAAvC,IAAuDN,IAAKH,EAASI,SAArE,UACKpQ,EAAM5C,MAAM9G,KAAI,SAAC+G,EAAMyS,GAAP,OACb,cAACQ,GAAD,CAA2BjT,KAAMA,EAAM2G,QAAShE,EAAMgE,QAAS8L,MAAOA,GAApDzS,EAAK5G,OAE1BuZ,EAASpM,mBCRvB,IAAM8M,GAAb,4MAEI1O,MAAQ,CACJhG,MAAO,IAHf,EAUIkH,aAAe,SAACC,GACZ,IAAMC,EAAQD,EAAGE,OAAOD,MAClBE,EAAQH,EAAGE,OAAOtC,KACxB,EAAKoB,SAAL,gBAAiBmB,EAAQF,KAbjC,EAgBIG,SAhBJ,uCAgBe,WAAOJ,GAAP,SAAArL,EAAA,yDACPqL,EAAGK,iBACE,EAAKxB,MAAMhG,MAFT,iEAGD,EAAKgE,MAAM2Q,QAAQ,EAAK3O,MAAMhG,MAAO,EAAKgE,MAAMxB,MAAM/H,GAAI,EAAKuJ,MAAM0D,eAHpE,OAIP,EAAK1D,MAAM4Q,oBAJJ,2CAhBf,wDAwBIC,YAAc,SAAC1N,GACXA,EAAGK,iBACH,EAAKxD,MAAM4Q,qBA1BnB,oGA8BQ,OACI,qBAAK3Q,UAAU,eAAf,SACI,uBAAMsD,SAAUb,KAAKa,SAArB,UACI,0BAAUK,YAAY,iCAAiClE,KAAK,OAAOmE,SAAUnB,KAAKQ,aAAcE,MAAOV,KAAKV,MAAMhG,MAAO+E,KAAK,QAAQ+C,aAAa,QACnJ,wBAAQ7D,UAAU,WAAlB,sBACA,wBAAQA,UAAU,aAAaW,QAAS8B,KAAKmO,uBAnCjE,GAA8BlO,aAgDxBC,GAAqB,CACvB+N,QpCqCG,SAAiB3U,EAAOgI,EAASpE,GACtC,8CAAO,WAAMJ,GAAN,uBAAA1H,EAAA,sEAICgZ,EAAU1V,EAAaU,SAASE,GAJjC,SAKkBZ,EAAa2B,aAAb,2BAA8C+T,EAAQ9U,QALxE,cAKCuB,EALD,OAMCuC,EAAgBhG,KAAKE,MAAMF,KAAKC,UAAU6F,IACxCqE,EAAmBnE,EAAc3B,OAAO+F,WAAU,SAAA1F,GAAK,OAAIA,EAAM/H,KAAOuN,KAC9ElE,EAAc3B,OAAO8F,GAAkB7G,MAAMkF,KAAKwO,GAClDhR,EAAc1B,WAAWC,QAAQd,GAT9B,UAWiBnC,EAAaS,YAAYiE,GAX1C,QAWG9C,EAXH,OAaH4B,EAAcQ,KAAK,eAAgBpC,GAbhC,kDAeH9E,QAAQC,IAAI,+BAAZ,MAfG,0DAAP,wDoClCW4Y,GAAUjO,aAXC,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBASOd,GAAzBE,CAA6C4N,ICvD7D,SAASM,GAAWhR,GAEvB,OACI,0BAASC,UAAU,WAAnB,UACQ,yBAAQA,UAAU,UAAlB,UACI,+CACA,wBAAQW,QAASZ,EAAMiR,gBAAvB,kBAGJ,iCACI,qJACA,wBAAQhR,UAAU,cAAcW,QAAS,kBAAIZ,EAAMkR,cAAclR,EAAMxB,MAAM/H,GAAIuJ,EAAMxB,MAAMxC,QAA7F,0BCNb,IAAMmV,GAAb,4MAEInP,MAAQ,CACJoP,iBAAiB,EACjBC,iBAAiB,GAJzB,EAQIJ,gBAAkB,WACd,EAAK9O,SAAS,CAAEkP,iBAAkB,EAAKrP,MAAMqP,mBATrD,EAaIT,kBAAoB,WAEhB,EAAKzO,SAAS,CAAEiP,iBAAkB,EAAKpP,MAAMoP,mBAfrD,uDAkBc,IACEF,EAAkBxO,KAAK1C,MAAvBkR,cACAG,EAAoB3O,KAAKV,MAAzBqP,gBACAD,EAAoB1O,KAAKV,MAAzBoP,gBACA5S,EAAUkE,KAAK1C,MAAfxB,MACR,OACI,cAAC,IAAM2Q,SAAP,UACI,sBAAMlP,UAAU,uBAAhB,UACOmR,EAA2F,cAACL,GAAD,CAASvS,MAAOA,EAAOoS,kBAAmBlO,KAAKkO,oBAAvH,wBAAQhQ,QAAS8B,KAAKkO,kBAAtB,iCACnBS,EAAyF,cAACL,GAAD,CAAYxS,MAAOA,EAAOyS,gBAAiBvO,KAAKuO,gBAAiBC,cAAeA,IAAtJ,wBAAQtQ,QAAS8B,KAAKuO,gBAAtB,0CA3B1C,GAAmCtO,aA6CtB2O,GAAexO,aAVJ,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAId,GAICZ,CAA6CqO,ICzC5DI,GAAb,4MAEIvP,MAAQ,CACJoP,iBAAiB,EACjBI,YAAY,EACZC,oBAAoB,EAEpBzV,MAAO,GACP0V,YAAa,GARrB,EAeIR,cAfJ,uCAeoB,WAAOlN,EAAS7G,GAAhB,qBAAArF,EAAA,6DACRgI,EAAgBhG,KAAKE,MAAMF,KAAKC,UAAU,EAAKiG,MAAM0D,gBACrD7D,EAFQ,8BAEqB1C,GAC3BwU,EAAgB7R,EAAc3B,OAAOO,QAAO,SAAAF,GAAK,OAAIA,EAAM/H,KAAOuN,KACxElE,EAAc3B,OAASwT,EAJX,SAMQ,EAAK3R,MAAMnE,YAAYiE,EAAeD,GAN9C,cAMN7C,EANM,yBAOLA,GAPK,2CAfpB,0DA0BI2G,eAAiB,WAEb,EAAKxB,SAAS,CAAEqP,YAAa,EAAKxP,MAAMwP,cA5BhD,EA8BIZ,kBAAoB,WAEhB,EAAKzO,SAAS,CAAEiP,iBAAkB,EAAKpP,MAAMoP,mBAhCrD,EAkCIQ,mBAAqB,WACjB,EAAKzP,SAAS,CAAEsP,oBAAqB,EAAKzP,MAAMyP,sBAnCxD,kEAYQ/O,KAAKP,SAAS,CAAEuP,YAAalR,SAASC,KAAKC,iBAZnD,+BAuCc,IAAD,SACuDgC,KAAKV,MAAzDwP,EADH,EACGA,WAAYJ,EADf,EACeA,gBAAiBK,EADhC,EACgCA,mBAC7BjT,EAAUkE,KAAK1C,MAAfxB,MACR,OACI,cAAC,KAAD,CAAWoR,YAAapR,EAAM/H,GAAIqZ,MAAOpN,KAAK1C,MAAM8P,MAApD,SACK,SAACE,GACE,OACI,wDAAI/P,UAAU,SAAY+P,EAASC,gBAAoBD,EAASE,iBAAhE,IAAiFC,IAAKH,EAASI,SAA/F,SACI,yBAASnQ,UAAU,gBAAnB,SACI,sBAAKA,UAAU,eAAf,UACI,mCACOuR,EAAoE,cAACrN,GAAD,CAAgB3F,MAAOA,EAAOmF,eAAgB,EAAKA,iBAAzG,oBAAG/C,QAAS,EAAK+C,eAAjB,UAAkCnF,EAAMxC,MAAxC,OACjB,wBAAQiE,UAAU,aAAaW,QAAS,kBAAM,EAAKgR,mBAAmBpT,EAAM/H,OAC3Egb,GAAsB,cAACH,GAAD,CAAc9S,MAAOA,EAAO0S,cAAe,EAAKA,mBAE3E,sBAAMvU,MAAO,CAAEkV,UAAU,GAAD,OAAK,EAAK7P,MAAM0P,YAAc,IAA9B,OAAxB,SACI,qBAAKzR,UAAU,oBAAf,SACKzB,EAAMpB,OAAS,cAACmT,GAAD,CAAUvM,QAASxF,EAAM/H,GAAI2G,MAAOoB,EAAMpB,YAG/DgU,EAA4G,cAACL,GAAD,CAASvS,MAAOA,EAAOoS,kBAAmB,EAAKA,oBAAxI,mBAAG3Q,UAAU,mBAAmBW,QAAS,EAAKgQ,kBAA9C,8CA3D1D,GAAmCjO,aA+E7BC,GAAqB,CACvB/G,gBAISiW,GAAehP,aAXJ,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBASYd,GAAzBE,CAA6CyO,IC3F5DQ,GAAb,4MACI/P,MAAQ,CACJhG,MAAO,IAFf,EAMIkH,aAAe,SAACC,GACZ,IAAMC,EAAQD,EAAGE,OAAOD,MAClBE,EAAQH,EAAGE,OAAOtC,KACxB,EAAKoB,SAAL,gBAAiBmB,EAAQF,KATjC,EAWIG,SAXJ,uCAWe,WAAOJ,GAAP,SAAArL,EAAA,yDACPqL,EAAGK,iBACE,EAAKxB,MAAMhG,MAFT,iEAGD,EAAKgE,MAAMgS,SAAS,EAAKhQ,MAAMhG,MAAO,EAAKgE,MAAM0D,eAHhD,OAIP,EAAKvB,SAAS,CAAEnG,MAAO,KACvB,EAAKgE,MAAMiS,qBALJ,2CAXf,wDAkBIpB,YAAc,SAAC1N,GACXA,EAAGK,iBACH,EAAKxD,MAAMiS,sBApBnB,oGAuBQ,OACI,qBAAKhS,UAAU,gBAAf,SACI,uBAAMA,UAAU,iBAAiBsD,SAAUb,KAAKa,SAAhD,UACI,uBAAOtD,UAAU,oBAAoB2D,YAAY,mBAAmBlE,KAAK,OAAOmE,SAAUnB,KAAKQ,aAAcE,MAAOV,KAAKV,MAAMhG,MAAO+E,KAAK,QAAQ+C,aAAa,QAChK,wBAAQ7D,UAAU,iBAAlB,sBACA,wBAAQA,UAAU,mBAAmBW,QAAS8B,KAAKmO,uBA5BvE,GAAkClO,aAuC5BC,GAAqB,CACvBoP,SxCIG,SAAkBhW,EAAO4D,GAC9B,8CAAO,WAAMJ,GAAN,qBAAA1H,EAAA,sEAGCoa,EAAa9W,EAAaQ,UAAUI,GAHrC,SAIkBZ,EAAa2B,aAAb,2BAA8CmV,EAAWlW,QAJ3E,cAICuB,EAJD,QAMCuC,EAAgBhG,KAAKE,MAAMF,KAAKC,UAAU6F,KAChCzB,OAAOmE,KAAK4P,GAE1BpS,EAAc1B,WAAWC,QAAQd,GAT9B,UAUiBnC,EAAaS,YAAYiE,GAV1C,QAUG9C,EAVH,OAYH4B,EAAcQ,KAAK,eAAgBpC,GAZhC,kDAeH9E,QAAQC,IAAI,gCAAZ,MAfG,0DAAP,wDwCHWga,GAAcrP,aARH,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAMWd,GAAzBE,CAA6CiP,ICxC3DK,GAAb,4MACIpQ,MAAQ,CACJqQ,kBAAkB,GAF1B,EAIIJ,mBAAqB,WACjB,EAAK9P,SAAS,CAAEkQ,kBAAmB,EAAKrQ,MAAMqQ,oBALtD,uDAOc,IAAD,OACGA,EAAqB3P,KAAKV,MAA1BqQ,iBACR,OACI,cAAC,KAAD,CAAiBC,UAAW5P,KAAK1C,MAAMsS,UAAvC,SACI,0BAASrS,UAAU,uBAAnB,UACI,cAAC,KAAD,CAAWuQ,YAAa,aAAcT,UAAU,aAAarQ,KAAK,QAAlE,SACK,SAACsQ,GAAD,OACG,6CAAI/P,UAAU,yBAA4B+P,EAASS,gBAAnD,IAAmEN,IAAKH,EAASI,SAAjF,UACK,EAAKpQ,MAAM7B,OAAO7H,KAAI,SAACkI,EAAOsR,GAAR,OACnB,cAACgC,GAAD,CAA6BtT,MAAOA,EAAOsR,MAAOA,GAA/BtR,EAAM/H,OAE5BuZ,EAASpM,mBAInByO,EAA8G,cAACF,GAAD,CAAaxW,QAAS+G,KAAK1C,MAAMrE,QAASsW,mBAAoBvP,KAAKuP,qBAA7J,mBAAGhS,UAAU,mBAAmBW,QAAS8B,KAAKuP,mBAA9C,wCAtB3C,GAAgCtP,aAkCnB4P,GAAYzP,aAND,SAAAd,GACpB,MAAO,KAGgB,GAEFc,CAA6CsP,ICpCzDI,GAAb,4MAEIxQ,MAAQ,CACJhG,MAAO,IAHf,EAWIkH,aAAe,SAACC,GACZ,IAAMC,EAAQD,EAAGE,OAAOD,MAClBE,EAAQH,EAAGE,OAAOtC,KACxB,EAAKoB,SAAL,gBAAiBmB,EAAQF,KAdjC,EAiBIG,SAjBJ,uCAiBe,WAAOJ,GAAP,iBAAArL,EAAA,yDACPqL,EAAGK,iBACKxH,EAAU,EAAKgG,MAAfhG,MAFD,wDAIDgB,EAJC,2BAIY,EAAKgD,MAAM0D,eAJvB,IAIsC1H,UAJtC,SAKD,EAAKgE,MAAMnE,YAAYmB,EAAvB,iCAAwDhB,IALvD,OAMP,EAAKgE,MAAM2D,iBANJ,2CAjBf,wHAMyB,IACT3H,EAAU0G,KAAK1C,MAAM0D,cAArB1H,MACR0G,KAAKP,SAAS,CAAEnG,YARxB,+BA4BQ,OACI,qBAAKiE,UAAU,mBAAf,SACI,uBAAMsD,SAAUb,KAAKa,SAArB,UACI,uBAAOtD,UAAU,kBAAkB2D,YAAY,cAAclE,KAAK,OAAOmE,SAAUnB,KAAKQ,aAAcE,MAAOV,KAAKV,MAAMhG,MAAO+E,KAAK,QAAQ+C,aAAa,MAAM8B,WAAS,IACxK,wBAAQ3F,UAAU,UAAlB,2BAhCpB,GAAqC0C,aA6C/BC,GAAqB,CACvB/G,gBAGS4W,GAAiB3P,aAVN,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAQcd,GAAzBE,CAA6C0P,IC/C9DE,GAAb,4MAEI1Q,MAAQ,CACJwP,YAAY,GAHpB,EAOI7N,eAAiB,WACb,EAAKxB,SAAS,CAAEqP,YAAa,EAAKxP,MAAMwP,cARhD,uDAWc,IACEA,EAAe9O,KAAKV,MAApBwP,WACA9N,EAAkBhB,KAAK1C,MAAvB0D,cACR,OACI,sBAAKzD,UAAU,2CAAf,UACI,mCACI,kDACA,wBAAQA,UAAU,aAAaW,QAAS8B,KAAK1C,MAAM2S,iBAAnD,kBAEJ,uBAAM1S,UAAU,iBAAhB,UACI,oCACI,mBAAGA,UAAU,oBAAb,uBACA,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,4BAA4BtD,MAAO,CAAEyD,gBAAgB,OAAD,OAASsD,EAAc/F,UAAU0C,OAAjC,QACnE,iCAAOqD,EAAc/F,UAAUF,SAA/B,aAGR,oCACI,oBAAGwC,UAAU,uBAAb,wBAA+C,sBAAMA,UAAU,kBAAhB,8BAE5CuR,EAAyG,cAACiB,GAAD,CAAgB9O,eAAgBjB,KAAKiB,iBAAhI,oBAAG1D,UAAU,kBAAkBW,QAAS8B,KAAKiB,eAA7C,cAA+DD,EAAc1H,MAA7E,oBA/BzC,GAAiC2G,aAoDpBiQ,GAAa9P,aAXF,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAId,GAKDZ,CAA6C4P,ICrD1DG,GAAb,4MAEI7Q,MAAQ,CACJ9D,MAAO,IAHf,EAUI4U,mBAAqB,SAACjV,GAIlB,EAAKsE,SAAS,CAAEjE,MAAOL,IAHN,WACb,EAAK0F,eAZjB,EAiBIA,SAjBJ,sBAiBe,4BAAAzL,EAAA,6DACHgI,EAAgBhG,KAAKE,MAAMF,KAAKC,UAAU,EAAKiG,MAAM0D,iBAC3C/G,MAAMuB,MAAQ,EAAK8D,MAAM9D,MAFhC,SAGD,EAAK8B,MAAMnE,YAAYiE,EAAe,sBAHrC,2CAjBf,EAuBI+Q,YAAc,SAAC1N,GACXA,EAAGK,iBACH,EAAKxD,MAAMkC,kBAzBnB,EA4BIsM,gBAAkB,SAACrL,GACfA,EAAGqL,mBA7BX,oGAgCc,IAAD,OAqDL,OACI,0BAASvO,UAAU,sBAAsBW,QAAS8B,KAAK8L,gBAAvD,UACI,mCACI,mDACA,wBAAQvO,UAAU,aAAaW,QAAS8B,KAAK1C,MAAM+S,uBAAnD,kBAEJ,sBAAM9S,UAAU,wBAAhB,SA1DiB,CACrB,CACIxJ,GAAI,QACJyH,MAAO,wEAEX,CACIzH,GAAI,QACJyH,MAAO,4EAEX,CACIzH,GAAI,QACJyH,MAAO,0EAEX,CACIzH,GAAI,QACJyH,MAAO,uEAGX,CACIzH,GAAI,QACJyH,MAAO,4EAEX,CACIzH,GAAI,QACJyH,MAAO,6EAEX,CACIzH,GAAI,QACJyH,MAAO,6EAEX,CACIzH,GAAI,QACJyH,MAAO,uEAEX,CACIzH,GAAI,QACJyH,MAAO,0EAEX,CACIzH,GAAI,QACJyH,MAAO,wEAEX,CACIzH,GAAI,QACJyH,MAAO,wEAEX,CACIzH,GAAI,QACJyH,MAAO,0EAWe5H,KAAI,SAAA0c,GAClB,OACI,qBAAK/S,UAAU,oBACXtD,MAAO,CAAEyD,gBAAgB,OAAD,OAAS4S,EAAW9U,MAApB,MACxB0C,QAAS,kBAAM,EAAKkS,mBAAmBE,EAAW9U,QAFtD,SAGI,qBAAK+B,UAAU,OAAf,gBAHoC+S,EAAWvc,gBA9F/E,GAA4CkM,aAmHtCC,GAAqB,CACvB/G,gBAGSoX,GAAwBnQ,aAVb,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAQqBd,GAAzBE,CAA6C+P,ICzH3E,SAASK,GAAgBlT,GAE5B,OACI,qBAAIC,UAAU,qCAAd,UACI,qBAAKA,UAAU,wBAAwBtD,MAAO,CAAEyD,gBAAgB,OAAD,OAASJ,EAAMzC,SAASb,SAAS2D,OAAjC,QAC/D,sBAAKJ,UAAU,MAAf,UACI,kCAAI,sBAAMA,UAAU,YAAhB,SAA6BD,EAAMzC,SAASb,SAASiP,WAAzD,IAA2E3L,EAAMzC,SAASvC,IAA1F,QACA,cAACqR,GAAD,CAAcE,KAAMvM,EAAMzC,SAASjB,kBCP5C,SAAS6W,GAAcnT,GAE1B,OACI,0BAASC,UAAU,qBAAnB,UACI,mBAAGA,UAAU,0BAAb,0BACA,oBAAIA,UAAU,gBAAd,SACKD,EAAM5B,WAAW9H,KAAI,SAAAiH,GAAQ,OAC1B,cAAC2V,GAAD,CAAmC3V,SAAUA,GAAvBA,EAAS9G,Y,ICF7C2c,G,4MACFpR,MAAQ,CACJqR,mBAAmB,EACnBC,yBAAyB,EACzBC,sBAAsB,EACtBC,oBAAoB,G,EAOxBb,iBAAmB,WACf,EAAKxQ,SAAS,CAAEkR,mBAAoB,EAAKrR,MAAMqR,qB,EAEnDN,uBAAyB,WACrB,EAAK5Q,SAAS,CAAEmR,yBAA0B,EAAKtR,MAAMsR,2B,EAEzDG,oBAAsB,WAClB,EAAKtR,SAAS,CAAEoR,sBAAuB,EAAKvR,MAAMuR,wB,EAEtDG,kBAAoB,WAChB,EAAKvR,SAAS,CAAEqR,oBAAqB,EAAKxR,MAAMwR,sB,qSAK1C,IACEH,EAAsB3Q,KAAKV,MAA3BqR,kBACAC,EAA4B5Q,KAAKV,MAAjCsR,wBAFH,EAKgC5Q,KAAK1C,MAAlC0D,EALH,EAKGA,cACFiQ,EAND,EAKkBC,UACI,OAAS,GAEpC,OACI,0BAAS3T,UAAS,0BAAqB0T,GAAvC,UACI,yBAAQ1T,UAAU,cAAlB,UACI,sCACA,wBAAQA,UAAU,aAAaW,QAAS8B,KAAK1C,MAAM6T,eAAnD,eACA,0BAIJ,sBAAK5T,UAAU,iBAAf,UACOoT,EAAyI,cAACT,GAAD,CAAYD,iBAAkBjQ,KAAKiQ,iBAAkB3V,MAAO0G,IAAhL,sBAAKzD,UAAU,YAAYW,QAAS8B,KAAKiQ,iBAAzC,cAA4D,mBAAG1S,UAAU,aAAb,kCACjFqT,EAAmI,cAACL,GAAD,CAAuBF,uBAAwBrQ,KAAKqQ,yBAA5J,mBAAG9S,UAAU,4BAA4BW,QAAS8B,KAAKqQ,uBAAvD,gCAI9B,uBACCrP,EAActF,YAAc,cAAC+U,GAAD,CAAe/U,WAAYsF,EAActF,uB,GAnD7DuE,aAsEhBmR,GAAgBhR,aAVL,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAId,GAIEZ,CAA6CsQ,ICvEpEW,G,4MACF/R,MAAQ,CACJzG,SAAU,CACNS,MAAO,K,EASfkH,aAAe,SAACC,GACZ,IAIM5H,EAAQ,eAAQ,EAAKyG,MAAMzG,UACjCA,EAAS4H,EAAGE,OAAOtC,MAAQoC,EAAGE,OAAOD,MAErC,EAAKjB,SAAS,CAAE5G,aAPC,WACb,EAAKyE,MAAMgU,iBAAiB,EAAKhU,MAAM0D,cAAcpK,IAAK,EAAK0I,MAAMzG,c,oGAazE,OACI,uBAAOmE,KAAK,OAAOqB,KAAK,QACpBqC,MAAOV,KAAKV,MAAMzG,SAASS,MAE3B8H,aAAa,MAAMF,YAAa,wBAChCC,SAAUnB,KAAKQ,aAAcjD,UAAU,sB,GAhC5B0C,aA4CrBC,GAAqB,CACvBoR,iBhDuGG,SAA0BrY,EAASJ,GACxC,8CAAO,WAAMiE,GAAN,iBAAA1H,EAAA,+EAEyBsD,EAAarC,QAAQ4C,GAF9C,cAEGsY,EAFH,gBAIiB7Y,EAAa0B,kBAAkBmX,EAAe1Y,GAJ/D,OAIGyB,EAJH,OAMHwC,EAAS,CAAEE,KAAM,YAAa1C,UAC9BwC,EAAS,CAAEE,KAAM,aAAcnE,aAP5B,kDAUHrD,QAAQC,IAAI,wCAAZ,MAVG,0DAAP,wDgDrGW+b,GAAcpR,aAVH,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAQWd,GAAzBE,CAA6CiR,ICjDlEI,G,4MAEFnS,MAAQ,CACJmK,aAAc,CACV/L,gBAAiB,0F,kEAKrB,GAAKsC,KAAK1C,MAAMG,aAAhB,CACA,IAAMiU,EAAa1R,KAAK1C,MAAMG,aAAaE,OACvC8L,EAAe,CACf/L,gBAAgB,OAAD,OAASgU,EAAT,MAEnB1R,KAAKP,SAAS,CAAEgK,oB,+BAKV,IAAD,EACsDzJ,KAAK1C,MAAxD0D,EADH,EACGA,cAAemQ,EADlB,EACkBA,eAAgBQ,EADlC,EACkCA,gBACvC,OACI,sBAAKpU,UAAU,cAAf,UACI,yBAAQA,UAAU,6CAAlB,UACI,gCACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACvB,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,eAA5B,sBACA,sBAAMA,UAAU,gBAAhB,SACI,gCACI,cAACiU,GAAD,WAIZ,oBAAIjU,UAAU,cAAd,kBAEA,sBAAKA,UAAU,+CAAf,UACI,cAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,+BAA3B,sBACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,WAAWtD,MAAO+F,KAAKV,MAAMmK,qBAGjE,yBAAQlM,UAAU,0DAAlB,UACI,+BACI,gCACI,cAACiU,GAAD,QAGR,cAAC,IAAD,CAAMhU,GAAG,QAAQD,UAAU,kBAA3B,yBAGJ,yBAAQA,UAAU,0DAAlB,UACI,8BACI,6BAAKyD,EAAc1H,UAGvB,sBAAKiE,UAAU,iBAAf,UACI,wBAAQA,UAAU,gBAAgBW,QAASyT,EAA3C,wBACA,wBAAQpU,UAAU,mBAAmBW,QAASiT,EAA9C,qC,GAxDClR,aA6EZ2R,GAAYxR,aAVD,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,cACjCvD,aAAc6B,EAAMgB,WAAW7C,gBAGZ,GAIF2C,CAA6CqR,I,SCjF/D,SAASI,GAASvU,GACrB,IAAMwU,EAAiBxU,EAAMhD,MAAMmB,OAAOsW,QAAO,SAACC,EAAelW,GAAW,IAAD,EAOvE,OANA,UAAAA,EAAMpB,aAAN,SAAauL,SAAQ,SAAAtL,GAAS,IAAD,EACzB,UAAAA,EAAKjB,eAAL,SAAcuM,SAAQ,SAAA+C,GAClB,IAAMiJ,EAAQD,EAAchJ,EAAOC,UAAY,GAAK,EACpD+I,EAAchJ,EAAOC,UAAYgJ,QAGlCD,IACR,IAKG9c,EAAO,CACTyE,OAAQpF,OAAOD,KAAKwd,GACpBI,SAAU,CAAC,CACPhd,KAAMX,OAAO4d,OAAOL,GACpBM,gBAAiB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACzEC,qBAAsB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAC9EC,UAAW,WAInB,OACI,yBAASrY,MAAO,CAAEqM,MAAO,OAAzB,SACI,cAAC,OAAD,CAAKpR,KAAMA,EAAMqd,QAAS,CACtBjZ,MAAO,CAAEsP,SAAS,EAAM4J,KAAM,yBAA0BF,UAAW,QAASG,SAAU,MACtFC,OAAQ,CAAE9J,SAAS,GACnB+J,MAAO,CAAEC,UAAW,GACpBC,OAAQ,CACJC,MAAO,CAAC,CACJH,MAAO,CACHL,UAAW,QACXS,aAAa,EACbC,aAAc,SAAUrR,EAAOyL,EAAOzT,GAClC,GAAI3B,KAAKE,MAAMyJ,KAAWA,EACtB,OAAOA,MAMvBsR,MAAO,CAAC,CACJN,MAAO,CACHL,UAAW,iBC7ChC,SAASY,GAAS5V,GAErB,IAAM6V,EAAe7V,EAAMhD,MAAMmB,OAAOsW,QAAO,SAACqB,EAAatX,GAEzD,OADAsX,EAAYtX,EAAMxC,OAASwC,EAAMpB,MAAMrC,OAChC+a,IACR,IAGGC,EAAS,CACX1Z,OAAQpF,OAAOD,KAAK6e,GACpBjB,SAAU,CAAC,CACPvQ,MAAO,QACPzM,KAAMX,OAAO4d,OAAOgB,GACpBf,gBAAiB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACzEC,qBAAsB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,cAKtF,OACI,yBAASpY,MAAO,CAAEqM,MAAO,OAAzB,SACI,cAAC,iBAAD,CAAepR,KAAMme,EACjBd,QAAS,CACLjZ,MAAO,CAAEsP,SAAS,EAAM4J,KAAM,uBAAwBF,UAAW,QAASG,SAAU,MACpFC,OAAQ,CAAE9J,SAAS,GACnB+J,MAAO,CAAEC,UAAW,GACpBC,OAAQ,CACJC,MAAO,CAAC,CACJH,MAAO,CACHL,UAAW,WAYnBW,MAAO,CAAC,CACJN,MAAO,CACHL,UAAW,QACXS,aAAa,WC5CtC,SAASO,GAAUhW,GAStB,IAAMxD,EAAMD,KAAKC,MACXyZ,EAAejW,EAAMhD,MAAMmB,OAAOsW,QAAO,SAACyB,EAAY1X,GAAW,IAAD,EAC9D2X,EAAkB,EAQtB,OAPA,UAAA3X,EAAMpB,aAAN,SAAauL,SAAQ,SAAAtL,GACjB8Y,IAEA,IAAIC,GAAQ5Z,EAAMa,EAAKf,WAAa,KAAQ,IAC5C4Z,EAAW1X,EAAMxC,OAAStB,KAAKmO,MAAMuN,EAAOD,MAGzCD,IACR,IAGGH,EAAS,CACX1Z,OAAQpF,OAAOD,KAAKif,GACpBrB,SAAU,CAAC,CACPhd,KAAMX,OAAO4d,OAAOoB,GACpBnB,gBAAiB,CAAC,WAClBC,qBAAsB,CAAC,cAK/B,OACI,yBAASpY,MAAO,CAAEqM,MAAO,OAAzB,SACI,cAAC,QAAD,CACIpR,KAAMme,EACNd,QAAS,CACLjZ,MAAO,CAAEsP,SAAS,EAAM4J,KAAM,6CAA8CF,UAAW,QAASG,SAAU,MAC1GC,OAAQ,CAAE9J,SAAS,GACnB+J,MAAO,CAAEC,UAAW,GACpBC,OAAQ,CACJC,MAAO,CAAC,CACJH,MAAO,CACHL,UAAW,QACXS,aAAa,EACbC,aAAc,SAAUrR,EAAOyL,EAAOzT,GAElC,GAAI3B,KAAKE,MAAMyJ,KAAWA,EACtB,OAAOA,MAMvBsR,MAAO,CAAC,CACJN,MAAO,CACHL,UAAW,iBCzDpC,SAASqB,GAAUrW,GACtB,IAAMsW,EAAc,GACdC,EAAc,GACpBvW,EAAMhD,MAAMmB,OAAOwK,SAAQ,SAACnK,GAAW,IAAD,EAClC,UAAAA,EAAMpB,aAAN,SAAauL,SAAQ,SAAAtL,GAAS,IAAD,EACzB,UAAAA,EAAKhB,cAAL,SAAasM,SAAQ,SAAAtE,GACbkS,EAAYlS,EAAM5N,IAAK8f,EAAYlS,EAAM5N,MACxC8f,EAAYlS,EAAM5N,IAAM,EAC7B6f,EAAYjS,EAAM5N,IAAM4N,EAAMrI,eAK1C,IAAM+Z,EAAS,CACX1Z,OAAQpF,OAAO4d,OAAOyB,GACtB1B,SAAU,CAAC,CACPvQ,MAAO,QACPzM,KAAMX,OAAO4d,OAAO0B,GACpBzB,gBAAiB7d,OAAOD,KAAKsf,GAC7BvB,qBAAsB9d,OAAOD,KAAKsf,MAK1C,OACI,yBAAS3Z,MAAO,CAAEqM,MAAO,OAAzB,SACI,cAAC,OAAD,CACIpR,KAAMme,EACNd,QAAS,CACLjZ,MAAO,CAAEsP,SAAS,EAAM4J,KAAM,eAAgBF,UAAW,QAASG,SAAU,MAC5EC,OAAQ,CAAE9J,SAAS,GACnB+J,MAAO,CAAEC,UAAW,GACpBC,OAAQ,CACJC,MAAO,CAAC,CACJH,MAAO,CACHL,UAAW,QACXS,aAAa,EACbC,aAAc,SAAUrR,EAAOyL,EAAOzT,GAElC,GAAI3B,KAAKE,MAAMyJ,KAAWA,EACtB,OAAOA,MAMvBsR,MAAO,CAAC,CACJN,MAAO,CACHL,UAAW,iB,IC1CrCwB,G,4MAEFxU,MAAQ,CACJwE,MAAO,GACPiQ,QAAS,G,EAObC,iBAAmB,WACf,IAAIC,EAAQ,EACRC,EAAY,EACZH,EAAU,EACd,EAAKzW,MAAM0D,cAAcvF,OAAOwK,SAAQ,SAAAnK,GAAU,IAAD,EAC7C,UAAAA,EAAMpB,aAAN,SAAauL,SAAQ,SAAAtL,GACjBoZ,IACApZ,EAAKlB,WAAWwM,SAAQ,SAAApC,GACpBA,EAAUC,MAAMmC,SAAQ,SAAAtB,GACpBsP,IACItP,EAAKC,QAAQsP,gBAKjC,EAAKzU,SAAS,CAAEqE,MAAM,GAAD,OAAKoQ,EAAL,cAAoBD,GAASF,a,kEAlBlD/T,KAAKgU,qB,+BAsBL,IAAM1Z,EAAQ0F,KAAK1C,MAAM0D,cACjB2Q,EAAoB3R,KAAK1C,MAAzBqU,gBAFH,EAGsB3R,KAAKV,MAAxBwE,EAHH,EAGGA,MAAOiQ,EAHV,EAGUA,QACTI,EAAa7Z,EAAMZ,QAAQrB,OAEjC,OACI,0BAASkF,UAAU,YAAnB,UACI,mCACI,kDACA,wBAAQA,UAAU,aAAaW,QAASyT,EAAxC,kBAEJ,uBAAMpU,UAAU,iBAAhB,UACI,sBAAKA,UAAU,UAAf,UACI,8BAAG,+BAAO4W,IAAV,oBACA,8BAAG,+BAAOrQ,IAAV,oBACA,8BAAG,+BAAOiQ,IAAV,8BAEJ,sBAAKxW,UAAU,OAAf,UACI,cAACsU,GAAD,CAAUvX,MAAOA,IACjB,cAAC4Y,GAAD,CAAU5Y,MAAOA,IACjB,cAACqZ,GAAD,CAAWrZ,MAAOA,IAClB,cAACgZ,GAAD,CAAWhZ,MAAOA,iB,GAnDjB2F,aAqEZmU,GAAYhU,aAVD,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,iBAKd,GAGFZ,CAA6C0T,ICnEhEO,G,4MACF/U,MAAQ,CACJhF,MAAO,GACPga,kBAAkB,EAClBC,kBAAkB,EAClB1b,SAAU,CACNS,MAAO,K,EAyBfsW,UAAY,SAAC4E,GAAW,IAEZC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,OAAQxH,EAAsBsH,EAAtBtH,YAAalQ,EAASwX,EAATxX,KACrCyX,IACDA,EAAY3G,cAAgB4G,EAAO5G,aAAe2G,EAAYrH,QAAUsH,EAAOtH,QAGtE,UAATpQ,GACA,EAAK2X,aAAaD,EAAOtH,MAAOqH,EAAYrH,OAEnC,SAATpQ,GACA,EAAK4X,YAAYH,EAAaC,EAAQxH,M,EAI9C2H,c,uCAAgB,WAAOva,GAAP,SAAAlF,EAAA,sEAEN,EAAKkI,MAAMwX,uBAAuBxa,GAF5B,2C,wDAMhBqa,a,uCAAe,WAAOI,EAAYC,GAAnB,iBAAA5f,EAAA,6DAEPgI,EAAgB,EAAKE,MAAM0D,cACzBiU,EAAc7X,EAAc3B,OAAOyZ,OAAOH,EAAY,GAC5D3X,EAAc3B,OAAOyZ,OAAOF,EAAU,EAAGC,EAAY,IAJ1C,SAKL,EAAK3X,MAAMnE,YAAY,EAAKmE,MAAM0D,eAL7B,2C,0DASf4T,Y,uCAAc,WAAOH,EAAaC,GAApB,qBAAAtf,EAAA,6DACNgI,EAAgB,EAAKE,MAAM0D,cACzBmU,EAAqB/X,EAAc3B,OAAO+F,WAAU,SAAA1F,GAAK,OAAIA,EAAM/H,KAAO2gB,EAAO5G,eACjFsH,EAAmBhY,EAAc3B,OAAO+F,WAAU,SAAA1F,GAAK,OAAIA,EAAM/H,KAAO0gB,EAAY3G,eACpFuH,EAAajY,EAAc3B,OAAO0Z,GAAoBza,MAAMwa,OAAOR,EAAOtH,MAAO,GACvFhQ,EAAc3B,OAAO2Z,GAAkB1a,MAAMwa,OAAOT,EAAYrH,MAAO,EAAGiI,EAAW,IAL3E,SAOJ,EAAK/X,MAAMnE,YAAY,EAAKmE,MAAM0D,eAP9B,2C,0DAadmQ,eAAiB,WACb,EAAK1R,SAAS,CAAE6U,kBAAmB,EAAKhV,MAAMgV,oB,EAElD3C,gBAAkB,WACd,EAAKlS,SAAS,CAAE8U,kBAAmB,EAAKjV,MAAMiV,oB,yLAjExCtb,EAAU+G,KAAK1C,MAAM0O,MAAMsJ,OAAOvhB,GACxCmI,EAAcE,Q,SACR4D,KAAK1C,MAAML,UAAUhE,G,OAC3BiD,EAAcQ,KAAK,aAAczD,GACjCiD,EAAcI,GAAG,eAAgB0D,KAAK6U,e,mJAOtC3Y,EAAcO,IAAI,eAAgBuD,KAAK6U,eACvC3Y,EAAcS,c,+BAyDR,IACEqE,EAAkBhB,KAAK1C,MAAvB0D,cADH,EAE0ChB,KAAKV,MAA5CgV,EAFH,EAEGA,iBAAkBC,EAFrB,EAEqBA,iBAE1B,IAAKvT,EAAe,OAAO,6CAE3B,IAAM/G,EAAQ,CACVsb,WAAW,eAAMvU,EAAc/G,QAEnC,OACI,0BAASsD,UAAU,eACftD,MAAO,CACHyD,gBAAiB,iBAAYzD,EAAMsb,WAAW/Z,OAAU,IACxDga,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAL1B,UAOI,cAAC9D,GAAD,CAAWT,eAAgBnR,KAAKmR,eAAgBQ,gBAAiB3R,KAAK2R,kBAGtE,wBAIA,cAACP,GAAD,CAAeF,UAAWoD,EAAkBnD,eAAgBnR,KAAKmR,iBAChEnQ,EAAcvF,QAAU,cAACoU,GAAD,CAAWpU,OAAQuF,EAAcvF,OAAQxC,QAAS+H,EAAcpK,IAAKgZ,UAAW5P,KAAK4P,YAC5G2E,GAAqB,cAACH,GAAD,CAAWzC,gBAAiB3R,KAAK2R,yB,GA5GnD1R,aA2HfC,GAAqB,CACvBjD,YACA9D,eACA2b,uBvDqCG,SAAgCa,GACrC,8CAAO,WAAM7Y,GAAN,eAAA1H,EAAA,sDACL,IAEMkF,EAAQlD,KAAKE,MAAMF,KAAKC,UAAUse,IAEtC7Y,EAAS,CAAEE,KAAM,YAAa1C,UAE9B,MAAOoQ,GACPlV,QAAQC,IAAI,8CAA+CiV,GARxD,2CAAP,wDuDlCWkL,GAAQxV,aAfG,SAAAd,GACpB,MAAO,CACH0B,cAAe1B,EAAMe,YAAYW,cACjCnI,SAAUyG,EAAMe,YAAYxH,SAC5BgJ,MAAOvC,EAAMgB,WAAWuB,MACxBpE,aAAc6B,EAAMgB,WAAW7C,gBAUOyC,GAAzBE,CAA6CiU,ICzI3D,SAASwB,GAAavY,GAAQ,IACzBhD,EAAUgD,EAAVhD,MACFL,EAAQ,CAAEsb,WAAW,eAAMjb,EAAML,QAEvC,OACI,cAAC,IAAD,CAAMuD,GAAE,iBAAYlD,EAAM1D,KAA1B,SACI,oBAAI2G,UAAU,gBACVtD,MAAO,CAAEyD,gBAAgB,OAAD,OAASzD,EAAMsb,WAAW/Z,MAA1B,MAD5B,SAEI,qBAAK+B,UAAU,UAAf,SACI,4BAAIjD,EAAMhB,cCVvB,SAASwc,GAAT,GAAuD,IAAlC/Y,EAAiC,EAAjCA,OAAQzD,EAAyB,EAAzBA,MAAOkG,EAAkB,EAAlBA,eACjCuW,EAAmBhZ,EAIzB,OACI,0BAASQ,UAAU,cAAnB,UACI,oBAAIA,UAAU,QAAd,SAAuBjE,IACvB,qBAAIiE,UAAU,YAAd,UACKwY,EAAiBniB,KAAI,SAAA0G,GAAK,OACvB,cAACub,GAAD,CAAcvb,MAAOA,EAAuBiD,UAAU,SAArBjD,EAAM1D,QAE/B,qBAAV0C,GAAiC,oBAAI4E,QAASsB,EAAgBjC,UAAU,8BAAvC,SAAqE,oDCVjH,IAAMyY,GAAb,4MAEI1W,MAAQ,CACJhG,MAAO,GACPkC,MAAO,IAJf,EAWIgF,aAAe,SAACC,GACZ,IAAMC,EAAQD,EAAGE,OAAOD,MAClBE,EAAQH,EAAGE,OAAOtC,KACxB,EAAKoB,SAAL,gBAAiBmB,EAAQF,KAdjC,EAiBI0P,mBAAqB,SAACjV,GAIlB,EAAKsE,SAAS,CAAEjE,MAAOL,IAHN,WACb,EAAK0F,eAnBjB,EAwBIA,SAxBJ,sBAwBe,4BAAAzL,EAAA,yDAEF,EAAKkK,MAAMhG,MAFT,iEAGa,EAAKgE,MAAM2Y,YAAY,EAAK3W,MAAMhG,MAAO,EAAKgG,MAAM9D,OAHjE,OAGDlB,EAHC,OAIP,EAAKgD,MAAMoC,eAAepF,EAAM1D,KAJzB,2CAxBf,EA+BIuX,YAAc,SAAC1N,GACXA,EAAGK,iBACH,EAAKxD,MAAMkC,kBAjCnB,EAoCIsM,gBAAkB,SAACrL,GACfA,EAAGqL,mBArCX,oGAwCc,IAAD,OAqDL,OACI,qBAAKvO,UAAU,SAASW,QAAS8B,KAAKmO,YAAtC,SACI,sBAAK5Q,UAAU,YAAYsD,SAAUb,KAAKa,SAAU3C,QAAS8B,KAAK8L,gBAAlE,UACI,uBAAO5K,YAAY,sCAAsClE,KAAK,OAAOmE,SAAUnB,KAAKQ,aAAcE,MAAOV,KAAKV,MAAMhG,MAAO+E,KAAK,QAAQ+C,aAAa,MAAM6B,UAAQ,IACnK,0BAAS1F,UAAU,wBAAnB,UACI,uFAzDS,CACrB,CACIxJ,GAAI,QACJyH,MAAO,wEAEX,CACIzH,GAAI,QACJyH,MAAO,4EAEX,CACIzH,GAAI,QACJyH,MAAO,0EAEX,CACIzH,GAAI,QACJyH,MAAO,uEAGX,CACIzH,GAAI,QACJyH,MAAO,4EAEX,CACIzH,GAAI,QACJyH,MAAO,6EAEX,CACIzH,GAAI,QACJyH,MAAO,6EAEX,CACIzH,GAAI,QACJyH,MAAO,uEAEX,CACIzH,GAAI,QACJyH,MAAO,0EAEX,CACIzH,GAAI,QACJyH,MAAO,wEAEX,CACIzH,GAAI,QACJyH,MAAO,wEAEX,CACIzH,GAAI,QACJyH,MAAO,0EAUmB5H,KAAI,SAAA0c,GAClB,OACI,qBAAK/S,UAAU,oBACXtD,MAAO,CAAEyD,gBAAgB,OAAD,OAAS4S,EAAW9U,MAApB,MACxB0C,QAAS,kBAAM,EAAKkS,mBAAmBE,EAAW9U,QAFtD,SAGI,qBAAK+B,UAAU,OAAf,gBAHoC+S,EAAWvc,mBArGnF,GAA+BkM,aA2HzBC,GAAqB,CACvB+V,Y1D/FG,SAAqB/a,EAAYgb,GACtC,8CAAO,WAAMpZ,GAAN,eAAA1H,EAAA,+EAEiBsD,EAAayB,UAAUe,EAAYgb,GAFpD,cAEG5b,EAFH,OAIHwC,EAAS,CAAEE,KAAM,YAAa1C,UAJ3B,kBAKIA,GALJ,gCAOH9E,QAAQC,IAAI,iCAAZ,MAPG,yDAAP,wD0DkGW0gB,GAAW/V,aAXA,SAAAd,GACpB,MAAO,KAUsCY,GAAzBE,CAA6C4V,IC7H/DI,G,4MACF9W,MAAQ,CACJC,YAAY,G,EAShBC,eAAiB,WACb,EAAKC,SAAS,CAAEF,YAAa,EAAKD,MAAMC,c,EAG5CG,eAAiB,SAACzG,GACd,EAAKuG,iBACL,EAAKlC,MAAMqC,QAAQC,KAAnB,iBAAkC3G,K,kEAZjB,IAAD,EAChB+G,KAAK1C,MAAMT,WAAW,CAAEvG,OAAQ,6BAChC,IAAMA,GAAS,UAAA0J,KAAK1C,MAAMG,oBAAX,eAAyB7G,MAAO,2BAC/CoJ,KAAK1C,MAAMT,WAAW,CAAEvG,a,+BAcxB,OACI,eAAC,IAAMmW,SAAP,WACI,cAACpP,GAAD,CAAYI,aAAcuC,KAAK1C,MAAMG,eACrC,sBAAKF,UAAU,mBAAf,UACI,sCACA,8CAGA,uBACA,0BAASA,UAAU,6BAAnB,UACKyC,KAAK1C,MAAMyC,iBAAmB,cAAC+V,GAAD,CAAW/Y,OAAQiD,KAAK1C,MAAMyC,gBAAiBzG,MAAM,mBAAmBkG,eAAgBQ,KAAKR,iBAC5H,cAACsW,GAAD,CAAW/Y,OAAQiD,KAAK1C,MAAMP,OAAQzD,MAAM,kBAAkBkG,eAAgBQ,KAAKR,oBAEtFQ,KAAKV,MAAMC,YAAc,cAAC4W,GAAD,CAAU3W,eAAgBQ,KAAKR,eAAgBE,eAAgBM,KAAKN,2B,GAnC5FO,aAiDhBC,GAAqB,CACvBrD,cAKSwZ,GAASjW,aAbE,SAAAd,GACpB,MAAO,CACHvC,OAAQuC,EAAMe,YAAYtD,OAC1BgD,gBAAiBT,EAAMe,YAAYN,gBACnCtC,aAAc6B,EAAMgB,WAAW7C,gBASQyC,GAAzBE,CAA6CgW,IClD7DE,G,4MACJhX,MAAQ,CACNnC,IAAK,GACLoZ,UAAW,CACTxb,SAAU,GACVC,SAAU,IAEZwb,WAAY,CACVzb,SAAU,GACVC,SAAU,GACViO,SAAU,K,EAQdwN,kBAAoB,SAAAhW,GAAO,IAAD,EACAA,EAAGE,OAAnBtC,EADgB,EAChBA,KAAMqC,EADU,EACVA,MACd,EAAKjB,UAAS,SAAA4G,GAAS,MAAK,CAC1BkQ,UAAU,2BACLlQ,EAAUkQ,WADN,mBAENlY,EAAOqC,S,EAKdgW,mBAAqB,SAAAjW,GAAO,IAAD,EACDA,EAAGE,OAAnBtC,EADiB,EACjBA,KAAMqC,EADW,EACXA,MACd,EAAKjB,UAAS,SAAA4G,GAAS,MAAK,CAC1BmQ,WAAW,2BACNnQ,EAAUmQ,YADL,mBAEPnY,EAAOqC,S,EAKdiW,Q,uCAAU,WAAMlW,GAAN,qBAAArL,EAAA,yDACRqL,EAAGK,iBADK,EAEuB,EAAKxB,MAAMiX,UAAlCxb,EAFA,EAEAA,SAAUC,EAFV,EAEUA,SACbD,EAHG,yCAIC,EAAK0E,SAAS,CAAEtC,IAAK,gCAJtB,OAMFyZ,EAAY,CAAE7b,WAAUC,YAC9B,IACE,EAAKsC,MAAMrH,MAAM2gB,GACjB,EAAKnX,SAAS,CAAE8W,UAAW,CAAExb,SAAU,GAAIC,SAAU,MACrD,MAAO0P,GACP,EAAKjL,SAAS,CAAEtC,IAAK,6BAXf,2C,wDAeV0Z,S,uCAAW,WAAMpW,GAAN,uBAAArL,EAAA,yDACTqL,EAAGK,iBADM,EAEgC,EAAKxB,MAAMkX,WAA5Czb,EAFC,EAEDA,SAAUC,EAFT,EAESA,SAAUiO,EAFnB,EAEmBA,SACvBlO,GAAaC,GAAaiO,EAHtB,yCAIA,EAAKxJ,SAAS,CAAEtC,IAAK,6BAJrB,OAMH2Z,EAAc,CAAE/b,WAAUC,WAAUiO,YAC1C,EAAK3L,MAAMnH,OAAO2gB,GAClB,EAAKrX,SAAS,CAAE+W,WAAY,CAAEzb,SAAU,GAAIC,SAAU,GAAIiO,SAAU,MAR3D,2C,wDAWX8N,WAAa,SAAAzgB,GACX,EAAKgH,MAAMyZ,WAAWzgB,I,kEAlDtB0J,KAAK1C,MAAMsE,c,+BAqDX,IAAIoV,EACF,uBAAMzZ,UAAU,MAAMsD,SAAUb,KAAK6W,SAArC,UACE,wCACA,uBACE7Z,KAAK,OACLqB,KAAK,WACLqC,MAAOV,KAAKV,MAAMkX,WAAWvN,SAC7B9H,SAAUnB,KAAK0W,mBACfxV,YAAY,YACZE,aAAa,aAEf,uBACE/C,KAAK,WACLrB,KAAK,WACL0D,MAAOV,KAAKV,MAAMkX,WAAWxb,SAC7BmG,SAAUnB,KAAK0W,mBACfxV,YAAY,WACZE,aAAa,qBAEf,uBACEpE,KAAK,OACLqB,KAAK,WACLqC,MAAOV,KAAKV,MAAMkX,WAAWzb,SAC7BoG,SAAUnB,KAAK0W,mBACfxV,YAAY,WACZE,aAAa,aAEf,uBACA,+CAGA6V,EACF,uBAAM1Z,UAAU,MAAMsD,SAAUb,KAAK2W,QAArC,UACE,uCACA,yBACEtY,KAAK,WACLqC,MAAOV,KAAKV,MAAMiX,UAAUxb,SAC5BoG,SAAUnB,KAAKyW,kBAHjB,UAKE,wBAAQ/V,MAAM,GAAd,yBACCV,KAAK1C,MAAMuE,OAAS7B,KAAK1C,MAAMuE,MAAMjO,KAAI,SAAA+C,GAAI,OAAI,wBAAuB+J,MAAO/J,EAAKoE,SAAnC,SAA8CpE,EAAKsS,UAAtCtS,EAAKC,WAmBtE,8CAKI6G,EAAiBuC,KAAK1C,MAAtBG,aACR,OAEE,sBAAKF,UAAU,QAAf,UACE,cAACF,GAAD,IACA,uCAIA,4BAAI2C,KAAKV,MAAMnC,MACdM,GACC,8BACE,0CACWA,EAAawL,SACtB,wBAAQ/K,QAAS8B,KAAK1C,MAAMpH,OAA5B,0BAIJuH,GAAgBwZ,GAChBxZ,GAAgBuZ,S,GAvJC/W,aAkMrBC,GAAqB,CACzBjK,MnDhLK,SAAe2gB,GACpB,8CAAO,WAAM9Z,GAAN,eAAA1H,EAAA,+EAEgBY,EAAYC,MAAM2gB,GAFlC,OAEGjgB,EAFH,OAGHmG,EAAS,CAAEE,KAAM,WAAYrG,SAH1B,gDAKHnB,QAAQC,IAAI,4BAAZ,MALG,yDAAP,uDmDgLAS,OnD7JK,WACL,8CAAO,WAAM4G,GAAN,SAAA1H,EAAA,+EAEGY,EAAYE,SAFf,OAGH4G,EAAS,CAAEE,KAAM,WAAYrG,KAAM,OAHhC,+CAKHnB,QAAQC,IAAI,6BAAZ,MALG,wDAAP,uDmD6JAU,OnDxKK,SAAgBygB,GACrB,8CAAO,WAAM9Z,GAAN,eAAA1H,EAAA,+EAEgBY,EAAYG,OAAOygB,GAFnC,OAEGjgB,EAFH,OAGHmG,EAAS,CAAEE,KAAM,WAAYrG,SAH1B,gDAKHnB,QAAQC,IAAI,6BAAZ,MALG,yDAAP,uDmDwKAshB,WnD/LK,SAAoBzgB,GACzB,8CAAO,WAAMwG,GAAN,SAAA1H,EAAA,+EAEGY,EAAYO,OAAOD,GAFtB,OAGHwG,EAAS,CAAEE,KAAM,cAAe1G,WAH7B,+CAKHd,QAAQC,IAAI,iCAAZ,MALG,wDAAP,uDmD+LAmM,cAGWsV,GAAc9W,aAfH,SAAAd,GACtB,MAAO,CACLuC,MAAOvC,EAAMgB,WAAWuB,MACxBpE,aAAc6B,EAAMgB,WAAW7C,gBAYiByC,GAAzBE,CAA6CkW,ICvMjE,SAASa,KACd,OACE,qBAAK5Z,UAAU,MAAf,SACE,eAAC,IAAD,WAEE,sBAAMA,UAAU,WAAhB,SACE,eAAC,IAAD,WAKE,cAAC,IAAD,CAAO6Z,KAAK,aAAaC,UAAWzB,KACpC,cAAC,IAAD,CAAOwB,KAAK,SAASC,UAAWhB,KAChC,cAAC,IAAD,CAAOe,KAAK,SAASC,UAAWH,KAChC,cAAC,IAAD,CAAOE,KAAK,IAAIC,UAAWlX,UAG/B,gCCpBYmX,QACW,cAA7BzhB,OAAOC,SAASyhB,UAEe,UAA7B1hB,OAAOC,SAASyhB,UAEhB1hB,OAAOC,SAASyhB,SAASvL,MAAM,2D,8BCjB7BwL,GAAe,CAEnBza,OAAQ,GACRgD,gBAAiB,GACjBiB,cAAe,GACfnI,SAAU,ICLZ,IAAI4e,GAAoB,KACpBxgB,eAAe6D,eAAc2c,GAAoBrgB,KAAKE,MAAML,eAAe6D,eAE/E,IAAM0c,GAAe,CACnB/Z,aAAcga,GACd5V,MAAO,ICLT,IAAM2V,GAAe,CACnBE,WAAW,GCIN,IAAMC,GAAcC,aAAgB,CACzCC,aDFK,WAA4D,IAApCvY,EAAmC,uDAA3BkY,GAAcM,EAAa,uDAAJ,GAC5D,OAAQA,EAAO9a,MACb,IAAK,gBACH,OAAO,2BAAKsC,GAAZ,IAAmBoY,WAAW,IAChC,IAAK,eACH,OAAO,2BAAKpY,GAAZ,IAAmBoY,WAAW,IAChC,QAAS,OAAOpY,ICHlBe,YHCK,WAA0D,IAApCf,EAAmC,uDAA3BkY,GAAcM,EAAa,uDAAJ,GAC1D,OAAQA,EAAO9a,MACb,IAAK,aACH,OAAO,2BAAKsC,GAAZ,IAAmBvC,OAAQ+a,EAAO/a,SACpC,IAAK,gBACH,OAAO,2BAAKuC,GAAZ,IAAmBS,gBAAiB+X,EAAO/a,SAC7C,IAAK,YACH,OAAO,2BAAKuC,GAAZ,IAAmB0B,cAAe8W,EAAOxd,QAC3C,IAAK,aACH,OAAO,2BAAKgF,GAAZ,IAAmBzG,SAAUif,EAAOjf,WACtC,QACE,OAAOyG,IGXXgB,WFAK,WAAyD,IAApChB,EAAmC,uDAA3BkY,GAAcM,EAAa,uDAAJ,GACzD,OAAQA,EAAO9a,MACb,IAAK,WACH,OAAO,2BAAKsC,GAAZ,IAAmB7B,aAAcqa,EAAOnhB,OAC1C,IAAK,cACH,OAAO,2BACF2I,GADL,IAEEuC,MAAOvC,EAAMuC,MAAM7F,QAAO,SAAArF,GAAI,OAAIA,EAAKC,MAAQkhB,EAAOxhB,YAE1D,IAAK,YACH,OAAO,2BAAKgJ,GAAZ,IAAmBuC,MAAOiW,EAAOjW,QACnC,IAAK,YACH,OAAO,2BAAKvC,GAAZ,IAAmB7B,aAAa,2BAAM6B,EAAM7B,cAAb,IAA2B1G,MAAO+gB,EAAO/gB,UAC1E,QACE,OAAOuI,MGjBPyY,GAAmBliB,OAAOmiB,sCAAwCC,KAE3DC,GAAQC,aACnBR,GACAI,GAAiBK,aAAgBC,QCGpBC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB7S,MAAK,YAAkD,IAA/C8S,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACE,cAACf,GAAD,MAEFrZ,SAASkb,eAAe,SPkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxT,MAAK,SAACyT,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACN/jB,QAAQ+jB,MAAMA,EAAMC,YO7G5BlB,O","file":"static/js/main.2a1183e6.chunk.js","sourcesContent":["var map = {\n\t\"./homeData.jpg\": 216,\n\t\"./homeData1.jpg\": 217,\n\t\"./homeNote.jpg\": 218,\n\t\"./homeTeam.jpg\": 219\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 215;","export default __webpack_public_path__ + \"static/media/homeData.2024cdd8.jpg\";","export default __webpack_public_path__ + \"static/media/homeData1.a7a1330f.jpg\";","export default __webpack_public_path__ + \"static/media/homeNote.f4c1b031.jpg\";","export default __webpack_public_path__ + \"static/media/homeTeam.3c100e2a.jpg\";","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n    increaseScore\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function increaseScore(by = SCORE_FOR_REVIEW) {\r\n    const user = getLoggedinUser()\r\n    user.score = user.score + by || by\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _handleLogin(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    makeId\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}","\r\n\r\nimport { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport { userService } from './userService'\r\nimport { utilService } from './utilService'\r\n\r\nexport const boardService = {\r\n  add,\r\n  query,\r\n  remove,\r\n  getById,\r\n  makeGroup,\r\n  updateBoard,\r\n  makeCard,\r\n  makeBoard,\r\n  filterByCardTitle,\r\n  makeActivity\r\n}\r\n\r\n\r\n// More ways to send query params:\r\n// return axios.get('api/toy/?id=1223&balance=13')\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}})\r\n\r\nfunction query(filterBy = null) {\r\n  let queryParams = new URLSearchParams()\r\n  queryParams.set('userId', filterBy.userId)\r\n  return httpService.get(`board?${queryParams}`)\r\n  // return storageService.query('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n  return httpService.get(`board/${boardId}`)\r\n}\r\n\r\nfunction remove(boardId) {\r\n  return httpService.delete(`board/${boardId}`)\r\n  // return storageService.delete('board', boardId)\r\n\r\n}\r\n\r\nasync function updateBoard(board) {\r\n  const updatedBoard = await httpService.put(`board/${board._id}`, board)\r\n  return updatedBoard\r\n}\r\nasync function add(board) {\r\n\r\n  const addedBoard = await httpService.post(`board`, board)\r\n\r\n  // board.byUser = userService.getLoggedinUser()\r\n  // board.aboutUser = await userService.getById(board.aboutUserId)\r\n  // const addedBoard = storageService.post('board', board)\r\n\r\n  return addedBoard\r\n}\r\n\r\n\r\nfunction makeGroup(groupTitle) {\r\n  let group = {\r\n    id: 'g' + utilService.makeId(),\r\n    title: groupTitle,\r\n    cards: [{\r\n      id: 'c' + utilService.makeId(),\r\n      title: 'default-empty',\r\n      description: '',\r\n      comments: [],\r\n      checklists: [],\r\n      members: [],\r\n      labels: [],\r\n      createdAt: Date.now(),\r\n      dueDate: '',\r\n      byMember: {},\r\n      style: { coverType: 'top' }\r\n    }]\r\n\r\n  }\r\n\r\n  return group\r\n\r\n}\r\n\r\n\r\nfunction makeCard(cardTitle) {\r\n  let card = {\r\n    id: 'c' + utilService.makeId(),\r\n    title: cardTitle,\r\n    description: '',\r\n    comments: [],\r\n    checklists: [],\r\n    members: [],\r\n    labels: [],\r\n    createdAt: Date.now(),\r\n    dueDate: '',\r\n    byMember: {},\r\n    style: { coverType: 'top' }\r\n\r\n  }\r\n  return card\r\n\r\n}\r\n\r\nasync function makeActivity(txt, card = {}) {\r\n  let activity = {\r\n    id: 'a' + utilService.makeId(),\r\n    createdAt: Date.now(),\r\n    txt: txt,\r\n    byMember: await getMiniUser(),\r\n    card: card\r\n  }\r\n  return activity\r\n}\r\n\r\nasync function getMiniUser() {\r\n  let loggedinUser = userService.getLoggedinUser()\r\n  let createdBy = (loggedinUser) ? loggedinUser : await userService.login({ username: 'Guest', password: '123' })\r\n  return createdBy\r\n}\r\n\r\nasync function makeBoard(boardTitle, bgUrl) {\r\n\r\n  const colors = ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF']\r\n  const labels = colors.map(color => { return { id: color, title: '', accessibility: '' } })\r\n\r\n  let miniUser = await getMiniUser()\r\n  const newBoard = {\r\n    title: boardTitle,\r\n    createdAt: Date.now(),\r\n    createdBy: miniUser,\r\n    style: {\r\n      bgurl: bgUrl\r\n    },\r\n    members: [miniUser],\r\n    groups: [makeGroup('New List')],\r\n    activities: [],\r\n\r\n    labels\r\n  }\r\n\r\n  const activity = await makeActivity('Created Board')\r\n\r\n  newBoard.activities.unshift(activity)\r\n\r\n  const addedBoard = await httpService.post(`board`, newBoard);\r\n  return addedBoard\r\n\r\n}\r\n\r\n\r\nasync function filterByCardTitle(board, filterBy) {\r\n  console.log('Board got to board service', board)\r\n  console.log('filter got to board service', filterBy)\r\n  if (filterBy.title) {\r\n    const filterRegex = new RegExp(filterBy.title, 'i')\r\n    board.groups = board.groups.map(group => {\r\n      const newGroup = { ...group }\r\n      newGroup.cards = newGroup.cards.filter(card => filterRegex.test(card.title))\r\n      return newGroup\r\n    })\r\n  }\r\n\r\n  return board;\r\n\r\n}","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket\r\n  \r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl, {\r\n        withCredentials: true,\r\n      });\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb) {\r\n      socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log(x)}\r\n// socketService.on('baba', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n","import { boardService } from '../../services/boardService'\r\nimport { socketService } from '../../services/socketService'\r\n\r\nexport function loadBoards(filterBy = {}) {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query(filterBy)\r\n      if (filterBy.userId === '6004748cf9fd65ff47dc81e4') {\r\n        console.log('here');\r\n        console.log(boards);\r\n        dispatch({ type: 'SET_TEMPLATES', boards })\r\n      }\r\n      else dispatch({ type: 'SET_BOARDS', boards })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoards', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadBoard(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      // console.log('What got form server', board)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function createBoard(boardTitle, backgroundImageUrl) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.makeBoard(boardTitle, backgroundImageUrl)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      return board\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function addGroup(title, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let groupToAdd = boardService.makeGroup(title)\r\n      let activity = await boardService.makeActivity(`created new list ${groupToAdd.title}`)\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      boardToUpdate.groups.push(groupToAdd)\r\n\r\n      boardToUpdate.activities.unshift(activity)\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      socketService.emit('update board', board)\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in addGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateGroup(groupTitleToUpdate, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[groupToUpdateIdx].title = groupTitleToUpdate\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function addCard(title, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n\r\n      let newCard = boardService.makeCard(title)\r\n      let activity = await boardService.makeActivity(`created new card ${newCard.title}`)\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[groupToUpdateIdx].cards.push(newCard)\r\n      boardToUpdate.activities.unshift(activity)\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      socketService.emit('update board', board)\r\n    } catch (err) {\r\n      console.log('BoardActions: err in addCard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function removeCard(cardId, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n\r\n      const updatedCardList = boardToUpdate.groups[groupToUpdateIdx].cards.filter(card => card.id !== cardId)\r\n\r\n      boardToUpdate.groups[groupToUpdateIdx].cards = updatedCardList\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in removeGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateBoard(boardToChange, msg = '', card = {}) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      if (msg) {\r\n        let activity = await boardService.makeActivity(msg, card)\r\n        boardToUpdate.activities.unshift(activity)\r\n      }\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n      socketService.emit('update board', board)\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroupOrder', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function filterByCardText(boardId, filterBy) {\r\n  return async dispatch => {\r\n    try {\r\n      const boardToFilter = await boardService.getById(boardId)\r\n\r\n      const board = await boardService.filterByCardTitle(boardToFilter, filterBy)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      dispatch({ type: 'SET_FILTER', filterBy })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroupOrder', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function updateBoardAfterSocket(changedBoard) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let board = JSON.parse(JSON.stringify(changedBoard))\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateBoardAfterSocket', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// export function changeBoardBackground(bgUrltoUpdate, boardToChange) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n\r\n//       boardToUpdate.style.bgurl = bgUrltoUpdate\r\n\r\n//       let activity = await boardService.makeActivity(`changed board style`)\r\n\r\n//       boardToUpdate.activities.unshift(activity)\r\n\r\n//       const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n//       socketService.emit('update board', board)\r\n//     } catch (err) {\r\n//       console.log('BoardActions: err in addCard', err)\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n// export function removeGroup(groupId, boardToChange) {\r\n//   return async dispatch => {\r\n//     try {\r\n\r\n//       let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n//       const updatedGroups = boardToUpdate.groups.filter(group => group.id !== groupId)\r\n//       boardToUpdate.groups = updatedGroups\r\n//       const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n//       socketService.emit('update board', board)\r\n\r\n\r\n//     } catch (err) {\r\n//       console.log('BoardActions: err in removeGroup', err)\r\n//     }\r\n//   }\r\n// }","import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport function HomeHeader(props) {\r\n\r\n\r\n    return (\r\n        <header className=\"app-header flex space-between align-center\">\r\n            <nav>\r\n                <Link to=\"/\" className=\"header-home\"></Link>\r\n                <Link to=\"/board\" className=\"header-board\"> Boards </Link>\r\n            </nav>\r\n\r\n            <nav className=\"navbar-links\">\r\n                {!props.loggedInUser && <Link to=\"/login\" className=\"header-user\"> Login</Link>}\r\n                {props.loggedInUser && <Link to=\"/login\" className=\"user-img\" style={{ backgroundImage: `url(${props.loggedInUser.imgUrl})` }}> </Link>}\r\n\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\n","\r\nexport function HomeHero(props) {\r\n\r\n    return (\r\n        <section style={{ height: document.body.clientHeight - 32, paddingTop: document.body.clientHeight / 2.4 }} className=\"home-hero\">\r\n            <h1 className=\"app-name\">TASX</h1>\r\n            <h3>Manage your teamwork with the ease of your fingers</h3>\r\n            {/* <button>Get started!</button> */}\r\n            <button className=\"scroll-down\" onClick={props.scrollToBottom}></button>\r\n\r\n        </section>\r\n\r\n    )\r\n}","\r\n\r\nexport function AboutMe() {\r\n\r\n    const us = [\r\n        {\r\n            name: 'Hadas Priel',\r\n            img: 'https://res.cloudinary.com/ddgevj2yp/image/upload/v1610985212/T01C3G80Y9K-U01DZHFHVDW-dbfd8d80a8ed-512_zadnxc.jpg',\r\n            txt: ['Full Stack Web Developer', 'B.A. Psychology and Education, Ben Gurion University', 'Management experience'],\r\n            email: 'hadass91@gmail.com',\r\n            facebook: 'https://www.facebook.com/hadas.eliav',\r\n            linkedin: 'https://www.linkedin.com/in/hadas-eliav-priel-aa6705a2'\r\n        },\r\n        {\r\n            name: 'Sandra Zufman',\r\n            img: 'https://res.cloudinary.com/ddgevj2yp/image/upload/v1610985272/T01C3G80Y9K-U01C55ZS84D-198fe46a1d2e-512_foiwqp.jpg',\r\n            txt: ['Full Stack Web Developer.', 'B.A. Administration and Management, Accounting,', 'The College of Management and Academic Studies', 'Communicative and a team player'],\r\n            email: 's.zufman@outlook.com',\r\n            facebook: 'https://www.facebook.com/zufman',\r\n            linkedin: 'https://www.linkedin.com/in/sandra-zufman-3784462b'\r\n        }\r\n    ]\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"about-me\">\r\n            <div className=\"main-container\">\r\n                <header>\r\n                    <h2>Meet the team</h2>\r\n                    <p>We are MisterBit© Coding Academy alumni that came together and assembled TASX as our Full-Stack Developer course's final hand-in.</p>\r\n                </header>\r\n                <ul className=\"cv-list flex justify-center\" >\r\n                    {us.map(star =>\r\n                        <li className=\"cv flex col align-center\" key={star.name}>\r\n                            <img className=\"user-img\" src={star.img} alt={star.img} />\r\n                            <div className=\"txt\">\r\n                                <h3>{star.name}</h3>\r\n                                {/* <a className=\"mail-address\" href={`mailto:${star.email}`} >{star.email}</a> */}\r\n                                {star.txt.map(skil =>\r\n                                    <p className=\"skil\" key={skil}>{skil} </p>\r\n                                )}\r\n                                {/* <p>Full Stack Web Developer, passionate about solving challenges, with experience in writing single-page-applications using the latest WEB technologies such as Node.js, Vue.js, Vue, React, Redux, Angular and MongoDb.</p> */}\r\n                                <nav className=\"social-media\">\r\n                                    <a href={star.linkedin} className=\"linkedin\" ></a>\r\n                                    <a href={star.facebook} className=\"facebook\"></a>\r\n                                    <a href={`mailto:${star.email}`} className=\"email\"></a>\r\n                                </nav>\r\n                            </div>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","\r\nexport function AppFooter() {\r\n\r\n    return (\r\n        <footer className=\"app-footer\">\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\n","import { Link } from \"react-router-dom\"\r\n\r\nexport function AboutTasx() {\r\n\r\n    const sections = [\r\n        {\r\n            img: 'homeNote',\r\n            title: 'Hit your deadlines',\r\n            txt: 'Collaborate, manage projects, and reach new productivity peaks. From high rises to the home office, the way your team works is unique - accomplish it all with TASX.',\r\n            flexDiraction: ''\r\n        },\r\n        {\r\n            img: 'homeTeam',\r\n            title: 'Keep everyone looped in',\r\n            txt: 'Start with a TASX board, lists, and cards. Customize and expand with more features as your teamwork grows. Manage projects, organize tasks, and build team spirit - all in one place.',\r\n            flexDiraction: 'reverse'\r\n        },\r\n        {\r\n            img: 'homeData1',\r\n            title: 'Stay updated on projects progres',\r\n            txt: 'Quick access to data about the progress of the tasks and team members in your projects, all shown in formatted graphs.',\r\n            flexDiraction: ''\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <section className=\"about-tasx main-container\">\r\n            <ul className=\"\" >\r\n                {sections.map(section =>\r\n                    <li className={`about-unit flex space-between ${section.flexDiraction}`} key={section.img}>\r\n                        <div className=\"txt\">\r\n                            <h3>{section.title}</h3>\r\n                            <p className=\"\">{section.txt}</p>\r\n                        </div>\r\n                        <img className={` ${section.flexDiraction}`} src={require(`../../assets/imgs/home/${section.img}.jpg`).default} alt=\"\" />\r\n                    </li>\r\n                )}\r\n                <li className={`cta about-unit flex justify-center align-center space-between`}>\r\n                    <div >\r\n                        <h3>What are you wating for?</h3>\r\n                        <p>Build bords or use our temlates to manage your projects</p>\r\n                    </div>\r\n                    <Link to=\"/board\">\r\n                        <button className=\"start-btn\">start here</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards } from '../store/actions/boardActions.js'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\nimport { HomeHero } from '../cmps/home/HomeHero.jsx';\r\nimport { AboutMe } from '../cmps/home/AboutMe.jsx';\r\nimport { AppFooter } from '../cmps/AppFooter.jsx';\r\nimport { AboutTasx } from '../cmps/home/AboutTasx.jsx';\r\n\r\n\r\nclass _Home extends Component {\r\n  state = {\r\n    isNewBoard: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    //load temlates boards:\r\n    this.props.loadBoards({ userId: '6004748cf9fd65ff47dc81e4' })\r\n    //load loggedInUser or guest boards:\r\n    const userId = this.props.loggedInUser?._id || '6007ffeea8c0ad4b8ad3c478'\r\n    this.props.loadBoards({ userId })\r\n  }\r\n\r\n  toggleNewBoard = () => {\r\n    this.setState({ isNewBoard: !this.state.isNewBoard })\r\n  }\r\n\r\n  onLoadNewBoard = (boardId) => {\r\n    this.toggleNewBoard()\r\n    this.props.history.push(`/board/${boardId}`)\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    window.scrollTo(0, document.body.scrollHeight)\r\n    console.log(this.state.templatesBoards);\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { loggedInUser } = this.props\r\n    return (\r\n      <div className=\"home-page\">\r\n        <HomeHeader loggedInUser={loggedInUser} />\r\n        <HomeHero scrollToBottom={this.scrollToBottom} />\r\n        <AboutTasx />\r\n        <AboutMe />\r\n        <AppFooter />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// <section className=\"board-lists\">\r\n//   {templatesBoards && <BoardList boards={this.props.templatesBoards} title=\"templates boards\" toggleNewBoard={this.toggleNewBoard} />}\r\n//   <BoardList boards={this.props.boards} title=\"Personal boards\" toggleNewBoard={this.toggleNewBoard} />\r\n//   {/* {loggedInUser && <BoardList boards={this.props.boards} title=\"Personal boards\" toggleNewBoard={this.toggleNewBoard} />} */}\r\n// </section>\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.boardModule.boards,\r\n    templatesBoards: state.boardModule.templatesBoards,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadBoards\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateGroup } from '../../store/actions/boardActions.js'\r\n\r\nexport class _EditGroupTitle extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.group\r\n        this.setState({ title })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.updateGroup(this.state.title, this.props.group.id, this.props.selectedBoard)\r\n        this.props.toggleEditMode()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-group-title\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input className=\"new-title-input\" placeholder=\"Group Title\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-btn\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateGroup,\r\n\r\n};\r\n\r\nexport const EditGroupTitle = connect(mapStateToProps, mapDispatchToProps)(_EditGroupTitle);","import React from 'react'\r\n\r\n\r\nexport function CardLabelShowMin(props) {\r\n\r\n    return (\r\n        <ul className=\"card-label-show\">\r\n            {props.labels.map(label => {\r\n                return (\r\n                    <li\r\n                        key={label.id} className={`label ${label.id}`} >\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n\r\n}\r\n","import { userService } from '../../services/userService'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport function CardEditNav(props) {\r\n\r\n\r\n    return (\r\n        <nav className=\"card-edit-nav flex column\">\r\n            <h3>Add to card</h3>\r\n            <button className=\"label-fa\" onClick={props.toggleLabelPalette}> Labels</button>\r\n            <button className=\"checklist-fa\" onClick={props.toggleChecklistBar}> Checklist</button>\r\n            <button className=\"cover-fa\" onClick={props.toggleCoverBar}> Cover</button>\r\n            <button className=\"duetime-fa\" onClick={props.toggleAddDeutime}> Due Date</button>\r\n            <button className=\"duetime-fa\" onClick={props.toggleAddMembers}> Members</button>\r\n            {/* <button onClick={props.toggleAddImg}> Image</button> */}\r\n            <button className=\"delete-fa\" onClick={props.toggleDeleteCard}> Delete</button>\r\n            <button className=\"img-fa\" onClick={props.toggleAddImg}> Image</button>\r\n            {/* <button className=\"delete-fa\"> Delete</button> */}\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddDescription extends Component {\r\n    state = {\r\n        description: { txt: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const description = (this.props.card.description) ? this.props.card.description : ''\r\n        this.setState({ description: { txt: description } })\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const description = { ...this.state.description }\r\n        description[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ description })\r\n    }\r\n\r\n    onAddDescription = async (ev) => {\r\n        ev.preventDefault()\r\n        const newDescription = { ...this.state.description }\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.description = newDescription.txt\r\n        try {\r\n            await this.props.updateCard(cardToSave)\r\n            this.props.toggleAddDescription()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        // this.setState({ description: { txt: '' } })\r\n        // \r\n    }\r\n\r\n\r\n    render() {\r\n        const { description } = this.state\r\n        return (\r\n            <form className=\"add-description show\" onSubmit={this.onAddDescription}>\r\n                <textarea name=\"txt\" value={description.txt}\r\n                    placeholder=\"add a more detailed description...\" onChange={this.handleChange} ></textarea>\r\n                <button className=\"add-btn\">Add</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddDescription = connect(mapStateToProps, mapDispatchToProps)(_AddDescription)\r\n","\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _EditLabelBar extends Component {\r\n    state = {\r\n        label: { title: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const label = { ...this.props.label }\r\n        console.log(label);\r\n        this.setState({ label })\r\n    }\r\n\r\n    handleChange = async (ev) => {\r\n        const label = { ...this.state.label }\r\n        label[ev.target.name] = ev.target.value\r\n\r\n        await this.setState({ label })\r\n\r\n        const boardToSave = { ...this.props.board }\r\n        boardToSave.labels = boardToSave.labels.map(currLabel => {\r\n            if (currLabel.id !== label.id) return currLabel\r\n            else return label\r\n        })\r\n        console.log(boardToSave);\r\n        try {\r\n            await this.props.updateBoard(boardToSave)\r\n            // console.log(this.props.board)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"label-palette edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Edit Label</h3>\r\n                    <button onClick={this.props.toggleEditLabel}>x</button>\r\n                </header>\r\n                <main>\r\n                    <label>Title\r\n                    <input type=\"text\" name=\"title\" value={this.state.label.title} placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange} autoComplete=\"off\" required autoFocus ></input>\r\n                    </label>\r\n                </main>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const EditLabelBar = connect(mapStateToProps, mapDispatchToProps)(_EditLabelBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { EditLabelBar } from './EditLabelBar'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _LabelPalette extends Component {\r\n    state = {\r\n        isEditLabelShow: false,\r\n        labelToEdit: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.board);\r\n    }\r\n\r\n\r\n    addLable = (label) => {\r\n        console.log(label);\r\n        const cardToSave = { ...this.props.card }\r\n        if (!cardToSave.labels) cardToSave.labels = [label]\r\n        else {\r\n            const alredyOnCard = cardToSave.labels.find(currLabel => currLabel.id === label.id)\r\n            if (alredyOnCard) cardToSave.labels = cardToSave.labels.filter(currLabel => currLabel.id !== label.id)\r\n            else cardToSave.labels.push(label)\r\n        }\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave, 'added label')\r\n    }\r\n\r\n    toggleEditLabel = () => {\r\n        this.setState({ isEditLabelShow: !this.state.isEditLabelShow })\r\n    }\r\n\r\n    openEditLabel = async (label) => {\r\n        await this.setState({ labelToEdit: label })\r\n        this.toggleEditLabel()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"label-palette edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Labels</h3>\r\n                    <button onClick={this.props.toggleLabelPalette}>x</button>\r\n                </header>\r\n                <main>\r\n                    <ul>\r\n                        {this.props.board.labels.map(label => {\r\n                            const alredyOnCard = (this.props.card.labels?.find(currLabel => currLabel.id === label.id)) ? 'alredyOnCard' : ''\r\n                            return (\r\n                                <li key={label.id} >\r\n                                    <div className={`${label.id}`} onClick={() => { this.addLable(label) }}>{label.title} <span className={`${alredyOnCard}`}></span></div>\r\n                                    <button className=\"open-edit-label\" onClick={() => { this.openEditLabel(label) }}></button>\r\n                                </li>)\r\n                        })}\r\n\r\n                        {this.state.isEditLabelShow && <EditLabelBar toggleEditLabel={this.toggleEditLabel} label={this.state.labelToEdit} board={this.props.board} updateBoard={this.props.updateBoard} />}\r\n                    </ul>\r\n                </main>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const LabelPalette = connect(mapStateToProps, mapDispatchToProps)(_LabelPalette)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddChecklistBar extends Component {\r\n    state = {\r\n        checklist: { title: '', todos: [] }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const checklist = { ...this.state.checklist }\r\n        checklist[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ checklist })\r\n    }\r\n\r\n    onAddChecklist = (ev) => {\r\n        ev.preventDefault()\r\n        const checklist = { id: utilService.makeId(), ...this.state.checklist }\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.checklists = (cardToSave.checklists) ? [...cardToSave.checklists, checklist] : [checklist]\r\n        // console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave, 'added checklist')\r\n        this.setState({ checklist: { title: '', todos: [] } })\r\n        this.props.toggleChecklistBar()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"edit-bar\" onSubmit={this.onAddChecklist}>\r\n                <header className=\"seconde\">\r\n                    <h3>Add Checklist</h3>\r\n                    <button onClick={this.props.toggleChecklistBar}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <label>Title\r\n                    <input type=\"text\" name=\"title\" value={this.state.checklist.title} placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange} autoComplete=\"off\" required autoFocus ></input>\r\n                    </label>\r\n                    <button className=\"add-btn\">Add</button>\r\n                </main>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddChecklistBar = connect(mapStateToProps, mapDispatchToProps)(_AddChecklistBar)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddCoverBar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    handleStyle = async (ev) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.style = (cardToSave.style) ? { ...cardToSave.style, [ev.target.name]: ev.target.value } : { [ev.target.name]: ev.target.value }\r\n        await this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    removeCover = async (ev) => {\r\n        ev.preventDefault()\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.style = { coverType: 'top' }\r\n        await this.props.updateCard(cardToSave)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"add-cover-bar edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>cover</h3>\r\n                    <button onClick={this.props.toggleCoverBar}>x</button>\r\n                </header>\r\n                <button onClick={this.removeCover} className=\"edit-btn remove\">Remove Cover </button>\r\n                <h5>size</h5>\r\n                <main>\r\n                    <label className=\"inline-block\">\r\n                        <div className=\"full demo window\">\r\n                            <div className=\"demo header\"></div>\r\n                            <div className=\"demo content\">\r\n                                <div className=\"demo p1\"></div>\r\n                                <div className=\"demo p2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"radio\" name=\"coverType\" value=\"full\" onClick={this.handleStyle} ></input>\r\n                    </label>\r\n                    <label className=\"inline-block\" >\r\n                        <div className=\"top demo window\">\r\n                            <div className=\"demo header\"></div>\r\n                            <div className=\"demo content\">\r\n                                <div className=\"demo p1\"></div>\r\n                                <div className=\"demo p2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"radio\" name=\"coverType\" value=\"top\" onClick={this.handleStyle}></input>\r\n                    </label>\r\n                </main>\r\n                <h5>colors</h5>\r\n                <main>\r\n                    <nav className=\"colors\">\r\n                        <label className=\"color #7bc86c\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#7bc86c\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #f5dd29\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#f5dd29\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ffaf3f\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ffaf3f\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ef7564\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ef7564\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #cd8de5\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#cd8de5\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #5ba4cf\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#5ba4cf\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #29cce5\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#29cce5\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #6deca9\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#6deca9\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ff8ed4\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ff8ed4\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #172b4d\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#172b4d\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                    </nav>\r\n                </main>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddCoverBar = connect(mapStateToProps, mapDispatchToProps)(_AddCoverBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardLabelShow extends Component {\r\n\r\n    removeLable = (labelId) => {\r\n        const cardToSave = { ...this.props.card }\r\n        const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n        cardToSave.labels = labelsToSave\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"card-label-show\">\r\n                {this.props.labels.map(label => {\r\n                    return (\r\n                        <li key={label.id} className={`label-edit ${label.id} flex align-center justify-center `} >\r\n                            <p className=\"label-title\">{label.title}</p>\r\n                            {/* <button className=\"hover-nav\" onClick={() => { this.removeLable(label.id) }}>X</button> */}\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardLabelShow = connect(mapStateToProps, mapDispatchToProps)(_CardLabelShow)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _TodoShow extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ todo: this.props.todo })\r\n    }\r\n\r\n\r\n    handleChange = async (ev) => {\r\n        const todo = { ...this.state.todo }\r\n        todo.isDone = ev.target.checked\r\n        await this.setState({ todo })\r\n\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistIndex = cardToSave.checklists.findIndex(checklist => checklist.id === this.props.checklistId)\r\n        const todoIndex = cardToSave.checklists[checklistIndex].todos.findIndex(todo => todo.id === this.state.todo.id)\r\n        cardToSave.checklists[checklistIndex].todos[todoIndex] = this.state.todo\r\n        try {\r\n            await this.props.updateCard(cardToSave)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { todo } = this.state\r\n        if (!todo) return <div>Loading...</div>\r\n        return (\r\n            <li className=\"todo-show flex space-between align-center\">\r\n                <span className=\"content\">\r\n                    <input type=\"checkbox\" name=\"isDone\" value={todo.isDone} checked={todo.isDone} onChange={this.handleChange} ></input>\r\n                    <h3 className={`${todo.isDone}`} >{todo.txt}</h3>\r\n                </span>\r\n                <span className=\"nav\">\r\n                    <button className=\" delete\" onClick={() => { this.props.removeTodo(todo.id, this.props.checklistId) }} ></button>\r\n                </span>\r\n            </li>)\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const TodoShow = connect(mapStateToProps, mapDispatchToProps)(_TodoShow)\r\n","import React from 'react'\r\nimport { TodoShow } from './TodoShow'\r\n\r\nexport function TodoListShow(props) {\r\n\r\n\r\n    const { checklist, card, updateCard, removeTodo } = props\r\n    return (\r\n        <ul className=\"show\">\r\n            {checklist.todos.map(todo => <TodoShow key={todo.id} todo={todo}\r\n                card={card} checklistId={checklist.id}\r\n                updateCard={updateCard} removeTodo={removeTodo} />)}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TodoListShow } from './TodoListShow'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nclass _CardChecklistShow extends Component {\r\n    state = {\r\n        todo: { txt: '', isDone: false },\r\n        progress: 0\r\n    }\r\n    componentDidMount() {\r\n        this.getProgress()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps !== this.props) {\r\n            this.getProgress()\r\n        }\r\n    }\r\n\r\n\r\n    removeChecklist = (checklistId) => {\r\n        // const labelsToSave = this.props.labels.filter(label => label.id !== labelId)\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistsToSave = cardToSave.checklists.filter(checklist => checklist.id !== checklistId)\r\n\r\n        cardToSave.checklists = checklistsToSave\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    handleTaskChange = (ev) => {\r\n        const todo = { ...this.state.todo }\r\n        if (ev.target.name === 'isDone') todo.isDone = ev.target.checked\r\n        else todo[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ todo })\r\n    }\r\n\r\n    addTask = (ev, checklistId) => {\r\n        ev.preventDefault()\r\n\r\n        const todo = { ...this.state.todo, id: utilService.makeId() }\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistToSave = cardToSave.checklists.find(checklist => checklist.id === checklistId)\r\n        checklistToSave.todos = (checklistToSave.todos) ? [...checklistToSave.todos, todo] : [todo]\r\n        const checklistsToSave = cardToSave.checklists.map(checklist => {\r\n            if (checklist.id === checklistId) return checklistToSave\r\n            else return checklist\r\n        })\r\n        cardToSave.checklists = checklistsToSave\r\n\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave)\r\n            .then(this.setState({ todo: { txt: '', isDone: false } }))\r\n    }\r\n\r\n\r\n    removeTodo = (todoId, checklistId) => {\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistIndex = cardToSave.checklists.findIndex(checklist => checklist.id === checklistId)\r\n        const todoToSave = cardToSave.checklists[checklistIndex].todos.filter(todo => todo.id !== todoId)\r\n        cardToSave.checklists[checklistIndex].todos = todoToSave\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    getProgress = () => {\r\n        let done = 0\r\n        let all = 0\r\n        this.props.checklists.forEach(Checklist => {\r\n            Checklist.todos.forEach(todo => {\r\n                if (todo.isDone === true) done++\r\n                all++\r\n            })\r\n        })\r\n        const progress = Math.round(done / all * 100)\r\n        this.setState({ progress })\r\n    }\r\n\r\n    render() {\r\n        const { todo, progress } = this.state\r\n        const done = (progress === 100) ? 'done' : ''\r\n        return (\r\n            <ul className=\"card-checklist-show card-show \">\r\n                {/* <progress value={progress.done} max={progress.all}> </progress> */}\r\n                <div className=\"show flex align-center\">\r\n                    <span>{`${progress}%`}</span>\r\n                    <div className=\"progress-wraper\"><div className={`progress-inner ${done}`} style={{ width: `${progress}%` }}></div></div>\r\n                </div>\r\n                {this.props.checklists.map(checklist => {\r\n                    return (\r\n                        <li key={checklist.id} className=\"checklist-wraper\" >\r\n                            <header className=\"flex space-between\">\r\n                                <h4 className=\"checklist-title\" > {checklist.title}</h4>\r\n                                <button className=\"edit-btn\" onClick={() => { this.removeChecklist(checklist.id) }}>Delete</button>\r\n                            </header>\r\n                            <TodoListShow checklist={checklist} card={this.props.card} updateCard={this.props.updateCard}\r\n                                removeTodo={this.removeTodo} />\r\n                            <form onSubmit={(event) => { this.addTask(event, checklist.id) }}>\r\n                                <input type=\"text\" name=\"txt\" value={todo.txt} onChange={this.handleTaskChange}\r\n                                    placeholder=\"Add an item\" autoComplete=\"off\" required></input>\r\n                                <button className=\"add-btn\">Add</button>\r\n                                {/* <button className=\"add-btn\" onClick>X</button> */}\r\n                            </form>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardChecklistShow = connect(mapStateToProps, mapDispatchToProps)(_CardChecklistShow)\r\n","import React, { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddDeutimeBar(props) {\r\n\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Due Date</h3>\r\n                <button onClick={props.toggleAddDeutime}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                />\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardDuedateShow(props) {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    const { card } = props\r\n    const m = new Date(card.duedate).getMonth() + 1\r\n    let month = ''\r\n    switch (m) {\r\n        case 1: month = 'Jan'; break;\r\n        case 2: month = 'Feb'; break;\r\n        case 3: month = 'Mar'; break;\r\n        case 4: month = 'Apr'; break;\r\n        case 5: month = 'May'; break;\r\n        case 6: month = 'Jun'; break;\r\n        case 7: month = 'Jul'; break;\r\n        case 8: month = 'Aug'; break;\r\n        case 9: month = 'Sep'; break;\r\n        case 10: month = 'Oct'; break;\r\n        case 11: month = 'Nov'; break;\r\n        case 12: month = 'Dec'; break;\r\n        default: break;\r\n    }\r\n    const day = card.duedate.substring(8, 10)\r\n    const remainingTime = (new Date(card.duedate) - Date.now())\r\n    const urgent = (remainingTime < 1000 * 60 * 60 * 24) ? 'urgent' : ''\r\n\r\n\r\n    return (\r\n        <p className={`duetime-fa ${urgent} `}>{` ${month} ${day}`}</p>\r\n    )\r\n}\r\n\r\n\r\n","export const cloudinaryService = {\r\n  uploadImg\r\n}\r\nasync function uploadImg(file) {\r\n  const CLOUD_NAME = \"dtg8d5gnc\"\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file)\r\n  formData.append('upload_preset', 'mkdsw2hg');\r\n  try {\r\n    const res = await fetch(UPLOAD_URL, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    const data = await res.json()\r\n    return data\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/cloudinaryService'\r\n\r\nexport class Uploader extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 300,\r\n    width: 300,\r\n    isUploading: false\r\n  }\r\n  onUploadImg = async ev => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev.target.files[0])\r\n    this.setState({ imgUrl: secure_url, isUploading: false, height, width })\r\n    this.props.addImg(secure_url)\r\n    // this.props.onFinishUpload(secure_url)\r\n  }\r\n  render() {\r\n    // const { imgUrl, isUploading, height, width } = this.state\r\n    const { imgUrl, isUploading } = this.state\r\n    const uploadStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n      objectFit: 'cover'\r\n    }\r\n    return (\r\n      <div className=\"uploader flex align-center justify-center\"\r\n        style={uploadStyle}>\r\n\r\n        <label htmlFor=\"imageUploader\">\r\n          {isUploading ? 'Uploading....' : 'Upload Image'}\r\n        </label>\r\n        <input onChange={this.onUploadImg}\r\n          type=\"file\" accept=\"image/*\" id=\"imageUploader\" style={{ display: \"none\" }} />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { Uploader } from '../Uploader'\r\n// import { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddImgBar(props) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Upload image</h3>\r\n                <button onClick={props.toggleAddImg}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <Uploader addImg={props.addImg} />\r\n                {/* <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                /> */}\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardImgShow(props) {\r\n\r\n\r\n    const { card } = props\r\n    const img = card.img\r\n\r\n\r\n    return (\r\n        <span className=\"card-ow\">\r\n            <img className=\"show\" src={img} alt=\"\" />\r\n            {/* <p className={`duetime-fa ${urgent} `}>{` ${month} ${day}`}</p> */}\r\n        </span>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddMembersBar extends Component {\r\n    state = {\r\n        member: { fullname: '' }\r\n    }\r\n\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const member = { ...this.state.member }\r\n        member[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ member })\r\n    }\r\n\r\n    onAddMembers = (user) => {\r\n        const { card } = this.props\r\n        const cardToSave = { ...card }\r\n        const userToRemove = card.members.find(currUser => currUser._id === user._id)\r\n        if (userToRemove) {\r\n            const newMembers = card.members.filter(currUser => currUser._id !== user._id)\r\n            cardToSave.members = newMembers\r\n            this.setState({ member: { fullname: '' } })\r\n\r\n        } else {\r\n            const miniUser = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n            cardToSave.members = (cardToSave.members) ? [...cardToSave.members, miniUser] : [miniUser]\r\n        }\r\n        this.props.updateCard(cardToSave, `added ${this.state.member.fullname}`)\r\n        this.setState({ member: { fullname: '' } })\r\n    }\r\n\r\n    render() {\r\n        const { toggleAddMembers, users, card } = this.props\r\n\r\n        return (\r\n\r\n            <div className=\"add-members-bar edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Add Members</h3>\r\n                    <button onClick={toggleAddMembers}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <label>Members\r\n                    <input list=\"members\" name=\"fullname\" value={this.state.member.fullname}\r\n                            onChange={this.handleChange} autoFocus autoComplete=\"off\" ></input>\r\n                    </label>\r\n                    <ul>\r\n                        {users.map(user => {\r\n                            const alreadyMember = (card.members?.find(currUser => currUser.fullname === user.fullname)) ? 'alreadyMember' : ''\r\n                            return (\r\n                                <li className={alreadyMember} key={user._id} value={user.fullname} onClick={() => { this.onAddMembers(user) }}>\r\n                                    <div className=\"member-item\">\r\n                                        <div className=\"user-img\" style={{ backgroundImage: `url(${user.imgUrl})` }}></div>\r\n                                        {user.fullname}\r\n                                    </div>\r\n                                </li>)\r\n                        })}\r\n                    </ul>\r\n                    {/* <datalist id=\"members\">\r\n                        {users.map(user => {\r\n                            const alreadyMember = (card.members?.find(currUser => currUser.fullname === user.fullname)) ? 'alreadyMember' : ''\r\n                            return <option className={alreadyMember} key={user._id} value={user.fullname}> </option>\r\n                        })}\r\n                    </datalist> */}\r\n                    {/* <button className=\"add-btn\">Add</button> */}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AddMembersBar = connect(mapStateToProps, mapDispatchToProps)(_AddMembersBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardMembersShow extends Component {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <ul className=\"card-member-show flex flex-end\">\r\n\r\n                {this.props.members.map(member => {\r\n                    let userImgStyle = {\r\n                        backgroundImage: `url(${member.imgUrl})`\r\n                    }\r\n                    return (\r\n                        <li key={member._id} style={userImgStyle} className='user-img' >\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardMembersShow = connect(mapStateToProps, mapDispatchToProps)(_CardMembersShow)\r\n","\r\n\r\nexport function ActivityTime({ time }) {\r\n    let timeToPresent\r\n    const a = new Date(time)\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    if (min < 10) min = '0' + min\r\n    if (hour < 10) hour = '0' + hour\r\n    var dateToPresent = month + ' ' + date\r\n    var hourToPresent = ' at ' + hour + ':' + min\r\n\r\n\r\n    switch (Date.now() - time) {\r\n        case Date.now() - time < 1000 * 60:\r\n            timeToPresent = \"Just now\";\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 2:\r\n            timeToPresent = \"a minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 3:\r\n            timeToPresent = \"two minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 4:\r\n            timeToPresent = \"three minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 5:\r\n            timeToPresent = \"four minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 6:\r\n            timeToPresent = \"about five minute ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 31:\r\n            timeToPresent = \"half an hour ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 61:\r\n            timeToPresent = \"an hour ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 60 * 24:\r\n            timeToPresent = \"an few houers ago\" + hourToPresent\r\n            break;\r\n        case Date.now() - time < 1000 * 60 * 60 * 60 * 48:\r\n            timeToPresent = \"an day ago\" + hourToPresent\r\n            break;\r\n\r\n        default:\r\n            timeToPresent = dateToPresent + hourToPresent\r\n\r\n    }\r\n\r\n    return (\r\n        <small className=\"activity-time\">{timeToPresent}</small>\r\n    )\r\n\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ActivityTime } from './ActivityTime'\r\n\r\nclass _CardActivitiesShow extends Component {\r\n\r\n    render() {\r\n        this.props.activities.filter(activity => {\r\n            if (activity.card.id === this.props.card.id) return <div></div>\r\n        })\r\n        return (\r\n            <ul className=\"card-activities-show card-show show\">\r\n                {this.props.activities.map(activity => {\r\n                    if (activity.card.id === this.props.card.id) return (\r\n                        <li key={activity.id} className=\"flex align-center\" >\r\n                            <div className=\"user-img inline-block\" style={{ backgroundImage: `url(${activity.byMember.imgUrl})` }}></div>\r\n                            <div className=\"txt\">\r\n                                <p><span>{activity.byMember.fullname} </span> {` ${activity.txt} to this card`}</p>\r\n                                <ActivityTime time={activity.createdAt} />\r\n                            </div>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardActivitiesShow = connect(mapStateToProps, mapDispatchToProps)(_CardActivitiesShow)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _DeleteCardBar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n\r\n    }\r\n\r\n\r\n    deleteCard = async () => {\r\n        try {\r\n            this.props.onRemoveCard(this.props.cardId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"edit-bar\" onSubmit={this.deleteCard}>\r\n                <header className=\"seconde\">\r\n                    <h3> Delete card?</h3>\r\n                    <button onClick={this.props.toggleDeleteCard}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <p>All actions will be removed from the activity feed and you won’t be able to re-open the card. There is no undo.</p>\r\n                    <button className=\"add-btn red\">Delete</button>\r\n                </main>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const DeleteCardBar = connect(mapStateToProps, mapDispatchToProps)(_DeleteCardBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { utilService } from '../services/utilService.js'\r\nimport { loadBoard, updateBoard } from '../store/actions/boardActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { CardEditNav } from '../cmps/cardEdit/CardEditNav'\r\nimport { AddDescription } from '../cmps/cardEdit/AddDescription'\r\nimport { LabelPalette } from '../cmps/cardEdit/LabelPalette'\r\nimport { AddChecklistBar } from '../cmps/cardEdit/AddChecklistBar'\r\nimport { AddCoverBar } from '../cmps/cardEdit/AddCoverBar'\r\nimport { CardLabelShow } from '../cmps/cardEdit/CardLabelShow'\r\nimport { CardChecklistShow } from '../cmps/cardEdit/CardChecklistShow'\r\nimport { AddDeutimeBar } from '../cmps/cardEdit/AddDeutimeBar'\r\nimport { CardDuedateShow } from '../cmps/cardEdit/CardDuedateShow'\r\nimport { AddImgBar } from '../cmps/cardEdit/AddImgBar'\r\nimport { CardImgShow } from '../cmps/cardEdit/CardImgShow'\r\nimport { AddMembersBar } from '../cmps/cardEdit/AddMembersBar'\r\nimport { CardMembersShow } from '../cmps/cardEdit/CardMembersShow'\r\nimport { CardActivitiesShow } from '../cmps/cardEdit/CardActivitiesShow'\r\nimport { DeleteCardBar } from '../cmps/cardEdit/DeleteCardBar'\r\n\r\nclass _CardEdit extends Component {\r\n    state = {\r\n        board: null,\r\n        groupId: null,\r\n        card: null,\r\n        isDescriptionShowing: false,\r\n        isLabelPaletteShowing: false,\r\n        isAddChecklistShowing: false,\r\n        isCoverShowing: false,\r\n        isAddDeutimeShowing: false,\r\n        isAddImgShowing: false,\r\n        isAddMembersShowing: false,\r\n        isDeleteCardShowing: false,\r\n        isActivitiesShowing: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            this.loadCard()\r\n            this.props.loadUsers()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.match !== prevprops.match) this.loadCard()\r\n    }\r\n\r\n    loadCard = async () => {\r\n        const boardId = this.props.selectedBoard._id\r\n        const groupId = this.props.groupId\r\n        const cardId = this.props.card.id\r\n        try {\r\n            await this.props.loadBoard(boardId)\r\n            const groups = this.props.selectedBoard.groups\r\n            const group = groups.find(group => group.id === groupId)\r\n            const card = group.cards.find(currCard => currCard.id === cardId)\r\n            this.setState({ board: this.props.selectedBoard, groupId, card })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateCard = async (cardToSave, txt = '') => {\r\n        const boardToSave = { ...this.props.selectedBoard }\r\n        const groupToSave = boardToSave.groups.find(group => group.id === this.state.groupId)\r\n        const cardsToSave = groupToSave.cards.map(card => {\r\n            if (card.id === cardToSave.id) return cardToSave\r\n            else return card\r\n        })\r\n        groupToSave.cards = cardsToSave\r\n        const groupsToSave = boardToSave.groups.map(group => {\r\n            if (group.id === groupToSave.id) return groupToSave\r\n            else return group\r\n        })\r\n        boardToSave.groups = groupsToSave\r\n        if (txt) {\r\n            const activity = this.createActivity(txt)\r\n            boardToSave.activities.unshift(activity)\r\n        }\r\n        try {\r\n            // await updateBoard(boardToSave)\r\n            await this.props.updateBoard(boardToSave)\r\n            this.loadCard()\r\n\r\n        } catch (err) {\r\n            console.log('BoardActions: err in loadBoard', err)\r\n        }\r\n    }\r\n\r\n    createActivity = (txt) => {\r\n        const { loggedInUser, card } = this.props\r\n        const miniUser = (loggedInUser) ? { _id: loggedInUser._id, fullname: loggedInUser.fullname, imgUrl: loggedInUser.imgUrl } : { _id: '123', fullname: 'guest', imgUrl: 'https://res.cloudinary.com/ddgevj2yp/image/upload/v1610989052/avatar-1_kbr5un.jpg' }\r\n        const miniCard = { id: card.id, title: card.title }\r\n        const activity = { id: 'a' + utilService.makeId(), createdAt: Date.now(), txt, byMember: miniUser, card: miniCard }\r\n        return activity\r\n    }\r\n\r\n    toggleLabelPalette = () => {\r\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\r\n    }\r\n    toggleChecklistBar = () => {\r\n        this.setState({ isAddChecklistShowing: !this.state.isAddChecklistShowing })\r\n    }\r\n    toggleCoverBar = () => {\r\n        this.setState({ isCoverShowing: !this.state.isCoverShowing })\r\n    }\r\n    toggleAddDescription = () => {\r\n        this.setState({ isDescriptionShowing: !this.state.isDescriptionShowing })\r\n    }\r\n    toggleAddDeutime = () => {\r\n        this.setState({ isAddDeutimeShowing: !this.state.isAddDeutimeShowing })\r\n    }\r\n    toggleAddMembers = () => {\r\n        this.setState({ isAddMembersShowing: !this.state.isAddMembersShowing })\r\n    }\r\n\r\n    toggleAddImg = () => {\r\n        this.setState({ isAddImgShowing: !this.state.isAddImgShowing })\r\n    }\r\n\r\n    toggleDeleteCard = () => {\r\n        this.setState({ isDeleteCardShowing: !this.state.isDeleteCardShowing })\r\n    }\r\n\r\n    addDeuDate = (date) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.duedate = date\r\n        this.updateCard(cardToSave, `added due date`)\r\n        // this.updateCard(cardToSave, `set card to be due at ${date}`)\r\n    }\r\n\r\n    addImg = (img) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.img = img\r\n        this.updateCard(cardToSave, 'added img')\r\n        // console.log('card to save:', cardToSave)\r\n    }\r\n\r\n    stopProg = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isDescriptionShowing, isActivitiesShowing } = this.state\r\n        const { card, users, toggleCardEdit, onRemoveCard, selectedBoard } = this.props\r\n        const isLabels = (card && card.labels && card.labels.length > 0)\r\n        const isChecklists = (card && card.checklists && card.checklists.length > 0)\r\n        const isDuedate = (card && card.duedate)\r\n        const isMember = (card && card.members && card.members.length > 0)\r\n        const coverShow = (card && card.style?.coverType) ? `top t${card.style.bgColor}` : ''\r\n        const isImg = (card && card.img)\r\n\r\n\r\n        if (!card) return <div></div>\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"screen\" onClick={toggleCardEdit}>\r\n                    <div onClick={(ev) => { this.stopProg(ev) }} >\r\n                        {/* <section className=\"card-edit\"> */}\r\n                        <section className={`card-edit ${coverShow}`}>\r\n                            {/* {(card.style && card.style.coverType && card.style.bgColor) ? <CardCoverShow card={card} /> : ''} */}\r\n                            <header className=\"edit-header\">\r\n                                <button className=\"close\" onClick={toggleCardEdit}></button>\r\n                                <h1 className=\"title-sign\">{card.title}</h1>\r\n                            </header>\r\n\r\n                            <div className=\"permanent\">\r\n                                <main>\r\n                                    <div className=\"nav-mini-show show flex \">\r\n                                        <div className=\" inline-block\">{isLabels && <div> <h5>Labels </h5><CardLabelShow labels={card.labels} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isDuedate && <div className=\"duedate\"> <h5>Due Date </h5> <CardDuedateShow duedate={card.duedate} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isMember && <div className=\"members\"> <h5>Members </h5> <CardMembersShow members={card.members} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        {/* <div className=\"inline-block\">{isImg && <div className=\"card-img\"> <CardImgShow img={card.img} card={card} updateCard={this.updateCard} /></div>}</div> */}\r\n                                    </div>\r\n                                    <h4 className=\"description-sign\">Description </h4>\r\n                                    {(isDescriptionShowing) ? <AddDescription card={card} toggleAddDescription={this.toggleAddDescription} updateCard={this.updateCard} /> : ((card.description) ?\r\n                                        <div className=\"description show\">{card.description} <button className=\"edit-btn\" onClick={this.toggleAddDescription}>Edit</button></div> :\r\n                                        <div className=\"show description\" onClick={this.toggleAddDescription}>add a more detailed description...</div>)}\r\n                                    <p>{card.description && ''}</p>\r\n                                    <div className=\"inline-block\">{isImg && <div className=\"card-img\"> <CardImgShow img={card.img} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                    <div>{isChecklists && <div><CardChecklistShow checklists={card.checklists} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                    <div>{isActivitiesShowing && <div> <h4 className=\"activity-sign\">Activity </h4> <CardActivitiesShow activities={selectedBoard.activities} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                </main>\r\n                                <div className=\"edit-list\">\r\n                                    {this.state.isLabelPaletteShowing && <LabelPalette card={card} updateCard={this.updateCard} toggleLabelPalette={this.toggleLabelPalette} board={selectedBoard} updateBoard={this.props.updateBoard} />}\r\n                                    {this.state.isAddChecklistShowing && <AddChecklistBar card={card} updateCard={this.updateCard} toggleChecklistBar={this.toggleChecklistBar} />}\r\n                                    {this.state.isCoverShowing && <AddCoverBar card={card} updateCard={this.updateCard} toggleCoverBar={this.toggleCoverBar} />}\r\n                                    {this.state.isAddDeutimeShowing && <AddDeutimeBar card={card} updateCard={this.updateCard} toggleAddDeutime={this.toggleAddDeutime} addDeuDate={this.addDeuDate} />}\r\n                                    {this.state.isAddMembersShowing && <AddMembersBar card={card} updateCard={this.updateCard} toggleAddMembers={this.toggleAddMembers} users={users} />}\r\n                                    {this.state.isAddImgShowing && <AddImgBar card={card} updateCard={this.updateCard} toggleAddImg={this.toggleAddImg} addImg={this.addImg} />}\r\n                                    {this.state.isDeleteCardShowing && <DeleteCardBar cardId={card.id} boardId={selectedBoard._id} toggleDeleteCard={this.toggleDeleteCard} onRemoveCard={onRemoveCard} />}\r\n                                </div>\r\n                                <CardEditNav card={card} toggleLabelPalette={this.toggleLabelPalette} toggleChecklistBar={this.toggleChecklistBar} toggleCoverBar={this.toggleCoverBar}\r\n                                    toggleAddDeutime={this.toggleAddDeutime} toggleAddImg={this.toggleAddImg} toggleAddMembers={this.toggleAddMembers} toggleDeleteCard={this.toggleDeleteCard} />\r\n                            </div>\r\n\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    loadUsers\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n","\r\n\r\nimport React from 'react'\r\n\r\nexport function ChecklistSign(props) {\r\n    let done = 0\r\n    let all = 0\r\n\r\n    props.checklists.forEach(Checklist => {\r\n        Checklist.todos.forEach(todo => {\r\n            if (todo.isDone === true) done++\r\n            all++\r\n        })\r\n    })\r\n\r\n    return (\r\n        <span className=\"checklistSign sign\" > {`${done} / ${all}`} </span>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardDuedateShowMin(props) {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    const { card } = props\r\n    const m = new Date(card.duedate).getMonth() + 1\r\n    let month = ''\r\n    switch (m) {\r\n        case 1: month = 'Jan'; break;\r\n        case 2: month = 'Feb'; break;\r\n        case 3: month = 'Mar'; break;\r\n        case 4: month = 'Apr'; break;\r\n        case 5: month = 'May'; break;\r\n        case 6: month = 'Jun'; break;\r\n        case 7: month = 'Jul'; break;\r\n        case 8: month = 'Aug'; break;\r\n        case 9: month = 'Sep'; break;\r\n        case 10: month = 'Oct'; break;\r\n        case 11: month = 'Nov'; break;\r\n        case 12: month = 'Dec'; break;\r\n        default: break;\r\n    }\r\n    const day = card.duedate.substring(8, 10)\r\n    const remainingTime = (new Date(card.duedate) - Date.now())\r\n    const urgent = (remainingTime < 1000 * 60 * 60 * 24) ? 'urgent' : ''\r\n\r\n\r\n    return (\r\n        <span className=\"card-duedate-show\">\r\n            <span className={`duetime-fa duetime-fa-min ${urgent} `}>{` ${month} ${day}`}</span>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { removeCard } from '../../store/actions/boardActions.js'\r\nimport { CardLabelShowMin } from '../cardEdit/CardLabelShowMin'\r\nimport { CardEdit } from '../../pages/CardEdit'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { ChecklistSign } from './ChecklistSign'\r\n// import { CardCoverShowMin } from './CardCoverShowMin'\r\nimport { CardImgShow } from '../cardEdit/CardImgShow'\r\nimport { CardDuedateShowMin } from '../cardEdit/CardDuedateShowMin'\r\nimport { CardMembersShow } from '../cardEdit/CardMembersShow'\r\n\r\nexport class _CardPreview extends Component {\r\n\r\n    state = {\r\n        isCardEtidShow: false\r\n    }\r\n\r\n\r\n    onRemoveCard = (cardId) => {\r\n        console.log('cardId to remove', cardId)\r\n        this.props.removeCard(cardId, this.props.groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleCardEdit = () => {\r\n        this.setState({ isCardEtidShow: !this.state.isCardEtidShow })\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isCardEtidShow } = this.state\r\n        // const cardBgc = (card.style && card.style.coverType && card.style.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardBgc = (card.style?.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardCover = (card.style?.coverType === 'top' && card.style.bgColor) ? `top t${card.style.bgColor}` : ''\r\n        return (\r\n\r\n\r\n            <Draggable draggableId={String(card.id)} index={this.props.index} direction=\"horizontal\" type=\"card\">\r\n                {(provided) => {\r\n                    return (\r\n\r\n                        <li key={card.id}  {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className={(card.title !== 'default-empty') ? `` : `list-preview-empty`}>\r\n                            <article className={(card.title !== 'default-empty') ? `card-preview ${cardBgc} ${cardCover}` : `card-preview-empty`}>\r\n                                {/* {(card.style?.coverType === 'top') ? <CardCoverShowMin card={card} /> : ''} */}\r\n                                {/* <button className=\"edit-fa\" onClick={() => this.toggleCardEdit}></button> */}\r\n                                <button className=\"edit-s\" onClick={this.toggleCardEdit}></button>\r\n\r\n                                {/* <button className=\"delete-s\" onClick={() => this.onRemoveCard(card.id)}></button> */}\r\n                                {card.labels && <CardLabelShowMin labels={card.labels} />}\r\n                                <p onClick={this.toggleCardEdit}>{card.title}</p>\r\n                                {card.img && <CardImgShow card={card} />}\r\n                                <nav className=\"flex space-between flex-end\">\r\n                                    <span>\r\n                                        {(card.description) ? <span className=\"descriptionSign sign\"></span> : ''}\r\n                                        {(card.checklists && card.checklists.length > 0) ? <ChecklistSign checklists={card.checklists} /> : ''}\r\n                                        {(card.duedate) ? <CardDuedateShowMin card={card} /> : ''}\r\n                                    </span>\r\n                                    <span>\r\n                                        {(card.members) ? <CardMembersShow members={card.members} /> : ''}\r\n                                    </span>\r\n                                </nav>\r\n                                {isCardEtidShow && <CardEdit card={card} groupId={this.props.groupId} toggleCardEdit={this.toggleCardEdit} onRemoveCard={this.onRemoveCard} />}\r\n                            </article>\r\n                        </li>\r\n                    )\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    removeCard\r\n\r\n};\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);","import { CardPreview } from './CardPreview.jsx'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\n\r\n\r\nexport function CardList(props) {\r\n    return (\r\n        <Droppable droppableId={props.groupId} type=\"card\" >\r\n            {(provided) => (\r\n                <ul className=\"card-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {props.cards.map((card, index) =>\r\n                        <CardPreview key={card.id} card={card} groupId={props.groupId} index={index} />\r\n                    )}\r\n                    {provided.placeholder}\r\n                </ul>\r\n            )}\r\n\r\n        </Droppable>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addCard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddCard extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addCard(this.state.title, this.props.group.id, this.props.selectedBoard)\r\n        this.props.toggleAddCardMode()\r\n\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddCardMode()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-card\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <textarea placeholder=\"Enter a title for this card...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-btn\">Add Card</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addCard\r\n\r\n};\r\n\r\nexport const AddCard = connect(mapStateToProps, mapDispatchToProps)(_AddCard);","\r\n\r\nexport function RemoveList(props) {\r\n\r\n    return (\r\n        <section className=\"edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3> Delete list?</h3>\r\n                    <button onClick={props.toggleDeleteBar}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <p>All actions will be removed from the activity feed and you won’t be able to re-open the list. There is no undo.</p>\r\n                    <button className=\"add-btn red\" onClick={()=>props.onRemoveGroup(props.group.id, props.group.title)}>Delete</button>\r\n                </main>\r\n            </section>\r\n    )\r\n}","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AddCard } from './AddCard.jsx'\r\nimport { RemoveList } from './RemoveList'\r\n\r\n\r\nexport class _EditGroupNav extends Component {\r\n\r\n    state = {\r\n        isOnAddCardMode: false,\r\n        isDeleteBarShow: false\r\n    }\r\n\r\n\r\n    toggleDeleteBar = () => {\r\n        this.setState({ isDeleteBarShow: !this.state.isDeleteBarShow })\r\n    }\r\n\r\n   \r\n    toggleAddCardMode = () => {\r\n\r\n        this.setState({ isOnAddCardMode: !this.state.isOnAddCardMode })\r\n    }\r\n\r\n    render() {\r\n        const { onRemoveGroup } = this.props\r\n        const { isDeleteBarShow } = this.state\r\n        const { isOnAddCardMode } = this.state\r\n        const { group } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                < nav className=\"edit-group-container\">\r\n                    {(!isOnAddCardMode) ? <button onClick={this.toggleAddCardMode}>Add another card...</button> : <AddCard group={group} toggleAddCardMode={this.toggleAddCardMode} />}\r\n                    {(!isDeleteBarShow) ? <button onClick={this.toggleDeleteBar}>Delete this list...</button> : <RemoveList group={group} toggleDeleteBar={this.toggleDeleteBar} onRemoveGroup={onRemoveGroup} />}\r\n                    \r\n                </nav >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport const EditGroupNav = connect(mapStateToProps, mapDispatchToProps)(_EditGroupNav);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\nimport { EditGroupTitle } from './EditGroupTitle'\r\nimport { CardList } from '../card/CardList'\r\nimport { AddCard } from './AddCard.jsx'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { EditGroupNav } from './EditGroupNav'\r\n\r\n\r\n\r\nexport class _GroupPreview extends Component {\r\n\r\n    state = {\r\n        isOnAddCardMode: false,\r\n        isEditMode: false,\r\n        isEditGroupNavShow: false,\r\n        // isOnAddGroupMode: false,\r\n        title: '',\r\n        groupHeight: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ groupHeight: document.body.clientHeight })\r\n    }\r\n\r\n    onRemoveGroup = async (groupId, groupTitle) => {\r\n        let boardToUpdate = JSON.parse(JSON.stringify(this.props.selectedBoard))\r\n        let msg = `removed list titled ${groupTitle}`\r\n        const updatedGroups = boardToUpdate.groups.filter(group => group.id !== groupId)\r\n        boardToUpdate.groups = updatedGroups\r\n\r\n        const board = await this.props.updateBoard(boardToUpdate, msg)\r\n        return board\r\n        // this.props.removeGroup(groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n    toggleAddCardMode = () => {\r\n\r\n        this.setState({ isOnAddCardMode: !this.state.isOnAddCardMode })\r\n    }\r\n    toggleEditGroupNav = () => {\r\n        this.setState({ isEditGroupNavShow: !this.state.isEditGroupNavShow })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isEditMode, isOnAddCardMode, isEditGroupNavShow } = this.state\r\n        const { group } = this.props\r\n        return (\r\n            <Draggable draggableId={group.id} index={this.props.index}>\r\n                {(provided) => {\r\n                    return (\r\n                        <li className=\"group\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                            <article className=\"group-preview\">\r\n                                <div className=\"group-wraper\" >\r\n                                    <header>\r\n                                        {(!isEditMode) ? <p onClick={this.toggleEditMode}>{group.title} </p> : <EditGroupTitle group={group} toggleEditMode={this.toggleEditMode} />}\r\n                                        <button className=\"menu-group\" onClick={() => this.toggleEditGroupNav(group.id)}></button>\r\n                                        {isEditGroupNavShow && <EditGroupNav group={group} onRemoveGroup={this.onRemoveGroup} />}\r\n                                    </header>\r\n                                    <main style={{ maxHeight: `${this.state.groupHeight - 200}px` }}>\r\n                                        <div className=\"main-group-wraper\">\r\n                                            {group.cards && <CardList groupId={group.id} cards={group.cards} />}\r\n                                        </div>\r\n                                    </main>\r\n                                    {(!isOnAddCardMode) ? <p className=\"add-another-card\" onClick={this.toggleAddCardMode}> Add another card</p> : <AddCard group={group} toggleAddCardMode={this.toggleAddCardMode} />}\r\n                                </div>\r\n                            </article>\r\n                        </li>\r\n\r\n                    )\r\n\r\n                }}\r\n\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n\r\n};\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../store/actions/boardActions.js'\r\n// import Icon from '@material-ui/core/Icon';\r\nexport class _AddNewGroup extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addGroup(this.state.title, this.props.selectedBoard)\r\n        this.setState({ title: '' })\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-group\">\r\n                <form className=\"add-new-wraper\" onSubmit={this.onSubmit} >\r\n                    <input className=\"add-another-group\" placeholder=\"Add another list\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" />\r\n                    <button className=\"save-group-btn\">Add List</button>\r\n                    <button className=\"cancel-group-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    addGroup,\r\n};\r\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupPreview } from './GroupPreview.jsx'\r\nimport { AddNewGroup } from './AddNewGroup.jsx'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\n\r\nexport class _GroupList extends Component {\r\n    state = {\r\n        isOnAddGroupMode: false,\r\n    }\r\n    toggleAddGroupMode = () => {\r\n        this.setState({ isOnAddGroupMode: !this.state.isOnAddGroupMode })\r\n    }\r\n    render() {\r\n        const { isOnAddGroupMode } = this.state\r\n        return (\r\n            <DragDropContext onDragEnd={this.props.onDragEnd}>\r\n                <section className=\"group-list-container\">\r\n                    <Droppable droppableId={'moveGroups'} direction=\"horizontal\" type=\"group\">\r\n                        {(provided) => (\r\n                            <ul className=\"group-list clean-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {this.props.groups.map((group, index) =>\r\n                                    <GroupPreview key={group.id} group={group} index={index} />\r\n                                )}\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                    {(!isOnAddGroupMode) ? <p className=\"add-another-list\" onClick={this.toggleAddGroupMode}> Add another list</p> : <AddNewGroup boardId={this.props.boardId} toggleAddGroupMode={this.toggleAddGroupMode} />}\r\n                </section>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n};\r\nexport const GroupList = connect(mapStateToProps, mapDispatchToProps)(_GroupList);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _EditBoardTitle extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.selectedBoard\r\n        this.setState({ title })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        const { title } = this.state\r\n        if (!title) return\r\n        const board = { ...this.props.selectedBoard, title }\r\n        await this.props.updateBoard(board, `changed board title to ${title}`)\r\n        this.props.toggleEditMode()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-board-title\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input className=\"new-title-input\" placeholder=\"Board Title\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" autoFocus />\r\n                    <button className=\"add-btn\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n};\r\n\r\nexport const EditBoardTitle = connect(mapStateToProps, mapDispatchToProps)(_EditBoardTitle);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { EditBoardTitle } from './EditBoardTitle'\r\n\r\n\r\n\r\nexport class _AboutBoard extends Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    render() {\r\n        const { isEditMode } = this.state\r\n        const { selectedBoard } = this.props\r\n        return (\r\n            <div className=\"about-board-container side-menu-sub-item\">\r\n                <header>\r\n                    <h1>About this board</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleAboutBoard}>x</button>\r\n                </header>\r\n                <main className=\"menu-container\">\r\n                    <section>\r\n                        <p className=\"menu-item made-by\"> Made by </p>\r\n                        <div className=\"flex align-center\">\r\n                            <div className=\"user-img sub inline-block\" style={{ backgroundImage: `url(${selectedBoard.createdBy.imgUrl})` }}></div>\r\n                            <span>{selectedBoard.createdBy.username} </span>\r\n                        </div>\r\n                    </section>\r\n                    <section>\r\n                        <p className=\"menu-item board-name\">Board name <span className=\"board-name-edit\">click to edit</span></p>\r\n\r\n                        {(!isEditMode) ? <p className=\"board-name-edit\" onClick={this.toggleEditMode}> {selectedBoard.title} </p> : <EditBoardTitle toggleEditMode={this.toggleEditMode} />}\r\n                        {/* <button onClick={() => { this.props.toggleAboutBoard() }}>Back to Menu</button> */}\r\n                    </section>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n\r\n};\r\n\r\nexport const AboutBoard = connect(mapStateToProps, mapDispatchToProps)(_AboutBoard);\r\n\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _ChangeBoardBackground extends Component {\r\n\r\n    state = {\r\n        bgurl: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onChooseBackground = (bgUrl) => {\r\n        const callback = () => {\r\n            this.onSubmit();\r\n        };\r\n        this.setState({ bgurl: bgUrl }, callback)\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let boardToUpdate = JSON.parse(JSON.stringify(this.props.selectedBoard))\r\n        boardToUpdate.style.bgurl = this.state.bgurl\r\n        await this.props.updateBoard(boardToUpdate, 'changed background')\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg104',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\r\n\r\n            },\r\n            {\r\n                id: 'bg105',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg106',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg107',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/02/19/11/33/backround-1209772_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg108',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/08/15/15/37/pen-2644392_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg109',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg110',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/05/31/13/13/rain-3443977_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg111',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/04/05/11/38/bokeh-316425_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg112',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/25/13/01/stones-167089_1280.jpg\"\r\n            }\r\n\r\n        ]\r\n        return (\r\n            <section className=\"side-menu-sub-item \" onClick={this.stopPropagation}>\r\n                <header>\r\n                    <h3>Choose background</h3>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleChangeBackground}>x</button>\r\n                </header>\r\n                <main className=\"add-board-backgrounds\">\r\n                    {backgroundImages.map(background => {\r\n                        return (\r\n                            <div className=\"backgrounds-tumbs\" key={background.id}\r\n                                style={{ backgroundImage: `url(${background.bgurl})` }}\r\n                                onClick={() => this.onChooseBackground(background.bgurl)}>\r\n                                <div className=\"plus\">+</div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </main>\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n};\r\n\r\nexport const ChangeBoardBackground = connect(mapStateToProps, mapDispatchToProps)(_ChangeBoardBackground);\r\n\r\n\r\n","import { ActivityTime } from \"../cardEdit/ActivityTime\";\r\n\r\n\r\nexport function ActivityPreview(props) {\r\n\r\n    return (\r\n        <li className=\"activity-preview flex align-center\">\r\n            <div className=\"user-img inline-block\" style={{ backgroundImage: `url(${props.activity.byMember.imgUrl})` }}></div>\r\n            <div className=\"txt\">\r\n                <p> <span className=\"user-name\">{props.activity.byMember.fullname}</span> {props.activity.txt}  </p>\r\n                <ActivityTime time={props.activity.createdAt} />\r\n            </div>\r\n        </li>\r\n\r\n    )\r\n}","import { ActivityPreview } from './ActivityPreview'\r\n\r\n\r\nexport function ActivityBoard(props) {\r\n\r\n    return (\r\n        <section className=\"activity-container\">\r\n            <p className=\"menu-item menu-activity\">Activity Log</p>\r\n            <ul className=\"activity-list\">\r\n                {props.activities.map(activity =>\r\n                    <ActivityPreview key={activity.id} activity={activity} />\r\n                )}\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AboutBoard } from '../boardMenu/AboutBoard'\r\nimport { ChangeBoardBackground } from '../boardMenu/ChangeBoardBackground'\r\nimport { ActivityBoard } from '../boardMenu/ActivityBoard'\r\n// import { RemoveBoard } from '../boardMenu/RemoveBoard'\r\n// import { Dashboard } from '../dashboard/Dashboard'\r\n\r\nclass _BoardSideMenu extends Component {\r\n    state = {\r\n        isAboutBoardShown: false,\r\n        isChangeBackgroundShown: false,\r\n        isBoardAnalysisShown: false,\r\n        isDeleteBoardShown: false,\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    toggleAboutBoard = () => {\r\n        this.setState({ isAboutBoardShown: !this.state.isAboutBoardShown })\r\n    }\r\n    toggleChangeBackground = () => {\r\n        this.setState({ isChangeBackgroundShown: !this.state.isChangeBackgroundShown })\r\n    }\r\n    toggleBoardAnalysis = () => {\r\n        this.setState({ isBoardAnalysisShown: !this.state.isBoardAnalysisShown })\r\n    }\r\n    toggleDeleteBoard = () => {\r\n        this.setState({ isDeleteBoardShown: !this.state.isDeleteBoardShown })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isAboutBoardShown } = this.state\r\n        const { isChangeBackgroundShown } = this.state\r\n        // const { isBoardAnalysisShown } = this.state\r\n        // const { isDeleteBoardShown } = this.state\r\n        const { selectedBoard, classname } = this.props\r\n        const open = (classname) ? 'open' : ''\r\n\r\n        return (\r\n            <section className={`board-side-menu ${open}`}>\r\n                <header className=\"menu-header\">\r\n                    <h1>Menu</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleSideMenu}>X</button>\r\n                    <hr />\r\n                </header>\r\n                {/* <div className=\"hr\"></div> */}\r\n\r\n                <div className=\"menu-container\">\r\n                    {(!isAboutBoardShown) ? <div className=\"menu-item\" onClick={this.toggleAboutBoard}> <p className=\"menu-about\"> About this board</p></div> : <AboutBoard toggleAboutBoard={this.toggleAboutBoard} board={selectedBoard} />}\r\n                    {(!isChangeBackgroundShown) ? <p className=\"menu-item menu-background\" onClick={this.toggleChangeBackground}> Change Background</p> : <ChangeBoardBackground toggleChangeBackground={this.toggleChangeBackground} />}\r\n                    {/* {(isBoardAnalysisShown) && <p className=\"board-analysis\" onClick={this.isBoardAnalysisShown}>Board Analysis</p>} */}\r\n                    {/* {(!isDashboardShown) ? <p className=\"menu-dashboard menu-item\" onClick={this.toggleDashboard}>Board Analysis</p> : <Dashboard toggleDashboard={this.toggleDashboard} />} */}\r\n                    {/* {(!isDeleteBoardShown) ? <p className=\"delete-board\" onClick={this.toggleDeleteBoard}> Delete Board</p> : <RemoveBoard toggleDeleteBoard={this.toggleDeleteBoard} board={selectedBoard} />} */}\r\n                    <hr />\r\n                    {selectedBoard.activities && <ActivityBoard activities={selectedBoard.activities} />}\r\n                </div>\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const BoardSideMenu = connect(mapStateToProps, mapDispatchToProps)(_BoardSideMenu)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { filterByCardText } from '../../store/actions/boardActions.js'\r\n\r\n// TODO TO FIX AFTER BACKEND\r\nclass _BoardFilter extends Component {\r\n    state = {\r\n        filterBy: {\r\n            title: ''\r\n        },\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const callback = () => {\r\n            this.props.filterByCardText(this.props.selectedBoard._id, this.state.filterBy);\r\n        };\r\n\r\n        const filterBy = { ...this.state.filterBy }\r\n        filterBy[ev.target.name] = ev.target.value;\r\n\r\n        this.setState({ filterBy }, callback);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <input type=\"text\" name=\"title\"\r\n                value={this.state.filterBy.title}\r\n                // placeholder=\"Search in development\"\r\n                autoComplete=\"off\" placeholder ='Find cards by name...'\r\n                onChange={this.handleChange} className=\"header-filter\" />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n       \r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    filterByCardText\r\n}\r\n\r\nexport const BoardFilter = connect(mapStateToProps, mapDispatchToProps)(_BoardFilter)","import { Link } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardFilter } from './board/BoardFilter'\r\n\r\n\r\nclass _AppHeader extends Component {\r\n\r\n    state = {\r\n        userImgStyle: {\r\n            backgroundImage: \"url(https://res.cloudinary.com/ddgevj2yp/image/upload/v1610989052/avatar-1_kbr5un.jpg\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.loggedInUser) return\r\n        const userImgUrl = this.props.loggedInUser.imgUrl\r\n        let userImgStyle = {\r\n            backgroundImage: `url(${userImgUrl})`\r\n        }\r\n        this.setState({ userImgStyle })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { selectedBoard, toggleSideMenu, toggleDashboard } = this.props\r\n        return (\r\n            <div className=\"main-header\">\r\n                <header className=\"app-header flex space-between align-center\">\r\n                    <nav>\r\n                        <Link to=\"/\" className=\"header-home\"></Link>\r\n                        <Link to=\"/board\" className=\"header-board\"> Boards </Link>\r\n                        <span className=\" normal-media\">\r\n                            <label>\r\n                                <BoardFilter />\r\n                            </label>\r\n                        </span>\r\n                    </nav>\r\n                    <h3 className=\"header-logo\">TASX</h3>\r\n\r\n                    <nav className=\"navbar-links flex space-between align-center\">\r\n                        <Link to=\"/home\" className=\"header-about-us normal-media\">About Us</Link>\r\n                        <Link to=\"/login\" className=\"user-img\" style={this.state.userImgStyle}></Link>\r\n                    </nav>\r\n                </header>\r\n                <header className=\"narrow-media app-header flex space-between align-center\">\r\n                    <span>\r\n                        <label>\r\n                            <BoardFilter />\r\n                        </label>\r\n                    </span>\r\n                    <Link to=\"/home\" className=\"header-about-us\">About Us</Link>\r\n\r\n                </header>\r\n                <header className=\"app-header board-header flex space-between align-center\">\r\n                    <nav>\r\n                        <h5>{selectedBoard.title}</h5>\r\n                    </nav>\r\n\r\n                    <nav className=\"navbar-links  \">\r\n                        <button className=\"header-invite\" onClick={toggleDashboard}>Statistics</button>\r\n                        <button className=\"header-show-menu\" onClick={toggleSideMenu}> Show Menu</button>\r\n\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import { Pie } from 'react-chartjs-2';\r\n\r\nexport function PieBoard(props) {\r\n    const membersTaskMap = props.board.groups.reduce((membersMapAcc, group) => {\r\n        group.cards?.forEach(card => {\r\n            card.members?.forEach(member => {\r\n                const count = membersMapAcc[member.fullname] + 1 || 1\r\n                membersMapAcc[member.fullname] = count\r\n            })\r\n        })\r\n        return membersMapAcc\r\n    }, {})\r\n\r\n\r\n\r\n\r\n    const data = {\r\n        labels: Object.keys(membersTaskMap),\r\n        datasets: [{\r\n            data: Object.values(membersTaskMap),\r\n            backgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            hoverBackgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            fontColor: '#ffff'\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Pie data={data} options={{\r\n                title: { display: true, text: 'Total Cards Per Member', fontColor: '#ffff', fontSize: '14' },\r\n                legend: { display: false },\r\n                ticks: { precision: 0 },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            fontColor: '#ffff',\r\n                            beginAtZero: true,\r\n                            userCallback: function (label, index, labels) {\r\n                                if (Math.floor(label) === label) {\r\n                                    return label;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        ticks: {\r\n                            fontColor: '#ffff'\r\n\r\n                        }\r\n                    }]\r\n                }\r\n            }} />\r\n        </section>\r\n    )\r\n}\r\n","import { HorizontalBar } from 'react-chartjs-2';\r\n\r\nexport function BarBoard(props) {\r\n\r\n    const groupCardMap = props.board.groups.reduce((cardsMapAcc, group) => {\r\n        cardsMapAcc[group.title] = group.cards.length\r\n        return cardsMapAcc\r\n    }, {})\r\n\r\n\r\n    const myData = {\r\n        labels: Object.keys(groupCardMap),\r\n        datasets: [{\r\n            label: 'tasks',\r\n            data: Object.values(groupCardMap),\r\n            backgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            hoverBackgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF']\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <HorizontalBar data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Total Cards Per List', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n\r\n                                // beginAtZero: true,\r\n                                // userCallback: function (label, index, labels) {\r\n                                //     // when the floored value is the same as the value we have a whole number\r\n                                //     if (Math.floor(label) === label) {\r\n                                //         return label;\r\n                                //     }\r\n\r\n                                // }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }} />\r\n        </section>\r\n    )\r\n}\r\n","import { Line } from 'react-chartjs-2';\r\n\r\nexport function LineBoard(props) {\r\n    // console.log(props.board);\r\n    // let membersActivities = {}\r\n    // props.board.activities.forEach(activity => {\r\n    //     if (membersActivities[activity.byMember.fullname]) membersActivities[activity.byMember.fullname]++\r\n    //     else membersActivities = { ...membersActivities, [activity.byMember.fullname]: 1 }\r\n    // })\r\n    // console.log(membersActivities);\r\n\r\n    const now = Date.now()\r\n    const groupTimeMap = props.board.groups.reduce((timeMapAcc, group) => {\r\n        let cardsInGroupSum = 0\r\n        group.cards?.forEach(card => {\r\n            cardsInGroupSum++\r\n            // let diff = Math.round((now - card.createdAt) / (1000 * 60 * 60 * 24))\r\n            let diff = (now - card.createdAt) / 36000 / 1000\r\n            timeMapAcc[group.title] = Math.round(diff / cardsInGroupSum)\r\n\r\n        })\r\n        return timeMapAcc\r\n    }, {})\r\n\r\n\r\n    const myData = {\r\n        labels: Object.keys(groupTimeMap),\r\n        datasets: [{\r\n            data: Object.values(groupTimeMap),\r\n            backgroundColor: ['#0079BF'],\r\n            hoverBackgroundColor: ['#0079BF'],\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Line\r\n                data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Average Lifetime Of Cards Per List In Days', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true,\r\n                                userCallback: function (label, index, labels) {\r\n                                    // when the floored value is the same as the value we have a whole number\r\n                                    if (Math.floor(label) === label) {\r\n                                        return label;\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff'\r\n\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { Bar } from 'react-chartjs-2';\r\n\r\nexport function BarLabels(props) {\r\n    const labelsTitle = []\r\n    const labelsTotal = []\r\n    props.board.groups.forEach((group) => {\r\n        group.cards?.forEach(card => {\r\n            card.labels?.forEach(label => {\r\n                if (labelsTotal[label.id]) labelsTotal[label.id]++\r\n                else labelsTotal[label.id] = 1\r\n                labelsTitle[label.id] = label.title\r\n            })\r\n        })\r\n    })\r\n\r\n    const myData = {\r\n        labels: Object.values(labelsTitle),\r\n        datasets: [{\r\n            label: 'tasks',\r\n            data: Object.values(labelsTotal),\r\n            backgroundColor: Object.keys(labelsTitle),\r\n            hoverBackgroundColor: Object.keys(labelsTitle)\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Bar\r\n                data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Labels Usage', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true,\r\n                                userCallback: function (label, index, labels) {\r\n                                    // when the floored value is the same as the value we have a whole number\r\n                                    if (Math.floor(label) === label) {\r\n                                        return label;\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff'\r\n\r\n                            }\r\n                        }]\r\n                    }\r\n                }} />\r\n        </section>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PieBoard } from './PieBoard'\r\nimport { BarBoard } from './BarBoard'\r\nimport { LineBoard } from './LineBoard'\r\nimport { BarLabels } from './BarLabels'\r\n\r\n\r\nclass _Dashboard extends Component {\r\n\r\n    state = {\r\n        todos: '',\r\n        cardSum: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.todosAndCardsSum()\r\n    }\r\n\r\n    todosAndCardsSum = () => {\r\n        let total = 0\r\n        let complited = 0\r\n        let cardSum = 0\r\n        this.props.selectedBoard.groups.forEach(group => {\r\n            group.cards?.forEach(card => {\r\n                cardSum++\r\n                card.checklists.forEach(checklist => {\r\n                    checklist.todos.forEach(todo => {\r\n                        total++\r\n                        if (todo.isDone) complited++\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        this.setState({ todos: `${complited} / ${total}`, cardSum })\r\n    }\r\n\r\n    render() {\r\n        const board = this.props.selectedBoard\r\n        const { toggleDashboard } = this.props\r\n        const { todos, cardSum } = this.state\r\n        const membersSum = board.members.length\r\n\r\n        return (\r\n            <section className=\"dashboard\">\r\n                <header>\r\n                    <h1>Board Statistics</h1>\r\n                    <button className=\"close-menu\" onClick={toggleDashboard}>x</button>\r\n                </header>\r\n                <main className=\"menu-container\">\r\n                    <div className=\"summery\">\r\n                        <p><span>{membersSum}</span> Total members</p>\r\n                        <p><span>{todos}</span> Checked todos</p>\r\n                        <p><span>{cardSum}</span> Total Cards on board</p>\r\n                    </div>\r\n                    <div className=\"data\">\r\n                        <PieBoard board={board} />\r\n                        <BarBoard board={board} />\r\n                        <BarLabels board={board} />\r\n                        <LineBoard board={board} />\r\n                    </div>\r\n                </main>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupList } from '../cmps/group/GroupList'\r\nimport { BoardSideMenu } from '../cmps/board/BoardSideMenu'\r\nimport { socketService } from '../services/socketService'\r\nimport { loadBoard, updateBoard, updateBoardAfterSocket } from '../store/actions/boardActions.js'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\nimport { Dashboard } from '../cmps/dashboard/Dashboard'\r\n\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        board: {},\r\n        isBoardMenuShown: false,\r\n        isDashboardShown: false,\r\n        filterBy: {\r\n            title: ''\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const boardId = this.props.match.params.id\r\n        socketService.setup()\r\n        await this.props.loadBoard(boardId)\r\n        socketService.emit('join board', boardId)\r\n        socketService.on('update board', this.onChangeBoard)\r\n\r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('update board', this.onChangeBoard)\r\n        socketService.terminate()\r\n\r\n    }\r\n\r\n\r\n\r\n    onDragEnd = (result) => {\r\n        // console.log('on drag result', result)\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return\r\n        }\r\n        if (type === 'group') {\r\n            this.onDragGroups(source.index, destination.index)\r\n        }\r\n        if (type === 'card') {\r\n            this.onDragCards(destination, source, draggableId)\r\n        }\r\n    }\r\n\r\n    onChangeBoard = async (board) => {\r\n        // console.log('on change board', board)\r\n        await this.props.updateBoardAfterSocket(board)\r\n    }\r\n\r\n    // per react beautiful dnd after performing optimistic update to let server know that a reorder has occurred\r\n    onDragGroups = async (startIndex, endIndex) => {\r\n        // console.log('I am in groups')\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMove = boardToUpdate.groups.splice(startIndex, 1)\r\n        boardToUpdate.groups.splice(endIndex, 0, groupToMove[0])\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n    onDragCards = async (destination, source) => {\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMoveFromIdx = boardToUpdate.groups.findIndex(group => group.id === source.droppableId)\r\n        const groupToMoveToIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\r\n        const cardToMove = boardToUpdate.groups[groupToMoveFromIdx].cards.splice(source.index, 1)\r\n        boardToUpdate.groups[groupToMoveToIdx].cards.splice(destination.index, 0, cardToMove[0])\r\n        // console.log('i am in this on drag cards')\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n\r\n\r\n    toggleSideMenu = () => {\r\n        this.setState({ isBoardMenuShown: !this.state.isBoardMenuShown })\r\n    }\r\n    toggleDashboard = () => {\r\n        this.setState({ isDashboardShown: !this.state.isDashboardShown })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedBoard } = this.props\r\n        const { isBoardMenuShown, isDashboardShown } = this.state\r\n\r\n        if (!selectedBoard) return <div>Loading...</div>\r\n        // console.log('BBB', selectedBoard.style.bgurl)\r\n        const style = {\r\n            boardStyle: { ...selectedBoard.style }\r\n        }\r\n        return (\r\n            <section className=\"board-wraper\"\r\n                style={{\r\n                    backgroundImage: \"url(\" + `${style.boardStyle.bgurl}` + \")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\"\r\n                }}>\r\n                <AppHeader toggleSideMenu={this.toggleSideMenu} toggleDashboard={this.toggleDashboard} />\r\n                {/* <BoardHeader board={selectedBoard} toggleSideMenu={this.toggleSideMenu} /> */}\r\n                {/* <div className=\"board-title\"> {selectedBoard.title}</div> */}\r\n                <nav>\r\n                    {/* <BoardFilter /> */}\r\n                    {/* <button onClick={this.toggleSideMenu}>Side Menu In Development</button> */}\r\n                </nav>\r\n                <BoardSideMenu classname={isBoardMenuShown} toggleSideMenu={this.toggleSideMenu} />\r\n                {selectedBoard.groups && <GroupList groups={selectedBoard.groups} boardId={selectedBoard._id} onDragEnd={this.onDragEnd} />}\r\n                {(isDashboardShown) && <Dashboard toggleDashboard={this.toggleDashboard} />}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        filterBy: state.boardModule.filterBy,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    updateBoardAfterSocket,\r\n\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\r\n","import { Link } from 'react-router-dom'\r\n\r\n\r\nexport function BoardPreview(props) {\r\n    const { board } = props\r\n    const style = { boardStyle: { ...board.style } }\r\n\r\n    return (\r\n        <Link to={`/board/${board._id}`}>\r\n            <li className=\"board-preview\"\r\n                style={{ backgroundImage: `url(${style.boardStyle.bgurl})` }}>\r\n                <div className=\"content\">\r\n                    <p>{board.title}</p>\r\n                </div>\r\n            </li>\r\n        </Link>\r\n    )\r\n}","import { BoardPreview } from './BoardPreview.jsx'\r\n\r\nexport function BoardList({ boards, title, toggleNewBoard }) {\r\n    const boardsForDisplay = boards\r\n    // console.log(boardsForDisplay);\r\n    // const boardsForDisplay = props.boards.slice(0, 6)\r\n\r\n    return (\r\n        <section className=\"board-list \">\r\n            <h2 className=\"title\">{title}</h2>\r\n            <ul className=\"flex wrap\">\r\n                {boardsForDisplay.map(board =>\r\n                    <BoardPreview board={board} key={board._id} className=\"board\" />\r\n                )}\r\n                {(title !== 'templates boards') && <li onClick={toggleNewBoard} className=\"board-preview add-board-btn\"><p>+ Add board</p></li>}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddBoard extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        bgurl: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onChooseBackground = (bgUrl) => {\r\n        const callback = () => {\r\n            this.onSubmit();\r\n        };\r\n        this.setState({ bgurl: bgUrl }, callback)\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        // ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const board = await this.props.createBoard(this.state.title, this.state.bgurl)\r\n        this.props.onLoadNewBoard(board._id)\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg104',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\r\n\r\n            },\r\n            {\r\n                id: 'bg105',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg106',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg107',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/02/19/11/33/backround-1209772_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg108',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/08/15/15/37/pen-2644392_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg109',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg110',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/05/31/13/13/rain-3443977_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg111',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/04/05/11/38/bokeh-316425_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg112',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/25/13/01/stones-167089_1280.jpg\"\r\n            }\r\n\r\n        ]\r\n        return (\r\n            <div className=\"screen\" onClick={this.onCancelAdd}>\r\n                <div className=\"add-board\" onSubmit={this.onSubmit} onClick={this.stopPropagation}>\r\n                    <input placeholder=\"Enter a title for your new board...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" required />\r\n                    <section className=\"add-board-backgrounds\">\r\n                        <h3>Enter a title, Choose a background - and get started!</h3>\r\n                        {backgroundImages.map(background => {\r\n                            return (\r\n                                <div className=\"backgrounds-tumbs\" key={background.id}\r\n                                    style={{ backgroundImage: `url(${background.bgurl})` }}\r\n                                    onClick={() => this.onChooseBackground(background.bgurl)}>\r\n                                    <div className=\"plus\">+</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </section>\r\n                    {/* <button className=\"save-btn\">+ Add Board</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}>X Cancel</button> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    createBoard\r\n\r\n};\r\n\r\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardList } from '../cmps/board/BoardList'\r\nimport { AddBoard } from '../cmps/board/AddBoard'\r\nimport { loadBoards } from '../store/actions/boardActions.js'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\n\r\nclass _Boards extends Component {\r\n    state = {\r\n        isNewBoard: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards({ userId: '6004748cf9fd65ff47dc81e4' })\r\n        const userId = this.props.loggedInUser?._id || '6007ffeea8c0ad4b8ad3c478'\r\n        this.props.loadBoards({ userId })\r\n    }\r\n\r\n    toggleNewBoard = () => {\r\n        this.setState({ isNewBoard: !this.state.isNewBoard })\r\n    }\r\n\r\n    onLoadNewBoard = (boardId) => {\r\n        this.toggleNewBoard()\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <HomeHeader loggedInUser={this.props.loggedInUser} />\r\n                <div className=\"boards flex col \">\r\n                    <h1>TASX</h1>\r\n                    <h2>Get on Board</h2>\r\n                    {/* <hr />\r\n                    <img className=\"boards-image\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611582232/tasx2_rjorq4.png\" alt=\"\" /> */}\r\n                    <hr />\r\n                    <section className=\"board-lists main-container\">\r\n                        {this.props.templatesBoards && <BoardList boards={this.props.templatesBoards} title=\"templates boards\" toggleNewBoard={this.toggleNewBoard} />}\r\n                        <BoardList boards={this.props.boards} title=\"Personal boards\" toggleNewBoard={this.toggleNewBoard} />\r\n                    </section>\r\n                    {this.state.isNewBoard && <AddBoard toggleNewBoard={this.toggleNewBoard} onLoadNewBoard={this.onLoadNewBoard} />}\r\n                </div >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        templatesBoards: state.boardModule.templatesBoards,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    // loadBoard,\r\n    //createBoard\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\n\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../store/actions/userActions'\r\n\r\nclass _LoginSignup extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    signupCred: {\r\n      username: '',\r\n      password: '',\r\n      fullname: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = this.state.loginCred\r\n    if (!username) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    const userCreds = { username, password }\r\n    try {\r\n      this.props.login(userCreds)\r\n      this.setState({ loginCred: { username: '', password: '' } })\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password, fullname } = this.state.signupCred\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' })\r\n    }\r\n    const signupCreds = { username, password, fullname }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"frm\" onSubmit={this.doSignup}>\r\n        <h2>Signup</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"fullname\"\r\n          value={this.state.signupCred.fullname}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Full name\"\r\n          autoComplete=\"fullname\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n          autoComplete=\"username\"\r\n        />\r\n        <br />\r\n        <button>Signup</button>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form className=\"frm\" onSubmit={this.doLogin}>\r\n        <h2>Login</h2>\r\n        <select\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n        >\r\n          <option value=\"\">Select User</option>\r\n          {this.props.users && this.props.users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n        </select>\r\n\r\n        {/* <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br /> */}\r\n        <button>Login</button>\r\n      </form>\r\n\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    return (\r\n\r\n      <div className=\"login\">\r\n        <HomeHeader />\r\n        <h1>\r\n          TASKX\r\n        </h1>\r\n\r\n        <p>{this.state.msg}</p>\r\n        {loggedInUser && (\r\n          <div>\r\n            <h3>\r\n              Welcome {loggedInUser.fullname}\r\n              <button onClick={this.props.logout}>Logout</button>\r\n            </h3>\r\n          </div>\r\n        )}\r\n        {!loggedInUser && loginSection}\r\n        {!loggedInUser && signupSection}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/* <hr /> */}\r\n        {/* <section className=\"admin\">\r\n          <details>\r\n            <summary>Admin</summary>\r\n            <button onClick={this.props.loadUsers}>Refresh Users</button>\r\n            {this.props.isLoading && 'Loading...'}\r\n            {this.props.users && <ul>\r\n\r\n              {this.props.users.map(user => (\r\n                <li key={user._id}>\r\n                  <pre>{JSON.stringify(user, null, 2)}</pre>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.removeUser(user._id)\r\n                    }}\r\n                  >\r\n                    Remove {user.username}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>}\r\n          </details>\r\n        </section> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    // isLoading: state.systemModule.isLoading\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)\r\n","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport { Home } from './pages/Home'\r\nimport { Board } from './pages/Board'\r\n// import { AppHeader } from './cmps/AppHeader'\r\n// import { AddBoard } from './cmps/board/AddBoard'\r\nimport { Boards } from './pages/Boards'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\n// import { AppHeader } from './cmps/AppHeader'\r\n// import { CardEdit } from './pages/CardEdit'\r\n\r\n\r\n\r\n\r\nexport function App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {/* <AppHeader /> */}\r\n        <main className=\"main-app\">\r\n          <Switch>\r\n            {/* <Route path=\"/user/:id\" component={UserDetails} /> */}\r\n            {/* <Route path=\"/login\" component={LoginSignup} /> */}\r\n            {/* <Route path=\"/chat\" component={Chat} /> */}\r\n            {/* <Route path=\"/board/:id/card/:cardId\" component={CardEdit} /> */}\r\n            <Route path=\"/board/:id\" component={Board} />\r\n            <Route path=\"/board\" component={Boards} />\r\n            <Route path=\"/login\" component={LoginSignup} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n\r\n        </footer>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n\r\n  boards: [],\r\n  templatesBoards: [],\r\n  selectedBoard: {},\r\n  filterBy: {}\r\n}\r\n\r\nexport function boardReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_TEMPLATES':\r\n      return { ...state, templatesBoards: action.boards }\r\n    case 'SET_BOARD':\r\n      return { ...state, selectedBoard: action.board }\r\n    case 'SET_FILTER':\r\n      return { ...state, filterBy: action.filterBy }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_SCORE':\r\n      return { ...state, loggedInUser: { ...state.loggedInUser, score: action.score } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { boardReducer } from './boardReducer'\r\nimport { userReducer } from './userReducer'\r\nimport { systemReducer } from './systemReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  systemModule: systemReducer,\r\n  boardModule: boardReducer,\r\n  userModule: userReducer\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './assets/styles/main.scss'\nimport { store } from './store/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}