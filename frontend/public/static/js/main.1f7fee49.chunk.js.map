{"version":3,"sources":["services/httpService.js","services/userService.js","services/utilService.js","services/boardService.js","services/socketService.js","store/actions/boardActions.js","cmps/HomeHeader.jsx","pages/Home.jsx","cmps/group/EditGroupTitle.jsx","cmps/cardEdit/CardLabelShowMin.jsx","store/actions/userActions.js","cmps/cardEdit/CardEditNav.jsx","cmps/cardEdit/AddDescription.jsx","cmps/cardEdit/EditLabelBar.jsx","cmps/cardEdit/LabelPalette.jsx","cmps/cardEdit/AddChecklistBar.jsx","cmps/cardEdit/AddCoverBar.jsx","cmps/cardEdit/CardLabelShow.jsx","cmps/cardEdit/TodoShow.jsx","cmps/cardEdit/TodoListShow.jsx","cmps/cardEdit/CardChecklistShow.jsx","cmps/cardEdit/AddDeutimeBar.jsx","cmps/cardEdit/CardDuedateShow.jsx","services/cloudinaryService.js","cmps/Uploader.jsx","cmps/cardEdit/AddImgBar.jsx","cmps/cardEdit/CardImgShow.jsx","cmps/cardEdit/AddMembersBar.jsx","cmps/cardEdit/CardMembersShow.jsx","cmps/cardEdit/CardActivitiesShow.jsx","cmps/cardEdit/DeleteCardBar.jsx","pages/CardEdit.jsx","cmps/card/ChecklistSign.jsx","cmps/cardEdit/CardDuedateShowMin.jsx","cmps/card/CardPreview.jsx","cmps/card/CardList.jsx","cmps/group/AddCard.jsx","cmps/group/RemoveList.jsx","cmps/group/EditGroupNav.jsx","cmps/group/GroupPreview.jsx","cmps/group/AddNewGroup.jsx","cmps/group/GroupList.jsx","cmps/boardMenu/EditBoardTitle.jsx","cmps/boardMenu/AboutBoard.jsx","cmps/boardMenu/ChangeBoardBackground.jsx","cmps/boardMenu/ActivityPreview.jsx","cmps/boardMenu/ActivityBoard.jsx","cmps/dashboard/PieBoard.jsx","cmps/dashboard/BarBoard.jsx","cmps/dashboard/LineBoard.jsx","cmps/dashboard/BarLabels.jsx","cmps/dashboard/Dashboard.jsx","cmps/board/BoardSideMenu.jsx","cmps/board/BoardFilter.jsx","cmps/AppHeader.jsx","pages/Board.jsx","cmps/board/BoardPreview.jsx","cmps/board/BoardList.jsx","cmps/board/AddBoard.jsx","pages/Boards.jsx","pages/LoginSignup.jsx","App.jsx","serviceWorkerRegistration.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/reducers/index.js","store/store.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","userService","login","logout","signup","getUsers","getById","userId","remove","update","getLoggedinUser","increaseScore","user","_id","_saveLocalUser","by","score","userCred","sessionStorage","clear","setItem","JSON","stringify","parse","getItem","utilService","delay","ms","Promise","resolve","setTimeout","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","txt","possible","i","charAt","boardService","add","query","filterBy","queryParams","URLSearchParams","set","boardId","makeGroup","updateBoard","makeCard","cardTitle","id","title","description","comments","checklists","members","labels","createdAt","Date","now","dueDate","byMember","style","coverType","makeBoard","filterByCardTitle","makeActivity","board","updatedBoard","addedBoard","groupTitle","cards","card","getMiniUser","activity","loggedinUser","username","password","createdBy","boardTitle","bgUrl","map","color","accessibility","miniUser","newBoard","bgurl","groups","activities","unshift","filterRegex","RegExp","group","newGroup","filter","test","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoards","dispatch","boards","type","loadBoard","boardToChange","msg","boardToUpdate","HomeHeader","props","className","to","loggedInUser","backgroundImage","imgUrl","_Home","state","isNewBoard","toggleNewBoard","setState","onLoadNewBoard","history","push","scrollToBottom","scrollTo","document","body","scrollHeight","this","Button","variant","size","onClick","src","alt","Component","mapDispatchToProps","Home","connect","boardModule","userModule","_EditGroupTitle","handleChange","ev","value","target","field","name","onSubmit","preventDefault","updateGroup","selectedBoard","toggleEditMode","placeholder","onChange","autoComplete","groupTitleToUpdate","groupId","groupToUpdateIdx","findIndex","EditGroupTitle","CardLabelShowMin","label","loadUsers","users","CardEditNav","toggleLabelPalette","toggleChecklistBar","toggleCoverBar","toggleAddDeutime","toggleAddMembers","toggleDeleteCard","toggleAddImg","_AddDescription","onAddDescription","newDescription","cardToSave","updateCard","toggleAddDescription","AddDescription","_EditLabelBar","boardToSave","currLabel","toggleEditLabel","required","autoFocus","EditLabelBar","_LabelPalette","isEditLabelShow","labelToEdit","addLable","find","openEditLabel","alredyOnCard","LabelPalette","_AddChecklistBar","checklist","todos","onAddChecklist","AddChecklistBar","_AddCoverBar","handleStyle","removeCover","AddCoverBar","_CardLabelShow","removeLable","labelId","labelsToSave","CardLabelShow","_TodoShow","todo","isDone","checked","checklistIndex","checklistId","todoIndex","removeTodo","TodoShow","TodoListShow","_CardChecklistShow","progress","removeChecklist","checklistsToSave","handleTaskChange","addTask","checklistToSave","then","todoId","todoToSave","getProgress","done","all","forEach","Checklist","round","prevProps","prevState","width","event","CardChecklistShow","AddDeutimeBar","useState","startDate","setStartDate","selected","onSelect","date","addDeuDate","inline","CardDuedateShow","month","duedate","getMonth","day","substring","urgent","cloudinaryService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","json","Uploader","height","isUploading","onUploadImg","files","secure_url","addImg","uploadStyle","objectFit","htmlFor","accept","AddImgBar","CardImgShow","img","_AddMembersBar","member","fullname","onAddMembers","currUser","newMembers","list","alreadyMember","AddMembersBar","_CardMembersShow","userImgStyle","CardMembersShow","_CardActivitiesShow","CardActivitiesShow","_DeleteCardBar","deleteCard","onRemoveCard","cardId","err","DeleteCardBar","_CardEdit","isDescriptionShowing","isLabelPaletteShowing","isAddChecklistShowing","isCoverShowing","isAddDeutimeShowing","isAddImgShowing","isAddMembersShowing","isDeleteCardShowing","isActivitiesShowing","loadCard","currCard","groupToSave","cardsToSave","groupsToSave","createActivity","miniCard","stopProg","stopPropagation","prevprops","match","toggleCardEdit","isLabels","isChecklists","isDuedate","isMember","coverShow","bgColor","isImg","Fragment","CardEdit","ChecklistSign","CardDuedateShowMin","_CardPreview","isCardEtidShow","removeCard","cardBgc","cardCover","draggableId","String","index","direction","provided","draggableProps","dragHandleProps","ref","innerRef","updatedCardList","CardPreview","CardList","droppableId","droppableProps","_AddCard","addCard","toggleAddCardMode","onCancelAdd","newCard","AddCard","RemoveList","toggleDeleteBar","onRemoveGroup","_EditGroupNav","isOnAddCardMode","isDeleteBarShow","EditGroupNav","_GroupPreview","isEditMode","isEditGroupNavShow","groupHeight","updatedGroups","toggleEditGroupNav","clientHeight","maxHeight","GroupPreview","_AddNewGroup","addGroup","toggleAddGroupMode","groupToAdd","AddNewGroup","_GroupList","isOnAddGroupMode","onDragEnd","GroupList","_EditBoardTitle","EditBoardTitle","_AboutBoard","toggleAboutBoard","AboutBoard","_ChangeBoardBackground","onChooseBackground","toggleChangeBackground","background","ChangeBoardBackground","ActivityPreview","ActivityBoard","PieBoard","membersTaskMap","reduce","membersMapAcc","count","Object","keys","datasets","values","backgroundColor","hoverBackgroundColor","fontColor","options","display","text","fontSize","legend","ticks","precision","scales","yAxes","beginAtZero","userCallback","xAxes","BarBoard","groupCardMap","cardsMapAcc","myData","LineBoard","groupTimeMap","timeMapAcc","cardsInGroupSum","diff","BarLabels","labelsTitle","labelsTotal","_Dashboard","cardSum","todosAndCardsSum","total","complited","toggleDashboard","membersSum","Dashboard","_BoardSideMenu","isAboutBoardShown","isChangeBackgroundShown","isBoardAnalysisShown","isDeleteBoardShown","toggleBoardAnalysis","toggleDeleteBoard","open","classname","toggleSideMenu","BoardSideMenu","_BoardFilter","filterByCardText","boardToFilter","BoardFilter","_AppHeader","userImgUrl","AppHeader","_Board","isBoardMenuShown","isDashboardShown","result","destination","source","onDragGroups","onDragCards","onChangeBoard","updateBoardAfterSocket","startIndex","endIndex","groupToMove","splice","groupToMoveFromIdx","groupToMoveToIdx","cardToMove","params","boardStyle","backgroundPosition","backgroundSize","backgroundRepeat","changedBoard","Board","BoardPreview","BoardList","boardsForDisplay","slice","_AddBoard","createBoard","backgroundImageUrl","AddBoard","_Boards","Boards","_LoginSignup","loginCred","signupCred","loginHandleChange","signupHandleChange","doLogin","userCreds","doSignup","signupCreds","removeUser","signupSection","loginSection","LoginSignup","App","path","component","Boolean","hostname","initialState","localLoggedinUser","isLoading","rootReducer","combineReducers","systemModule","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1f7fee49.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n    increaseScore\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function increaseScore(by = SCORE_FOR_REVIEW) {\r\n    const user = getLoggedinUser()\r\n    user.score = user.score + by || by\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _handleLogin(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    makeId\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}","\r\n\r\nimport { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport { userService } from './userService'\r\nimport { utilService } from './utilService'\r\n\r\nexport const boardService = {\r\n  add,\r\n  query,\r\n  remove,\r\n  getById,\r\n  makeGroup,\r\n  updateBoard,\r\n  makeCard,\r\n  makeBoard,\r\n  filterByCardTitle,\r\n  makeActivity\r\n}\r\n\r\n\r\n// More ways to send query params:\r\n// return axios.get('api/toy/?id=1223&balance=13')\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}})\r\n\r\nfunction query(filterBy) {\r\n  let queryParams = new URLSearchParams()\r\n  queryParams.set('userId', filterBy.userId)\r\n  return httpService.get(`board?${queryParams}`)\r\n  // return storageService.query('board')\r\n}\r\n\r\nfunction getById(boardId) {\r\n  return httpService.get(`board/${boardId}`)\r\n}\r\n\r\nfunction remove(boardId) {\r\n  return httpService.delete(`board/${boardId}`)\r\n  // return storageService.delete('board', boardId)\r\n\r\n}\r\n\r\nasync function updateBoard(board) {\r\n  const updatedBoard = await httpService.put(`board/${board._id}`, board)\r\n  return updatedBoard\r\n}\r\nasync function add(board) {\r\n\r\n  const addedBoard = await httpService.post(`board`, board)\r\n\r\n  // board.byUser = userService.getLoggedinUser()\r\n  // board.aboutUser = await userService.getById(board.aboutUserId)\r\n  // const addedBoard = storageService.post('board', board)\r\n\r\n  return addedBoard\r\n}\r\n\r\n\r\nfunction makeGroup(groupTitle) {\r\n  let group = {\r\n    id: 'g' + utilService.makeId(),\r\n    title: groupTitle,\r\n    cards: [{\r\n      id: 'c' + utilService.makeId(),\r\n      title: 'default-empty',\r\n      description: '',\r\n      comments: [],\r\n      checklists: [],\r\n      members: [],\r\n      labels: [],\r\n      createdAt: Date.now(),\r\n      dueDate: '',\r\n      byMember: {},\r\n      style: { coverType: 'top' }\r\n    }]\r\n\r\n  }\r\n\r\n  return group\r\n\r\n}\r\n\r\n\r\nfunction makeCard(cardTitle) {\r\n  let card = {\r\n    id: 'c' + utilService.makeId(),\r\n    title: cardTitle,\r\n    description: '',\r\n    comments: [],\r\n    checklists: [],\r\n    members: [],\r\n    labels: [],\r\n    createdAt: Date.now(),\r\n    dueDate: '',\r\n    byMember: {},\r\n    style: { coverType: 'top' }\r\n\r\n  }\r\n  return card\r\n\r\n}\r\n\r\nasync function makeActivity(txt, card = {}) {\r\n  let activity = {\r\n    id: 'a' + utilService.makeId(),\r\n    createdAt: Date.now(),\r\n    txt: txt,\r\n    byMember: await getMiniUser(),\r\n    card: card\r\n  }\r\n  return activity\r\n}\r\n\r\nasync function getMiniUser() {\r\n  let loggedinUser = userService.getLoggedinUser()\r\n  let createdBy = (loggedinUser) ? loggedinUser : await userService.login({ username: 'Guest', password: '123' })\r\n  return createdBy\r\n}\r\n\r\nasync function makeBoard(boardTitle, bgUrl) {\r\n\r\n  const colors = ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF']\r\n  const labels = colors.map(color => { return { id: color, title: '', accessibility: '' } })\r\n\r\n  let miniUser = await getMiniUser()\r\n  const newBoard = {\r\n    title: boardTitle,\r\n    createdAt: Date.now(),\r\n    createdBy: miniUser,\r\n    style: {\r\n      bgurl: bgUrl\r\n    },\r\n    members: [miniUser],\r\n    groups: [makeGroup('New List')],\r\n    activities: [],\r\n\r\n    labels\r\n  }\r\n\r\n  const activity = await makeActivity('Created Board')\r\n\r\n  newBoard.activities.unshift(activity)\r\n\r\n  const addedBoard = await httpService.post(`board`, newBoard);\r\n  return addedBoard\r\n\r\n}\r\n\r\n\r\nasync function filterByCardTitle(board, filterBy) {\r\n  console.log('Board got to board service', board)\r\n  console.log('filter got to board service', filterBy)\r\n  if (filterBy.title) {\r\n    const filterRegex = new RegExp(filterBy.title, 'i')\r\n    board.groups = board.groups.map(group => {\r\n      const newGroup = { ...group }\r\n      newGroup.cards = newGroup.cards.filter(card => filterRegex.test(card.title))\r\n      return newGroup\r\n    })\r\n  }\r\n\r\n  return board;\r\n\r\n}","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket\r\n  \r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl, {\r\n        withCredentials: true,\r\n      });\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb) {\r\n      socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log(x)}\r\n// socketService.on('baba', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n","import { boardService } from '../../services/boardService'\r\nimport { socketService } from '../../services/socketService'\r\n\r\nexport function loadBoards(filterBy = {}) {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query(filterBy)\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoards', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function loadBoard(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      // console.log('What got form server', board)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function createBoard(boardTitle, backgroundImageUrl) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.makeBoard(boardTitle, backgroundImageUrl)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      return board\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function addGroup(title, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let groupToAdd = boardService.makeGroup(title)\r\n      let activity = await boardService.makeActivity(`created new list ${groupToAdd.title}`)\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      boardToUpdate.groups.push(groupToAdd)\r\n\r\n      boardToUpdate.activities.unshift(activity)\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      socketService.emit('update board', board)\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in addGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateGroup(groupTitleToUpdate, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[groupToUpdateIdx].title = groupTitleToUpdate\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function addCard(title, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n\r\n      let newCard = boardService.makeCard(title)\r\n      let activity = await boardService.makeActivity(`created new card ${newCard.title}`)\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[groupToUpdateIdx].cards.push(newCard)\r\n      boardToUpdate.activities.unshift(activity)\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      socketService.emit('update board', board)\r\n    } catch (err) {\r\n      console.log('BoardActions: err in addCard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function removeCard(cardId, groupId, boardToChange) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n\r\n      const groupToUpdateIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n\r\n      const updatedCardList = boardToUpdate.groups[groupToUpdateIdx].cards.filter(card => card.id !== cardId)\r\n\r\n      boardToUpdate.groups[groupToUpdateIdx].cards = updatedCardList\r\n\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in removeGroup', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateBoard(boardToChange, msg = '', card = {}) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n      if (msg) {\r\n        let activity = await boardService.makeActivity(msg, card)\r\n        boardToUpdate.activities.unshift(activity)\r\n      }\r\n      const board = await boardService.updateBoard(boardToUpdate)\r\n      socketService.emit('update board', board)\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroupOrder', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function filterByCardText(boardId, filterBy) {\r\n  return async dispatch => {\r\n    try {\r\n      const boardToFilter = await boardService.getById(boardId)\r\n\r\n      const board = await boardService.filterByCardTitle(boardToFilter, filterBy)\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      dispatch({ type: 'SET_FILTER', filterBy })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateGroupOrder', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function updateBoardAfterSocket(changedBoard) {\r\n  return async dispatch => {\r\n    try {\r\n\r\n      let board = JSON.parse(JSON.stringify(changedBoard))\r\n\r\n      dispatch({ type: 'SET_BOARD', board })\r\n\r\n    } catch (err) {\r\n      console.log('BoardActions: err in updateBoardAfterSocket', err)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// export function changeBoardBackground(bgUrltoUpdate, boardToChange) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n\r\n//       boardToUpdate.style.bgurl = bgUrltoUpdate\r\n\r\n//       let activity = await boardService.makeActivity(`changed board style`)\r\n\r\n//       boardToUpdate.activities.unshift(activity)\r\n\r\n//       const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n//       socketService.emit('update board', board)\r\n//     } catch (err) {\r\n//       console.log('BoardActions: err in addCard', err)\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n// export function removeGroup(groupId, boardToChange) {\r\n//   return async dispatch => {\r\n//     try {\r\n\r\n//       let boardToUpdate = JSON.parse(JSON.stringify(boardToChange))\r\n//       const updatedGroups = boardToUpdate.groups.filter(group => group.id !== groupId)\r\n//       boardToUpdate.groups = updatedGroups\r\n//       const board = await boardService.updateBoard(boardToUpdate)\r\n\r\n//       socketService.emit('update board', board)\r\n\r\n\r\n//     } catch (err) {\r\n//       console.log('BoardActions: err in removeGroup', err)\r\n//     }\r\n//   }\r\n// }","import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport function HomeHeader(props) {\r\n\r\n\r\n    return (\r\n        <header className=\"app-header flex space-between align-center\">\r\n            <nav>\r\n                <Link to=\"/\" className=\"header-home\"></Link>\r\n                <Link to=\"/board\" className=\"header-board\"> Boards </Link>\r\n            </nav>\r\n\r\n            <nav className=\"navbar-links\">\r\n                {!props.loggedInUser && <Link to=\"/login\" className=\"header-user\"> Login</Link>}\r\n                {props.loggedInUser && <Link to=\"/login\" className=\"user-img\" style={{ backgroundImage: `url(${props.loggedInUser.imgUrl})` }}> </Link>}\r\n\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { BoardList } from '../cmps/board/BoardList'\r\n// import { AddBoard } from '../cmps/board/AddBoard'\r\nimport { loadBoards } from '../store/actions/boardActions.js'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom'\r\n// import Icon from '@material-ui/core/Icon';\r\n// import Uploader from '../cmps/Uploader';\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _Home extends Component {\r\n  state = {\r\n    isNewBoard: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadBoards()\r\n  }\r\n  // onUploadImage = (url) =>{\r\n  //   console.log('URL:', url)\r\n  //   //   const toy = {\r\n  //   //     imgUrl: url\r\n  //   //   }\r\n  //   //   this.props.updateToy(toy)\r\n  // }\r\n\r\n\r\n\r\n  toggleNewBoard = () => {\r\n    console.log('I am in new board')\r\n    this.setState({ isNewBoard: !this.state.isNewBoard })\r\n  }\r\n\r\n  onLoadNewBoard = (boardId) => {\r\n    this.toggleNewBoard()\r\n    this.props.history.push(`/board/${boardId}`)\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    window.scrollTo(0, document.body.scrollHeight)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { loggedInUser } = this.props\r\n    return (\r\n      <div className=\"home-wraper\">\r\n        <HomeHeader loggedInUser={loggedInUser} />\r\n\r\n        <div className=\"home-img-container\">\r\n          <div className=\"get-started-container\">\r\n            <h1>TASX</h1>\r\n            <h3>Manage your teamwork with the ease of your fingers</h3>\r\n            {/* <Link to=\"/board\" ><button className=\"header-board\"> Boards </button></Link> */}\r\n\r\n            <div className=\"get-started-btn\">\r\n              <Link to=\"/board/600c37d2a8c0ad4b8ab661f6\" >\r\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" className=\"get-started\" onClick={this.toggleNewBoard}>\r\n                  Get Started\r\n            </Button>\r\n              </Link>\r\n            </div>\r\n            {/* {this.state.isNewBoard && <AddBoard toggleNewBoard={this.toggleNewBoard} onLoadNewBoard={this.onLoadNewBoard} />} */}\r\n            <button className=\"scroll-down\" onClick={this.scrollToBottom}></button>\r\n          </div>\r\n        </div >\r\n\r\n\r\n        <div className=\"welcome-container\">\r\n\r\n          <article className=\"welcome1\">\r\n            <div className=\"left-side\">\r\n              <img className=\"img1\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611582111/tasx1_t6jc82.png\" alt=\"\" />\r\n            </div>\r\n            <div className=\"right-side\">\r\n              <h2>Hit your deadlines</h2>\r\n              <h3>Follow your your team’s progress and keep work moving across teams  — all from one place.</h3>\r\n            </div>\r\n\r\n\r\n\r\n          </article>\r\n\r\n\r\n\r\n\r\n          <article className=\"welcome2\">\r\n            <div className=\"right-side\">\r\n              <h2>Collaborate and build</h2>\r\n              <h3>Share ideas and more so teammates can tap into the same pool of knowledge whenever they need. </h3>\r\n            </div>\r\n\r\n            <div className=\"left-side\">\r\n              <img className=\"img2\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611582232/tasx2_rjorq4.png\" alt=\"\" />\r\n            </div>\r\n\r\n          </article>\r\n\r\n\r\n\r\n          <article className=\"welcome3\">\r\n            <div className=\"right-side\">\r\n              <img className=\"img3\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611582362/tasx3_wrsped.png\" alt=\"\" />\r\n            </div>\r\n            <div className=\"left-side\">\r\n              <h2>Keep everyone looped in</h2>\r\n              <h3>Easily assign and prioritize tasks, and see who's doing what anywhere, anytime.</h3>\r\n            </div>\r\n          </article>\r\n\r\n        </div>\r\n        <div className=\"boards-container\">\r\n\r\n        </div>\r\n        <div className=\"footer\">\r\n          <h4>&copy; Cofferights 2021</h4>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.boardModule.boards,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  // loadBoard,\r\n  //createBoard\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateGroup } from '../../store/actions/boardActions.js'\r\n\r\nexport class _EditGroupTitle extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.group\r\n        this.setState({ title })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.updateGroup(this.state.title, this.props.group.id, this.props.selectedBoard)\r\n        this.props.toggleEditMode()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-group-title\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input className=\"new-title-input\" placeholder=\"Group Title\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-btn\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateGroup,\r\n\r\n};\r\n\r\nexport const EditGroupTitle = connect(mapStateToProps, mapDispatchToProps)(_EditGroupTitle);","import React from 'react'\r\n\r\n\r\nexport function CardLabelShowMin(props) {\r\n\r\n    return (\r\n        <ul className=\"card-label-show\">\r\n            {props.labels.map(label => {\r\n                return (\r\n                    <li\r\n                        key={label.id} className={`label ${label.id}`} >\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n\r\n}\r\n","import { userService } from '../../services/userService'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport function CardEditNav(props) {\r\n\r\n\r\n    return (\r\n        <nav className=\"card-edit-nav flex column\">\r\n            <h3>Add to card</h3>\r\n            <button className=\"label-fa\" onClick={props.toggleLabelPalette}> Labels</button>\r\n            <button className=\"checklist-fa\" onClick={props.toggleChecklistBar}> Checklist</button>\r\n            <button className=\"cover-fa\" onClick={props.toggleCoverBar}> Cover</button>\r\n            <button className=\"duetime-fa\" onClick={props.toggleAddDeutime}> Due Date</button>\r\n            <button className=\"duetime-fa\" onClick={props.toggleAddMembers}> Members</button>\r\n            {/* <button onClick={props.toggleAddImg}> Image</button> */}\r\n            <button className=\"delete-fa\" onClick={props.toggleDeleteCard}> Delete</button>\r\n            <button className=\"img-fa\" onClick={props.toggleAddImg}> Image</button>\r\n            {/* <button className=\"delete-fa\"> Delete</button> */}\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddDescription extends Component {\r\n    state = {\r\n        description: { txt: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const description = (this.props.card.description) ? this.props.card.description : ''\r\n        this.setState({ description: { txt: description } })\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const description = { ...this.state.description }\r\n        description[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ description })\r\n    }\r\n\r\n    onAddDescription = async (ev) => {\r\n        ev.preventDefault()\r\n        const newDescription = { ...this.state.description }\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.description = newDescription.txt\r\n        try {\r\n            await this.props.updateCard(cardToSave)\r\n            this.props.toggleAddDescription()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        // this.setState({ description: { txt: '' } })\r\n        // \r\n    }\r\n\r\n\r\n    render() {\r\n        const { description } = this.state\r\n        return (\r\n            <form className=\"add-description show\" onSubmit={this.onAddDescription}>\r\n                <textarea name=\"txt\" value={description.txt}\r\n                    placeholder=\"add a more detailed description...\" onChange={this.handleChange} ></textarea>\r\n                <button className=\"add-btn\">Add</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddDescription = connect(mapStateToProps, mapDispatchToProps)(_AddDescription)\r\n","\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _EditLabelBar extends Component {\r\n    state = {\r\n        label: { title: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const label = { ...this.props.label }\r\n        console.log(label);\r\n        this.setState({ label })\r\n    }\r\n\r\n    handleChange = async (ev) => {\r\n        const label = { ...this.state.label }\r\n        label[ev.target.name] = ev.target.value\r\n\r\n        await this.setState({ label })\r\n\r\n        const boardToSave = { ...this.props.board }\r\n        boardToSave.labels = boardToSave.labels.map(currLabel => {\r\n            if (currLabel.id !== label.id) return currLabel\r\n            else return label\r\n        })\r\n        console.log(boardToSave);\r\n        try {\r\n            await this.props.updateBoard(boardToSave)\r\n            // console.log(this.props.board)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"label-palette edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Edit Label</h3>\r\n                    <button onClick={this.props.toggleEditLabel}>x</button>\r\n                </header>\r\n                <main>\r\n                    <label>Title\r\n                    <input type=\"text\" name=\"title\" value={this.state.label.title} placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange} autoComplete=\"off\" required autoFocus ></input>\r\n                    </label>\r\n                </main>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const EditLabelBar = connect(mapStateToProps, mapDispatchToProps)(_EditLabelBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { EditLabelBar } from './EditLabelBar'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _LabelPalette extends Component {\r\n    state = {\r\n        isEditLabelShow: false,\r\n        labelToEdit: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.board);\r\n    }\r\n\r\n\r\n    addLable = (label) => {\r\n        console.log(label);\r\n        const cardToSave = { ...this.props.card }\r\n        if (!cardToSave.labels) cardToSave.labels = [label]\r\n        else {\r\n            const alredyOnCard = cardToSave.labels.find(currLabel => currLabel.id === label.id)\r\n            if (alredyOnCard) cardToSave.labels = cardToSave.labels.filter(currLabel => currLabel.id !== label.id)\r\n            else cardToSave.labels.push(label)\r\n        }\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave, 'added label')\r\n    }\r\n\r\n    toggleEditLabel = () => {\r\n        this.setState({ isEditLabelShow: !this.state.isEditLabelShow })\r\n    }\r\n\r\n    openEditLabel = async (label) => {\r\n        await this.setState({ labelToEdit: label })\r\n        this.toggleEditLabel()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className=\"label-palette edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Labels</h3>\r\n                    <button onClick={this.props.toggleLabelPalette}>x</button>\r\n                </header>\r\n                <main>\r\n                    <ul>\r\n                        {this.props.board.labels.map(label => {\r\n                            const alredyOnCard = (this.props.card.labels?.find(currLabel => currLabel.id === label.id)) ? 'alredyOnCard' : ''\r\n                            return (\r\n                                <li key={label.id} >\r\n                                    <div className={`${label.id}`} onClick={() => { this.addLable(label) }}>{label.title} <span className={`${alredyOnCard}`}></span></div>\r\n                                    <button className=\"open-edit-label\" onClick={() => { this.openEditLabel(label) }}></button>\r\n                                </li>)\r\n                        })}\r\n\r\n                        {this.state.isEditLabelShow && <EditLabelBar toggleEditLabel={this.toggleEditLabel} label={this.state.labelToEdit} board={this.props.board} updateBoard={this.props.updateBoard} />}\r\n                    </ul>\r\n                </main>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const LabelPalette = connect(mapStateToProps, mapDispatchToProps)(_LabelPalette)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddChecklistBar extends Component {\r\n    state = {\r\n        checklist: { title: '', todos: [] }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const checklist = { ...this.state.checklist }\r\n        checklist[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ checklist })\r\n    }\r\n\r\n    onAddChecklist = (ev) => {\r\n        ev.preventDefault()\r\n        const checklist = { id: utilService.makeId(), ...this.state.checklist }\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.checklists = (cardToSave.checklists) ? [...cardToSave.checklists, checklist] : [checklist]\r\n        // console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave, 'added checklist')\r\n        this.setState({ checklist: { title: '', todos: [] } })\r\n        this.props.toggleChecklistBar()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"edit-bar\" onSubmit={this.onAddChecklist}>\r\n                <header className=\"seconde\">\r\n                    <h3>Add Checklist</h3>\r\n                    <button onClick={this.props.toggleChecklistBar}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <label>Title\r\n                    <input type=\"text\" name=\"title\" value={this.state.checklist.title} placeholder=\"Enter Title\"\r\n                            onChange={this.handleChange} autoComplete=\"off\" required autoFocus ></input>\r\n                    </label>\r\n                    <button className=\"add-btn\">Add</button>\r\n                </main>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddChecklistBar = connect(mapStateToProps, mapDispatchToProps)(_AddChecklistBar)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddCoverBar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    handleStyle = async (ev) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.style = (cardToSave.style) ? { ...cardToSave.style, [ev.target.name]: ev.target.value } : { [ev.target.name]: ev.target.value }\r\n        await this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    removeCover = async (ev) => {\r\n        ev.preventDefault()\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.style = { coverType: 'top' }\r\n        await this.props.updateCard(cardToSave)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"add-cover-bar edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>cover</h3>\r\n                    <button onClick={this.props.toggleCoverBar}>x</button>\r\n                </header>\r\n                <button onClick={this.removeCover} className=\"edit-btn remove\">Remove Cover </button>\r\n                <h5>size</h5>\r\n                <main>\r\n                    <label className=\"inline-block\">\r\n                        <div className=\"full demo window\">\r\n                            <div className=\"demo header\"></div>\r\n                            <div className=\"demo content\">\r\n                                <div className=\"demo p1\"></div>\r\n                                <div className=\"demo p2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"radio\" name=\"coverType\" value=\"full\" onClick={this.handleStyle} ></input>\r\n                    </label>\r\n                    <label className=\"inline-block\" >\r\n                        <div className=\"top demo window\">\r\n                            <div className=\"demo header\"></div>\r\n                            <div className=\"demo content\">\r\n                                <div className=\"demo p1\"></div>\r\n                                <div className=\"demo p2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"radio\" name=\"coverType\" value=\"top\" onClick={this.handleStyle}></input>\r\n                    </label>\r\n                </main>\r\n                <h5>colors</h5>\r\n                <main>\r\n                    <nav className=\"colors\">\r\n                        <label className=\"color #7bc86c\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#7bc86c\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #f5dd29\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#f5dd29\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ffaf3f\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ffaf3f\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ef7564\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ef7564\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #cd8de5\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#cd8de5\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #5ba4cf\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#5ba4cf\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #29cce5\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#29cce5\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #6deca9\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#6deca9\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #ff8ed4\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#ff8ed4\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                        <label className=\"color #172b4d\">\r\n                            <input type=\"radio\" name=\"bgColor\" value=\"#172b4d\" onClick={this.handleStyle}></input>\r\n                        </label>\r\n                    </nav>\r\n                </main>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const AddCoverBar = connect(mapStateToProps, mapDispatchToProps)(_AddCoverBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardLabelShow extends Component {\r\n\r\n    removeLable = (labelId) => {\r\n        const cardToSave = { ...this.props.card }\r\n        const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n        cardToSave.labels = labelsToSave\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"card-label-show\">\r\n                {this.props.labels.map(label => {\r\n                    return (\r\n                        <li key={label.id} className={`label-edit ${label.id} flex align-center justify-center `} >\r\n                            <p className=\"label-title\">{label.title}</p>\r\n                            {/* <button className=\"hover-nav\" onClick={() => { this.removeLable(label.id) }}>X</button> */}\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardLabelShow = connect(mapStateToProps, mapDispatchToProps)(_CardLabelShow)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _TodoShow extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ todo: this.props.todo })\r\n    }\r\n\r\n\r\n    handleChange = async (ev) => {\r\n        const todo = { ...this.state.todo }\r\n        todo.isDone = ev.target.checked\r\n        await this.setState({ todo })\r\n\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistIndex = cardToSave.checklists.findIndex(checklist => checklist.id === this.props.checklistId)\r\n        const todoIndex = cardToSave.checklists[checklistIndex].todos.findIndex(todo => todo.id === this.state.todo.id)\r\n        cardToSave.checklists[checklistIndex].todos[todoIndex] = this.state.todo\r\n        try {\r\n            await this.props.updateCard(cardToSave)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { todo } = this.state\r\n        if (!todo) return <div>Loading...</div>\r\n        return (\r\n            <li className=\"todo-show flex space-between align-center\">\r\n                <span className=\"content\">\r\n                    <input type=\"checkbox\" name=\"isDone\" value={todo.isDone} checked={todo.isDone} onChange={this.handleChange} ></input>\r\n                    <h3 className={`${todo.isDone}`} >{todo.txt}</h3>\r\n                </span>\r\n                <span className=\"nav\">\r\n                    <button className=\" delete\" onClick={() => { this.props.removeTodo(todo.id, this.props.checklistId) }} ></button>\r\n                </span>\r\n            </li>)\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const TodoShow = connect(mapStateToProps, mapDispatchToProps)(_TodoShow)\r\n","import React from 'react'\r\nimport { TodoShow } from './TodoShow'\r\n\r\nexport function TodoListShow(props) {\r\n\r\n\r\n    const { checklist, card, updateCard, removeTodo } = props\r\n    return (\r\n        <ul className=\"show\">\r\n            {checklist.todos.map(todo => <TodoShow key={todo.id} todo={todo}\r\n                card={card} checklistId={checklist.id}\r\n                updateCard={updateCard} removeTodo={removeTodo} />)}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TodoListShow } from './TodoListShow'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nclass _CardChecklistShow extends Component {\r\n    state = {\r\n        todo: { txt: '', isDone: false },\r\n        progress: 0\r\n    }\r\n    componentDidMount() {\r\n        this.getProgress()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps !== this.props) {\r\n            this.getProgress()\r\n        }\r\n    }\r\n\r\n\r\n    removeChecklist = (checklistId) => {\r\n        // const labelsToSave = this.props.labels.filter(label => label.id !== labelId)\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistsToSave = cardToSave.checklists.filter(checklist => checklist.id !== checklistId)\r\n\r\n        cardToSave.checklists = checklistsToSave\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    handleTaskChange = (ev) => {\r\n        const todo = { ...this.state.todo }\r\n        if (ev.target.name === 'isDone') todo.isDone = ev.target.checked\r\n        else todo[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ todo })\r\n    }\r\n\r\n    addTask = (ev, checklistId) => {\r\n        ev.preventDefault()\r\n\r\n        const todo = { ...this.state.todo, id: utilService.makeId() }\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistToSave = cardToSave.checklists.find(checklist => checklist.id === checklistId)\r\n        checklistToSave.todos = (checklistToSave.todos) ? [...checklistToSave.todos, todo] : [todo]\r\n        const checklistsToSave = cardToSave.checklists.map(checklist => {\r\n            if (checklist.id === checklistId) return checklistToSave\r\n            else return checklist\r\n        })\r\n        cardToSave.checklists = checklistsToSave\r\n\r\n        console.log('cardToSave', cardToSave);\r\n        this.props.updateCard(cardToSave)\r\n            .then(this.setState({ todo: { txt: '', isDone: false } }))\r\n    }\r\n\r\n\r\n    removeTodo = (todoId, checklistId) => {\r\n        const cardToSave = { ...this.props.card }\r\n        const checklistIndex = cardToSave.checklists.findIndex(checklist => checklist.id === checklistId)\r\n        const todoToSave = cardToSave.checklists[checklistIndex].todos.filter(todo => todo.id !== todoId)\r\n        cardToSave.checklists[checklistIndex].todos = todoToSave\r\n        this.props.updateCard(cardToSave)\r\n    }\r\n\r\n    getProgress = () => {\r\n        let done = 0\r\n        let all = 0\r\n        this.props.checklists.forEach(Checklist => {\r\n            Checklist.todos.forEach(todo => {\r\n                if (todo.isDone === true) done++\r\n                all++\r\n            })\r\n        })\r\n        const progress = Math.round(done / all * 100)\r\n        this.setState({ progress })\r\n    }\r\n\r\n    render() {\r\n        const { todo, progress } = this.state\r\n        const done = (progress === 100) ? 'done' : ''\r\n        return (\r\n            <ul className=\"card-checklist-show card-show \">\r\n                {/* <progress value={progress.done} max={progress.all}> </progress> */}\r\n                <div className=\"show flex align-center\">\r\n                    <span>{`${progress}%`}</span>\r\n                    <div className=\"progress-wraper\"><div className={`progress-inner ${done}`} style={{ width: `${progress}%` }}></div></div>\r\n                </div>\r\n                {this.props.checklists.map(checklist => {\r\n                    return (\r\n                        <li key={checklist.id} className=\"checklist-wraper\" >\r\n                            <header className=\"flex space-between\">\r\n                                <h4 className=\"checklist-title\" > {checklist.title}</h4>\r\n                                <button className=\"edit-btn\" onClick={() => { this.removeChecklist(checklist.id) }}>Delete</button>\r\n                            </header>\r\n                            <TodoListShow checklist={checklist} card={this.props.card} updateCard={this.props.updateCard}\r\n                                removeTodo={this.removeTodo} />\r\n                            <form onSubmit={(event) => { this.addTask(event, checklist.id) }}>\r\n                                <input type=\"text\" name=\"txt\" value={todo.txt} onChange={this.handleTaskChange}\r\n                                    placeholder=\"Add an item\" autoComplete=\"off\" required></input>\r\n                                <button className=\"add-btn\">Add</button>\r\n                                {/* <button className=\"add-btn\" onClick>X</button> */}\r\n                            </form>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardChecklistShow = connect(mapStateToProps, mapDispatchToProps)(_CardChecklistShow)\r\n","import React, { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddDeutimeBar(props) {\r\n\r\n\r\n\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Due Date</h3>\r\n                <button onClick={props.toggleAddDeutime}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                />\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardDuedateShow(props) {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    const { card } = props\r\n    const m = new Date(card.duedate).getMonth() + 1\r\n    let month = ''\r\n    switch (m) {\r\n        case 1: month = 'Jan'; break;\r\n        case 2: month = 'Feb'; break;\r\n        case 3: month = 'Mar'; break;\r\n        case 4: month = 'Apr'; break;\r\n        case 5: month = 'May'; break;\r\n        case 6: month = 'Jun'; break;\r\n        case 7: month = 'Jul'; break;\r\n        case 8: month = 'Aug'; break;\r\n        case 9: month = 'Sep'; break;\r\n        case 10: month = 'Oct'; break;\r\n        case 11: month = 'Nov'; break;\r\n        case 12: month = 'Dec'; break;\r\n        default: break;\r\n    }\r\n    const day = card.duedate.substring(8, 10)\r\n    const remainingTime = (new Date(card.duedate) - Date.now())\r\n    const urgent = (remainingTime < 1000 * 60 * 60 * 24) ? 'urgent' : ''\r\n\r\n\r\n    return (\r\n        <p className={`duetime-fa ${urgent} `}>{` ${month} ${day}`}</p>\r\n    )\r\n}\r\n\r\n\r\n","export const cloudinaryService = {\r\n    uploadImg\r\n  }\r\n  async function uploadImg(file) {\r\n    const CLOUD_NAME = \"ddgevj2yp\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n  \r\n    const formData = new FormData();\r\n    formData.append('file', file)\r\n    formData.append('upload_preset', 'ddgevj2yp');\r\n    try {\r\n      const res = await fetch(UPLOAD_URL, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n      const data = await res.json()\r\n      return data\r\n  \r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  ","import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/cloudinaryService'\r\n\r\nexport class Uploader extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 300,\r\n    width: 300,\r\n    isUploading: false\r\n  }\r\n  onUploadImg = async ev => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev.target.files[0])\r\n    this.setState({ imgUrl: secure_url, isUploading: false, height, width })\r\n    this.props.addImg(secure_url)\r\n    // this.props.onFinishUpload(secure_url)\r\n  }\r\n  render() {\r\n    const { imgUrl, isUploading, height, width } = this.state\r\n    const uploadStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n      height: height + 'px',\r\n      width: width + 'px',\r\n      objectFit: 'cover'\r\n    }\r\n    return (\r\n      <div className=\"uploader flex align-center justify-center\"\r\n        style={ uploadStyle }>\r\n\r\n        <label htmlFor=\"imageUploader\">\r\n          { isUploading ? 'Uploading....' : 'Upload Image' }\r\n        </label>\r\n\r\n        <input onChange={ this.onUploadImg } \r\n          type=\"file\" accept=\"image/*\" id=\"imageUploader\" />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { Uploader } from '../Uploader'\r\n// import { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function AddImgBar(props) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"edit-bar\">\r\n            <header className=\"seconde\">\r\n                <h3>Upload image</h3>\r\n                <button onClick={props.toggleAddImg}>x</button>\r\n\r\n            </header>\r\n            <main>\r\n                <Uploader addImg={props.addImg} />\r\n                {/* <DatePicker\r\n                    selected={startDate}\r\n                    onSelect={date => setStartDate(() => { props.addDeuDate(date) })}\r\n                    inline\r\n                /> */}\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardImgShow(props) {\r\n\r\n\r\n    const { card } = props\r\n    const img = card.img\r\n\r\n\r\n    return (\r\n        <span className=\"card-ow\">\r\n            <img className=\"show\" src={img} alt=\"\" />\r\n            {/* <p className={`duetime-fa ${urgent} `}>{` ${month} ${day}`}</p> */}\r\n        </span>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _AddMembersBar extends Component {\r\n    state = {\r\n        member: { fullname: '' }\r\n    }\r\n\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const member = { ...this.state.member }\r\n        member[ev.target.name] = ev.target.value\r\n\r\n        this.setState({ member })\r\n    }\r\n\r\n    onAddMembers = (user) => {\r\n        const { card } = this.props\r\n        const cardToSave = { ...card }\r\n        const userToRemove = card.members.find(currUser => currUser._id === user._id)\r\n        if (userToRemove) {\r\n            const newMembers = card.members.filter(currUser => currUser._id !== user._id)\r\n            cardToSave.members = newMembers\r\n            this.setState({ member: { fullname: '' } })\r\n\r\n        } else {\r\n            const miniUser = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n            cardToSave.members = (cardToSave.members) ? [...cardToSave.members, miniUser] : [miniUser]\r\n        }\r\n        this.props.updateCard(cardToSave, `added ${this.state.member.fullname}`)\r\n        this.setState({ member: { fullname: '' } })\r\n    }\r\n\r\n    render() {\r\n        const { toggleAddMembers, users, card } = this.props\r\n\r\n        return (\r\n\r\n            <div className=\"add-members-bar edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3>Add Members</h3>\r\n                    <button onClick={toggleAddMembers}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <label>Members\r\n                    <input list=\"members\" name=\"fullname\" value={this.state.member.fullname}\r\n                            onChange={this.handleChange} autoFocus autoComplete=\"off\" ></input>\r\n                    </label>\r\n                    <ul>\r\n                        {users.map(user => {\r\n                            const alreadyMember = (card.members?.find(currUser => currUser.fullname === user.fullname)) ? 'alreadyMember' : ''\r\n                            return (\r\n                                <li className={alreadyMember} key={user._id} value={user.fullname} onClick={() => { this.onAddMembers(user) }}>\r\n                                    <div className=\"member-item\">\r\n                                        <div className=\"user-img\" style={{ backgroundImage: `url(${user.imgUrl})` }}></div>\r\n                                        {user.fullname}\r\n                                    </div>\r\n                                </li>)\r\n                        })}\r\n                    </ul>\r\n                    {/* <datalist id=\"members\">\r\n                        {users.map(user => {\r\n                            const alreadyMember = (card.members?.find(currUser => currUser.fullname === user.fullname)) ? 'alreadyMember' : ''\r\n                            return <option className={alreadyMember} key={user._id} value={user.fullname}> </option>\r\n                        })}\r\n                    </datalist> */}\r\n                    {/* <button className=\"add-btn\">Add</button> */}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AddMembersBar = connect(mapStateToProps, mapDispatchToProps)(_AddMembersBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardMembersShow extends Component {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <ul className=\"card-member-show flex flex-end\">\r\n\r\n                {this.props.members.map(member => {\r\n                    let userImgStyle = {\r\n                        backgroundImage: `url(${member.imgUrl})`\r\n                    }\r\n                    return (\r\n                        <li key={member._id} style={userImgStyle} className='user-img' >\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardMembersShow = connect(mapStateToProps, mapDispatchToProps)(_CardMembersShow)\r\n","\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _CardActivitiesShow extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        this.props.activities.filter(activity => {\r\n            if (activity.card.id === this.props.card.id) return <div></div>\r\n        })\r\n        return (\r\n            <ul className=\"card-activities-show card-show show\">\r\n                {this.props.activities.map(activity => {\r\n                    if (activity.card.id === this.props.card.id) return (\r\n                        <li key={activity.id} >\r\n                            <div className=\"user-img inline-block\" style={{ backgroundImage: `url(${activity.byMember.imgUrl})` }}></div>\r\n                            <span>{activity.byMember.fullname} </span> {` ${activity.txt} to this card`}\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardActivitiesShow = connect(mapStateToProps, mapDispatchToProps)(_CardActivitiesShow)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _DeleteCardBar extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n\r\n    }\r\n\r\n\r\n    deleteCard = async () => {\r\n        try {\r\n            this.props.onRemoveCard(this.props.cardId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"edit-bar\" onSubmit={this.deleteCard}>\r\n                <header className=\"seconde\">\r\n                    <h3> Delete card?</h3>\r\n                    <button onClick={this.props.toggleDeleteCard}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <p>All actions will be removed from the activity feed and you won’t be able to re-open the card. There is no undo.</p>\r\n                    <button className=\"add-btn red\">Delete</button>\r\n                </main>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const DeleteCardBar = connect(mapStateToProps, mapDispatchToProps)(_DeleteCardBar)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { utilService } from '../services/utilService.js'\r\nimport { loadBoard, updateBoard } from '../store/actions/boardActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { CardEditNav } from '../cmps/cardEdit/CardEditNav'\r\nimport { AddDescription } from '../cmps/cardEdit/AddDescription'\r\nimport { LabelPalette } from '../cmps/cardEdit/LabelPalette'\r\nimport { AddChecklistBar } from '../cmps/cardEdit/AddChecklistBar'\r\nimport { AddCoverBar } from '../cmps/cardEdit/AddCoverBar'\r\nimport { CardLabelShow } from '../cmps/cardEdit/CardLabelShow'\r\nimport { CardChecklistShow } from '../cmps/cardEdit/CardChecklistShow'\r\nimport { AddDeutimeBar } from '../cmps/cardEdit/AddDeutimeBar'\r\nimport { CardDuedateShow } from '../cmps/cardEdit/CardDuedateShow'\r\nimport { AddImgBar } from '../cmps/cardEdit/AddImgBar'\r\nimport { CardImgShow } from '../cmps/cardEdit/CardImgShow'\r\nimport { AddMembersBar } from '../cmps/cardEdit/AddMembersBar'\r\nimport { CardMembersShow } from '../cmps/cardEdit/CardMembersShow'\r\nimport { CardActivitiesShow } from '../cmps/cardEdit/CardActivitiesShow'\r\nimport { DeleteCardBar } from '../cmps/cardEdit/DeleteCardBar'\r\n\r\nclass _CardEdit extends Component {\r\n    state = {\r\n        board: null,\r\n        groupId: null,\r\n        card: null,\r\n        isDescriptionShowing: false,\r\n        isLabelPaletteShowing: false,\r\n        isAddChecklistShowing: false,\r\n        isCoverShowing: false,\r\n        isAddDeutimeShowing: false,\r\n        isAddImgShowing: false,\r\n        isAddMembersShowing: false,\r\n        isDeleteCardShowing: false,\r\n        isActivitiesShowing: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            this.loadCard()\r\n            this.props.loadUsers()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.match !== prevprops.match) this.loadCard()\r\n    }\r\n\r\n    loadCard = async () => {\r\n        const boardId = this.props.selectedBoard._id\r\n        const groupId = this.props.groupId\r\n        const cardId = this.props.card.id\r\n        try {\r\n            await this.props.loadBoard(boardId)\r\n            const groups = this.props.selectedBoard.groups\r\n            const group = groups.find(group => group.id === groupId)\r\n            const card = group.cards.find(currCard => currCard.id === cardId)\r\n            this.setState({ board: this.props.selectedBoard, groupId, card })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateCard = async (cardToSave, txt = '') => {\r\n        const boardToSave = { ...this.props.selectedBoard }\r\n        const groupToSave = boardToSave.groups.find(group => group.id === this.state.groupId)\r\n        const cardsToSave = groupToSave.cards.map(card => {\r\n            if (card.id === cardToSave.id) return cardToSave\r\n            else return card\r\n        })\r\n        groupToSave.cards = cardsToSave\r\n        const groupsToSave = boardToSave.groups.map(group => {\r\n            if (group.id === groupToSave.id) return groupToSave\r\n            else return group\r\n        })\r\n        boardToSave.groups = groupsToSave\r\n        if (txt) {\r\n            const activity = this.createActivity(txt)\r\n            boardToSave.activities.unshift(activity)\r\n        }\r\n        try {\r\n            // await updateBoard(boardToSave)\r\n            await this.props.updateBoard(boardToSave)\r\n            this.loadCard()\r\n\r\n        } catch (err) {\r\n            console.log('BoardActions: err in loadBoard', err)\r\n        }\r\n    }\r\n\r\n    createActivity = (txt) => {\r\n        const { loggedInUser, card } = this.props\r\n        const miniUser = (loggedInUser) ? { _id: loggedInUser._id, fullname: loggedInUser.fullname, imgUrl: loggedInUser.imgUrl } : { _id: '123', fullname: 'guest', imgUrl: 'https://res.cloudinary.com/ddgevj2yp/image/upload/v1610989052/avatar-1_kbr5un.jpg' }\r\n        const miniCard = { id: card.id, title: card.title }\r\n        const activity = { id: 'a' + utilService.makeId(), createdAt: Date.now(), txt, byMember: miniUser, card: miniCard }\r\n        return activity\r\n    }\r\n\r\n    toggleLabelPalette = () => {\r\n        this.setState({ isLabelPaletteShowing: !this.state.isLabelPaletteShowing })\r\n    }\r\n    toggleChecklistBar = () => {\r\n        this.setState({ isAddChecklistShowing: !this.state.isAddChecklistShowing })\r\n    }\r\n    toggleCoverBar = () => {\r\n        this.setState({ isCoverShowing: !this.state.isCoverShowing })\r\n    }\r\n    toggleAddDescription = () => {\r\n        this.setState({ isDescriptionShowing: !this.state.isDescriptionShowing })\r\n    }\r\n    toggleAddDeutime = () => {\r\n        this.setState({ isAddDeutimeShowing: !this.state.isAddDeutimeShowing })\r\n    }\r\n    toggleAddMembers = () => {\r\n        this.setState({ isAddMembersShowing: !this.state.isAddMembersShowing })\r\n    }\r\n\r\n    toggleAddImg = () => {\r\n        this.setState({ isAddImgShowing: !this.state.isAddImgShowing })\r\n    }\r\n\r\n    toggleDeleteCard = () => {\r\n        this.setState({ isDeleteCardShowing: !this.state.isDeleteCardShowing })\r\n    }\r\n\r\n    addDeuDate = (date) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.duedate = date\r\n        this.updateCard(cardToSave, `added due date`)\r\n        // this.updateCard(cardToSave, `set card to be due at ${date}`)\r\n    }\r\n\r\n    addImg = (img) => {\r\n        const cardToSave = { ...this.props.card }\r\n        cardToSave.img = img\r\n        this.updateCard(cardToSave, 'added img')\r\n        // console.log('card to save:', cardToSave)\r\n    }\r\n\r\n    stopProg = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isDescriptionShowing, isActivitiesShowing } = this.state\r\n        const { card, users, toggleCardEdit, onRemoveCard, selectedBoard } = this.props\r\n        const isLabels = (card && card.labels && card.labels.length > 0)\r\n        const isChecklists = (card && card.checklists && card.checklists.length > 0)\r\n        const isDuedate = (card && card.duedate)\r\n        const isMember = (card && card.members && card.members.length > 0)\r\n        const coverShow = (card && card.style?.coverType) ? `top t${card.style.bgColor}` : ''\r\n        const isImg = (card && card.img)\r\n\r\n\r\n        if (!card) return <div></div>\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"screen\" onClick={toggleCardEdit}>\r\n                    <div onClick={(ev) => { this.stopProg(ev) }} >\r\n                        {/* <section className=\"card-edit\"> */}\r\n                        <section className={`card-edit ${coverShow}`}>\r\n                            {/* {(card.style && card.style.coverType && card.style.bgColor) ? <CardCoverShow card={card} /> : ''} */}\r\n                            <header className=\"edit-header\">\r\n                                <button className=\"close\" onClick={toggleCardEdit}></button>\r\n                                <h1 className=\"title-sign\">{card.title}</h1>\r\n                            </header>\r\n\r\n                            <div className=\"permanent\">\r\n                                <main>\r\n                                    <div className=\"nav-mini-show show flex \">\r\n                                        <div className=\" inline-block\">{isLabels && <div> <h5>Labels </h5><CardLabelShow labels={card.labels} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isDuedate && <div className=\"duedate\"> <h5>Due Date </h5> <CardDuedateShow duedate={card.duedate} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        <div className=\"inline-block\">{isMember && <div className=\"members\"> <h5>Members </h5> <CardMembersShow members={card.members} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                        {/* <div className=\"inline-block\">{isImg && <div className=\"card-img\"> <CardImgShow img={card.img} card={card} updateCard={this.updateCard} /></div>}</div> */}\r\n                                    </div>\r\n                                    <h4 className=\"description-sign\">Description </h4>\r\n                                    {(isDescriptionShowing) ? <AddDescription card={card} toggleAddDescription={this.toggleAddDescription} updateCard={this.updateCard} /> : ((card.description) ?\r\n                                        <div className=\"description show\">{card.description} <button className=\"edit-btn\" onClick={this.toggleAddDescription}>Edit</button></div> :\r\n                                        <div className=\"show description\" onClick={this.toggleAddDescription}>add a more detailed description...</div>)}\r\n                                    <p>{card.description && ''}</p>\r\n                                    <div className=\"inline-block\">{isImg && <div className=\"card-img\"> <CardImgShow img={card.img} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                    <div>{isChecklists && <div><CardChecklistShow checklists={card.checklists} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                    <div>{isActivitiesShowing && <div> <h4 className=\"activity-sign\">Activity </h4> <CardActivitiesShow activities={selectedBoard.activities} card={card} updateCard={this.updateCard} /></div>}</div>\r\n                                </main>\r\n                                <CardEditNav card={card} toggleLabelPalette={this.toggleLabelPalette} toggleChecklistBar={this.toggleChecklistBar} toggleCoverBar={this.toggleCoverBar}\r\n                                    toggleAddDeutime={this.toggleAddDeutime} toggleAddImg={this.toggleAddImg} toggleAddMembers={this.toggleAddMembers} toggleDeleteCard={this.toggleDeleteCard} />\r\n                            </div>\r\n\r\n\r\n                            {this.state.isLabelPaletteShowing && <LabelPalette card={card} updateCard={this.updateCard} toggleLabelPalette={this.toggleLabelPalette} board={selectedBoard} updateBoard={this.props.updateBoard} />}\r\n                            {this.state.isAddChecklistShowing && <AddChecklistBar card={card} updateCard={this.updateCard} toggleChecklistBar={this.toggleChecklistBar} />}\r\n                            {this.state.isCoverShowing && <AddCoverBar card={card} updateCard={this.updateCard} toggleCoverBar={this.toggleCoverBar} />}\r\n                            {this.state.isAddDeutimeShowing && <AddDeutimeBar card={card} updateCard={this.updateCard} toggleAddDeutime={this.toggleAddDeutime} addDeuDate={this.addDeuDate} />}\r\n                            {this.state.isAddMembersShowing && <AddMembersBar card={card} updateCard={this.updateCard} toggleAddMembers={this.toggleAddMembers} users={users} />}\r\n                            {this.state.isAddImgShowing && <AddImgBar card={card} updateCard={this.updateCard} toggleAddImg={this.toggleAddImg} addImg={this.addImg} />}\r\n                            {this.state.isDeleteCardShowing && <DeleteCardBar cardId={card.id} boardId={selectedBoard._id} toggleDeleteCard={this.toggleDeleteCard} onRemoveCard={onRemoveCard} />}\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    loadUsers\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n","\r\n\r\nimport React from 'react'\r\n\r\nexport function ChecklistSign(props) {\r\n    let done = 0\r\n    let all = 0\r\n\r\n    props.checklists.forEach(Checklist => {\r\n        Checklist.todos.forEach(todo => {\r\n            if (todo.isDone === true) done++\r\n            all++\r\n        })\r\n    })\r\n\r\n    return (\r\n        <span className=\"checklistSign sign\" > {`${done} / ${all}`} </span>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nexport function CardDuedateShowMin(props) {\r\n\r\n    // removeLable = (labelId) => {\r\n    //     const cardToSave = { ...this.props.card }\r\n    //     const labelsToSave = cardToSave.labels.filter(label => label.id !== labelId)\r\n    //     cardToSave.labels = labelsToSave\r\n    //     this.props.updateCard(cardToSave)\r\n    // }\r\n\r\n    const { card } = props\r\n    const m = new Date(card.duedate).getMonth() + 1\r\n    let month = ''\r\n    switch (m) {\r\n        case 1: month = 'Jan'; break;\r\n        case 2: month = 'Feb'; break;\r\n        case 3: month = 'Mar'; break;\r\n        case 4: month = 'Apr'; break;\r\n        case 5: month = 'May'; break;\r\n        case 6: month = 'Jun'; break;\r\n        case 7: month = 'Jul'; break;\r\n        case 8: month = 'Aug'; break;\r\n        case 9: month = 'Sep'; break;\r\n        case 10: month = 'Oct'; break;\r\n        case 11: month = 'Nov'; break;\r\n        case 12: month = 'Dec'; break;\r\n        default: break;\r\n    }\r\n    const day = card.duedate.substring(8, 10)\r\n    const remainingTime = (new Date(card.duedate) - Date.now())\r\n    const urgent = (remainingTime < 1000 * 60 * 60 * 24) ? 'urgent' : ''\r\n\r\n\r\n    return (\r\n        <span className=\"card-duedate-show\">\r\n            <span className={`duetime-fa duetime-fa-min ${urgent} `}>{` ${month} ${day}`}</span>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { removeCard } from '../../store/actions/boardActions.js'\r\nimport { CardLabelShowMin } from '../cardEdit/CardLabelShowMin'\r\nimport { CardEdit } from '../../pages/CardEdit'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { ChecklistSign } from './ChecklistSign'\r\n// import { CardCoverShowMin } from './CardCoverShowMin'\r\nimport { CardImgShow } from '../cardEdit/CardImgShow'\r\nimport { CardDuedateShowMin } from '../cardEdit/CardDuedateShowMin'\r\nimport { CardMembersShow } from '../cardEdit/CardMembersShow'\r\n\r\nexport class _CardPreview extends Component {\r\n\r\n    state = {\r\n        isCardEtidShow: false\r\n    }\r\n\r\n\r\n    onRemoveCard = (cardId) => {\r\n        console.log('cardId to remove', cardId)\r\n        this.props.removeCard(cardId, this.props.groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleCardEdit = () => {\r\n        this.setState({ isCardEtidShow: !this.state.isCardEtidShow })\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isCardEtidShow } = this.state\r\n        // const cardBgc = (card.style && card.style.coverType && card.style.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardBgc = (card.style?.coverType === 'full') ? `full ${card.style.bgColor}` : ''\r\n        const cardCover = (card.style?.coverType === 'top' && card.style.bgColor) ? `top t${card.style.bgColor}` : ''\r\n        return (\r\n\r\n\r\n            <Draggable draggableId={String(card.id)} index={this.props.index} direction=\"horizontal\" type=\"card\">\r\n                {(provided) => {\r\n                    return (\r\n\r\n                        <li key={card.id}  {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className={(card.title !== 'default-empty') ? `` : `list-preview-empty`}>\r\n                            <article className={(card.title !== 'default-empty') ? `card-preview ${cardBgc} ${cardCover}` : `card-preview-empty`}>\r\n                                {/* {(card.style?.coverType === 'top') ? <CardCoverShowMin card={card} /> : ''} */}\r\n                                {/* <button className=\"edit-fa\" onClick={() => this.toggleCardEdit}></button> */}\r\n                                <button className=\"edit-s\" onClick={this.toggleCardEdit}></button>\r\n\r\n                                {/* <button className=\"delete-s\" onClick={() => this.onRemoveCard(card.id)}></button> */}\r\n                                {card.labels && <CardLabelShowMin labels={card.labels} />}\r\n                                <p onClick={this.toggleCardEdit}>{card.title}</p>\r\n                                {card.img && <CardImgShow card={card} />}\r\n                                <nav className=\"flex space-between flex-end\">\r\n                                    <span>\r\n                                        {(card.description) ? <span className=\"descriptionSign sign\"></span> : ''}\r\n                                        {(card.checklists && card.checklists.length > 0) ? <ChecklistSign checklists={card.checklists} /> : ''}\r\n                                        {(card.duedate) ? <CardDuedateShowMin card={card} /> : ''}\r\n                                    </span>\r\n                                    <span>\r\n                                        {(card.members) ? <CardMembersShow members={card.members} /> : ''}\r\n                                    </span>\r\n                                </nav>\r\n                                {isCardEtidShow && <CardEdit card={card} groupId={this.props.groupId} toggleCardEdit={this.toggleCardEdit} onRemoveCard={this.onRemoveCard} />}\r\n                            </article>\r\n                        </li>\r\n                    )\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    removeCard\r\n\r\n};\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);","import { CardPreview } from './CardPreview.jsx'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\n\r\n\r\nexport function CardList(props) {\r\n    return (\r\n        <Droppable droppableId={props.groupId} type=\"card\" >\r\n            {(provided) => (\r\n                <ul className=\"card-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {props.cards.map((card, index) =>\r\n                        <CardPreview key={card.id} card={card} groupId={props.groupId} index={index} />\r\n                    )}\r\n                    {provided.placeholder}\r\n                </ul>\r\n            )}\r\n\r\n        </Droppable>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addCard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddCard extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addCard(this.state.title, this.props.group.id, this.props.selectedBoard)\r\n        this.props.toggleAddCardMode()\r\n\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddCardMode()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-card\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <textarea placeholder=\"Enter a title for this card...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\"/>\r\n                    <button className=\"save-btn\">Add Card</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addCard\r\n\r\n};\r\n\r\nexport const AddCard = connect(mapStateToProps, mapDispatchToProps)(_AddCard);","\r\n\r\nexport function RemoveList(props) {\r\n\r\n    return (\r\n        <section className=\"edit-bar\">\r\n                <header className=\"seconde\">\r\n                    <h3> Delete list?</h3>\r\n                    <button onClick={props.toggleDeleteBar}>x</button>\r\n\r\n                </header>\r\n                <main>\r\n                    <p>All actions will be removed from the activity feed and you won’t be able to re-open the list. There is no undo.</p>\r\n                    <button className=\"add-btn red\" onClick={()=>props.onRemoveGroup(props.group.id, props.group.title)}>Delete</button>\r\n                </main>\r\n            </section>\r\n    )\r\n}","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AddCard } from './AddCard.jsx'\r\nimport { RemoveList } from './RemoveList'\r\n\r\n\r\nexport class _EditGroupNav extends Component {\r\n\r\n    state = {\r\n        isOnAddCardMode: false,\r\n        isDeleteBarShow: false\r\n    }\r\n\r\n\r\n    toggleDeleteBar = () => {\r\n        this.setState({ isDeleteBarShow: !this.state.isDeleteBarShow })\r\n    }\r\n\r\n   \r\n    toggleAddCardMode = () => {\r\n\r\n        this.setState({ isOnAddCardMode: !this.state.isOnAddCardMode })\r\n    }\r\n\r\n    render() {\r\n        const { onRemoveGroup } = this.props\r\n        const { isDeleteBarShow } = this.state\r\n        const { isOnAddCardMode } = this.state\r\n        const { group } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                < nav className=\"edit-group-container\">\r\n                    {(!isOnAddCardMode) ? <button onClick={this.toggleAddCardMode}>Add another card...</button> : <AddCard group={group} toggleAddCardMode={this.toggleAddCardMode} />}\r\n                    {(!isDeleteBarShow) ? <button onClick={this.toggleDeleteBar}>Delete this list...</button> : <RemoveList group={group} toggleDeleteBar={this.toggleDeleteBar} onRemoveGroup={onRemoveGroup} />}\r\n                    \r\n                </nav >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport const EditGroupNav = connect(mapStateToProps, mapDispatchToProps)(_EditGroupNav);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\nimport { EditGroupTitle } from './EditGroupTitle'\r\nimport { CardList } from '../card/CardList'\r\nimport { AddCard } from './AddCard.jsx'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { EditGroupNav } from './EditGroupNav'\r\n\r\n\r\n\r\nexport class _GroupPreview extends Component {\r\n\r\n    state = {\r\n        isOnAddCardMode: false,\r\n        isEditMode: false,\r\n        isEditGroupNavShow: false,\r\n        // isOnAddGroupMode: false,\r\n        title: '',\r\n        groupHeight: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ groupHeight: document.body.clientHeight })\r\n    }\r\n\r\n    onRemoveGroup = async (groupId, groupTitle) => {\r\n        let boardToUpdate = JSON.parse(JSON.stringify(this.props.selectedBoard))\r\n        let msg = `removed list titled ${groupTitle}`\r\n        const updatedGroups = boardToUpdate.groups.filter(group => group.id !== groupId)\r\n        boardToUpdate.groups = updatedGroups\r\n\r\n        const board = await this.props.updateBoard(boardToUpdate, msg)\r\n        // this.props.removeGroup(groupId, this.props.selectedBoard)\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n    toggleAddCardMode = () => {\r\n\r\n        this.setState({ isOnAddCardMode: !this.state.isOnAddCardMode })\r\n    }\r\n    toggleEditGroupNav = () => {\r\n        this.setState({ isEditGroupNavShow: !this.state.isEditGroupNavShow })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isEditMode, isOnAddCardMode, isEditGroupNavShow } = this.state\r\n        const { group } = this.props\r\n        return (\r\n            <Draggable draggableId={group.id} index={this.props.index}>\r\n                {(provided) => {\r\n                    return (\r\n                        <li className=\"group\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                            <article className=\"group-preview\">\r\n                                <div className=\"group-wraper\" >\r\n                                    <header>\r\n                                        {(!isEditMode) ? <p onClick={this.toggleEditMode}>{group.title} </p> : <EditGroupTitle group={group} toggleEditMode={this.toggleEditMode} />}\r\n                                        <button className=\"menu-group\" onClick={() => this.toggleEditGroupNav(group.id)}></button>\r\n                                        {isEditGroupNavShow && <EditGroupNav group={group} onRemoveGroup={this.onRemoveGroup} />}\r\n                                    </header>\r\n                                    <main style={{ maxHeight: `${this.state.groupHeight - 200}px` }}>\r\n                                        <div className=\"main-group-wraper\">\r\n                                            {group.cards && <CardList groupId={group.id} cards={group.cards} />}\r\n                                        </div>\r\n                                    </main>\r\n                                    {(!isOnAddCardMode) ? <p className=\"add-another-card\" onClick={this.toggleAddCardMode}> Add another card</p> : <AddCard group={group} toggleAddCardMode={this.toggleAddCardMode} />}\r\n                                </div>\r\n                            </article>\r\n                        </li>\r\n\r\n                    )\r\n\r\n                }}\r\n\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n\r\n};\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addGroup } from '../../store/actions/boardActions.js'\r\n// import Icon from '@material-ui/core/Icon';\r\nexport class _AddNewGroup extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        await this.props.addGroup(this.state.title, this.props.selectedBoard)\r\n        this.setState({ title: '' })\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleAddGroupMode()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-group\">\r\n                <form className=\"add-new-wraper\" onSubmit={this.onSubmit} >\r\n                    <input className=\"add-another-group\" placeholder=\"Add another list\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" />\r\n                    <button className=\"save-group-btn\">Add List</button>\r\n                    <button className=\"cancel-group-btn\" onClick={this.onCancelAdd}></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    addGroup,\r\n};\r\nexport const AddNewGroup = connect(mapStateToProps, mapDispatchToProps)(_AddNewGroup);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupPreview } from './GroupPreview.jsx'\r\nimport { AddNewGroup } from './AddNewGroup.jsx'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\n\r\nexport class _GroupList extends Component {\r\n    state = {\r\n        isOnAddGroupMode: false,\r\n    }\r\n    toggleAddGroupMode = () => {\r\n        this.setState({ isOnAddGroupMode: !this.state.isOnAddGroupMode })\r\n    }\r\n    render() {\r\n        const { isOnAddGroupMode } = this.state\r\n        return (\r\n            <DragDropContext onDragEnd={this.props.onDragEnd}>\r\n                <section className=\"group-list-container\">\r\n                    <Droppable droppableId={'moveGroups'} direction=\"horizontal\" type=\"group\">\r\n                        {(provided) => (\r\n                            <ul className=\"group-list clean-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {this.props.groups.map((group, index) =>\r\n                                    <GroupPreview key={group.id} group={group} index={index} />\r\n                                )}\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                    {(!isOnAddGroupMode) ? <p className=\"add-another-list\" onClick={this.toggleAddGroupMode}> Add another list</p> : <AddNewGroup boardId={this.props.boardId} toggleAddGroupMode={this.toggleAddGroupMode} />}\r\n                </section>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n};\r\nexport const GroupList = connect(mapStateToProps, mapDispatchToProps)(_GroupList);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _EditBoardTitle extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.selectedBoard\r\n        this.setState({ title })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault()\r\n        const { title } = this.state\r\n        if (!title) return\r\n        const board = { ...this.props.selectedBoard, title }\r\n        await this.props.updateBoard(board, `changed board title to ${title}`)\r\n        this.props.toggleEditMode()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-board-title\">\r\n                <form onSubmit={this.onSubmit} >\r\n                    <input className=\"new-title-input\" placeholder=\"Board Title\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" autoFocus />\r\n                    <button className=\"add-btn\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n};\r\n\r\nexport const EditBoardTitle = connect(mapStateToProps, mapDispatchToProps)(_EditBoardTitle);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { EditBoardTitle } from './EditBoardTitle'\r\n\r\n\r\n\r\nexport class _AboutBoard extends Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    render() {\r\n        const { isEditMode } = this.state\r\n        const { selectedBoard } = this.props\r\n        return (\r\n            <div className=\"about-board-container side-menu-sub-item\">\r\n                <header>\r\n                    <h1>About this board</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleAboutBoard}>x</button>\r\n                </header>\r\n                <main className=\"menu-container\">\r\n                    <section>\r\n                        <p className=\"menu-item made-by\"> Made by </p>\r\n                        <div className=\"flex align-center\">\r\n                            <div className=\"user-img sub inline-block\" style={{ backgroundImage: `url(${selectedBoard.createdBy.imgUrl})` }}></div>\r\n                            <span>{selectedBoard.createdBy.username} </span>\r\n                        </div>\r\n                    </section>\r\n                    <section>\r\n                        <p className=\"menu-item board-name\">Board name <span className=\"board-name-edit\">click to edit</span></p>\r\n\r\n                        {(!isEditMode) ? <p className=\"board-name-edit\" onClick={this.toggleEditMode}> {selectedBoard.title} </p> : <EditBoardTitle toggleEditMode={this.toggleEditMode} />}\r\n                        {/* <button onClick={() => { this.props.toggleAboutBoard() }}>Back to Menu</button> */}\r\n                    </section>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n\r\n};\r\n\r\nexport const AboutBoard = connect(mapStateToProps, mapDispatchToProps)(_AboutBoard);\r\n\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _ChangeBoardBackground extends Component {\r\n\r\n    state = {\r\n        bgurl: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onChooseBackground = (bgUrl) => {\r\n        const callback = () => {\r\n            this.onSubmit();\r\n        };\r\n        this.setState({ bgurl: bgUrl }, callback)\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let boardToUpdate = JSON.parse(JSON.stringify(this.props.selectedBoard))\r\n        boardToUpdate.style.bgurl = this.state.bgurl\r\n        await this.props.updateBoard(boardToUpdate, 'changed background')\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg104',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\r\n\r\n            },\r\n            {\r\n                id: 'bg105',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg106',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg107',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/02/19/11/33/backround-1209772_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg108',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/08/15/15/37/pen-2644392_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg109',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg110',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/05/31/13/13/rain-3443977_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg111',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/04/05/11/38/bokeh-316425_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg112',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/25/13/01/stones-167089_1280.jpg\"\r\n            }\r\n\r\n        ]\r\n        return (\r\n            <section className=\"side-menu-sub-item \" onClick={this.stopPropagation}>\r\n                <header>\r\n                    <h3>Choose background</h3>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleChangeBackground}>x</button>\r\n                </header>\r\n                <main className=\"add-board-backgrounds\">\r\n                    {backgroundImages.map(background => {\r\n                        return (\r\n                            <div className=\"backgrounds-tumbs\" key={background.id}\r\n                                style={{ backgroundImage: `url(${background.bgurl})` }}\r\n                                onClick={() => this.onChooseBackground(background.bgurl)}>\r\n                                <div className=\"plus\">+</div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </main>\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n};\r\n\r\nexport const ChangeBoardBackground = connect(mapStateToProps, mapDispatchToProps)(_ChangeBoardBackground);\r\n\r\n\r\n","\r\n\r\nexport function ActivityPreview(props) {\r\n\r\n    return (\r\n        <li className=\"activity-preview\">\r\n            <div className=\"user-img inline-block\" style={{ backgroundImage: `url(${props.activity.byMember.imgUrl})` }}></div>\r\n            <span className=\"user-name\">{props.activity.byMember.fullname} </span>\r\n            <span> {props.activity.txt} </span>\r\n        </li>\r\n\r\n    )\r\n}","import { ActivityPreview } from './ActivityPreview'\r\n\r\n\r\nexport function ActivityBoard(props) {\r\n\r\n    return (\r\n        <section className=\"activity-container\">\r\n            <p className=\"menu-item menu-activity\">Activity Log</p>\r\n            <ul className=\"activity-list\">\r\n                {props.activities.map(activity =>\r\n                    <ActivityPreview key={activity.id} activity={activity} />\r\n                )}\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import { Pie } from 'react-chartjs-2';\r\n\r\nexport function PieBoard(props) {\r\n    const membersTaskMap = props.board.groups.reduce((membersMapAcc, group) => {\r\n        group.cards?.forEach(card => {\r\n            card.members?.forEach(member => {\r\n                const count = membersMapAcc[member.fullname] + 1 || 1\r\n                membersMapAcc[member.fullname] = count\r\n            })\r\n        })\r\n        return membersMapAcc\r\n    }, {})\r\n\r\n\r\n\r\n\r\n    const data = {\r\n        labels: Object.keys(membersTaskMap),\r\n        datasets: [{\r\n            data: Object.values(membersTaskMap),\r\n            backgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            hoverBackgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            fontColor: '#ffff'\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Pie data={data} options={{\r\n                title: { display: true, text: 'Total Cards Per Member', fontColor: '#ffff', fontSize: '14' },\r\n                legend: { display: false },\r\n                ticks: { precision: 0 },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            fontColor: '#ffff',\r\n                            beginAtZero: true,\r\n                            userCallback: function (label, index, labels) {\r\n                                if (Math.floor(label) === label) {\r\n                                    return label;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        ticks: {\r\n                            fontColor: '#ffff'\r\n\r\n                        }\r\n                    }]\r\n                }\r\n            }} />\r\n        </section>\r\n    )\r\n}\r\n","import { HorizontalBar } from 'react-chartjs-2';\r\n\r\nexport function BarBoard(props) {\r\n\r\n    const groupCardMap = props.board.groups.reduce((cardsMapAcc, group) => {\r\n        cardsMapAcc[group.title] = group.cards.length\r\n        return cardsMapAcc\r\n    }, {})\r\n\r\n\r\n    const myData = {\r\n        labels: Object.keys(groupCardMap),\r\n        datasets: [{\r\n            label: 'tasks',\r\n            data: Object.values(groupCardMap),\r\n            backgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF'],\r\n            hoverBackgroundColor: ['#61BD4F', '#F2D600', '#FF9F1A', '#EB5A46', '#C377E0', '#0079BF']\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <HorizontalBar data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Total Cards Per List', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n\r\n                                // beginAtZero: true,\r\n                                // userCallback: function (label, index, labels) {\r\n                                //     // when the floored value is the same as the value we have a whole number\r\n                                //     if (Math.floor(label) === label) {\r\n                                //         return label;\r\n                                //     }\r\n\r\n                                // }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }} />\r\n        </section>\r\n    )\r\n}\r\n","import { Line } from 'react-chartjs-2';\r\n\r\nexport function LineBoard(props) {\r\n    // console.log(props.board);\r\n    // let membersActivities = {}\r\n    // props.board.activities.forEach(activity => {\r\n    //     if (membersActivities[activity.byMember.fullname]) membersActivities[activity.byMember.fullname]++\r\n    //     else membersActivities = { ...membersActivities, [activity.byMember.fullname]: 1 }\r\n    // })\r\n    // console.log(membersActivities);\r\n\r\n    const now = Date.now()\r\n    const groupTimeMap = props.board.groups.reduce((timeMapAcc, group) => {\r\n        let cardsInGroupSum = 0\r\n        group.cards?.forEach(card => {\r\n            cardsInGroupSum++\r\n            // let diff = Math.round((now - card.createdAt) / (1000 * 60 * 60 * 24))\r\n            let diff = (now - card.createdAt) / 36000 / 1000\r\n            timeMapAcc[group.title] = Math.round(diff / cardsInGroupSum)\r\n\r\n        })\r\n        return timeMapAcc\r\n    }, {})\r\n\r\n\r\n    const myData = {\r\n        labels: Object.keys(groupTimeMap),\r\n        datasets: [{\r\n            data: Object.values(groupTimeMap),\r\n            backgroundColor: ['#0079BF'],\r\n            hoverBackgroundColor: ['#0079BF'],\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Line\r\n                data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Average Lifetime Of Cards Per List In Days', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true,\r\n                                userCallback: function (label, index, labels) {\r\n                                    // when the floored value is the same as the value we have a whole number\r\n                                    if (Math.floor(label) === label) {\r\n                                        return label;\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff'\r\n\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { Bar } from 'react-chartjs-2';\r\n\r\nexport function BarLabels(props) {\r\n    const labelsTitle = []\r\n    const labelsTotal = []\r\n    props.board.groups.forEach((group) => {\r\n        group.cards?.forEach(card => {\r\n            card.labels?.forEach(label => {\r\n                if (labelsTotal[label.id]) labelsTotal[label.id]++\r\n                else labelsTotal[label.id] = 1\r\n                labelsTitle[label.id] = label.title\r\n            })\r\n        })\r\n    })\r\n\r\n    const myData = {\r\n        labels: Object.values(labelsTitle),\r\n        datasets: [{\r\n            label: 'tasks',\r\n            data: Object.values(labelsTotal),\r\n            backgroundColor: Object.keys(labelsTitle),\r\n            hoverBackgroundColor: Object.keys(labelsTitle)\r\n\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <section style={{ width: '40%' }}>\r\n            <Bar\r\n                data={myData}\r\n                options={{\r\n                    title: { display: true, text: 'Labels Usage', fontColor: '#ffff', fontSize: '14' },\r\n                    legend: { display: false },\r\n                    ticks: { precision: 0 },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff',\r\n                                beginAtZero: true,\r\n                                userCallback: function (label, index, labels) {\r\n                                    // when the floored value is the same as the value we have a whole number\r\n                                    if (Math.floor(label) === label) {\r\n                                        return label;\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }],\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                fontColor: '#ffff'\r\n\r\n                            }\r\n                        }]\r\n                    }\r\n                }} />\r\n        </section>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PieBoard } from './PieBoard'\r\nimport { BarBoard } from './BarBoard'\r\nimport { LineBoard } from './LineBoard'\r\nimport { BarLabels } from './BarLabels'\r\n\r\n\r\nclass _Dashboard extends Component {\r\n\r\n    state = {\r\n        todos: '',\r\n        cardSum: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.todosAndCardsSum()\r\n    }\r\n\r\n    todosAndCardsSum = () => {\r\n        let total = 0\r\n        let complited = 0\r\n        let cardSum = 0\r\n        this.props.selectedBoard.groups.forEach(group => {\r\n            group.cards?.forEach(card => {\r\n                cardSum++\r\n                card.checklists.forEach(checklist => {\r\n                    checklist.todos.forEach(todo => {\r\n                        total++\r\n                        if (todo.isDone) complited++\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        this.setState({ todos: `${complited} / ${total}`, cardSum })\r\n    }\r\n\r\n    render() {\r\n        const board = this.props.selectedBoard\r\n        const { toggleDashboard } = this.props\r\n        const { todos, cardSum } = this.state\r\n        const membersSum = board.members.length\r\n\r\n        return (\r\n            <section className=\"dashboard\">\r\n                <header>\r\n                    <h1>Board Statistics</h1>\r\n                    <button className=\"close-menu\" onClick={toggleDashboard}>x</button>\r\n                </header>\r\n                <main className=\"menu-container\">\r\n                    <div className=\"summery\">\r\n                        <p><span>{membersSum}</span> Total members</p>\r\n                        <p><span>{todos}</span> Checked todos</p>\r\n                        <p><span>{cardSum}</span> Total Cards on board</p>\r\n                    </div>\r\n                    <div className=\"data\">\r\n                        <PieBoard board={board} />\r\n                        <BarBoard board={board} />\r\n                        <BarLabels board={board} />\r\n                        <LineBoard board={board} />\r\n                    </div>\r\n                </main>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AboutBoard } from '../boardMenu/AboutBoard'\r\nimport { ChangeBoardBackground } from '../boardMenu/ChangeBoardBackground'\r\nimport { RemoveBoard } from '../boardMenu/RemoveBoard'\r\nimport { ActivityBoard } from '../boardMenu/ActivityBoard'\r\nimport { Dashboard } from '../dashboard/Dashboard'\r\n\r\nclass _BoardSideMenu extends Component {\r\n    state = {\r\n        isAboutBoardShown: false,\r\n        isChangeBackgroundShown: false,\r\n        isBoardAnalysisShown: false,\r\n        isDeleteBoardShown: false,\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    toggleAboutBoard = () => {\r\n        this.setState({ isAboutBoardShown: !this.state.isAboutBoardShown })\r\n    }\r\n    toggleChangeBackground = () => {\r\n        this.setState({ isChangeBackgroundShown: !this.state.isChangeBackgroundShown })\r\n    }\r\n    toggleBoardAnalysis = () => {\r\n        this.setState({ isBoardAnalysisShown: !this.state.isBoardAnalysisShown })\r\n    }\r\n    toggleDeleteBoard = () => {\r\n        this.setState({ isDeleteBoardShown: !this.state.isDeleteBoardShown })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isAboutBoardShown } = this.state\r\n        const { isChangeBackgroundShown } = this.state\r\n        const { isBoardAnalysisShown } = this.state\r\n        const { isDeleteBoardShown } = this.state\r\n        const { selectedBoard, classname } = this.props\r\n        const open = (classname) ? 'open' : ''\r\n\r\n        return (\r\n            <section className={`board-side-menu ${open}`}>\r\n                <header className=\"menu-header\">\r\n                    <h1>Menu</h1>\r\n                    <button className=\"close-menu\" onClick={this.props.toggleSideMenu}>X</button>\r\n                </header>\r\n                {/* <div className=\"hr\"></div> */}\r\n\r\n                <div className=\"menu-container\">\r\n                    {(!isAboutBoardShown) ? <div className=\"menu-item\" onClick={this.toggleAboutBoard}> <p className=\"menu-about\"> About this board</p></div> : <AboutBoard toggleAboutBoard={this.toggleAboutBoard} board={selectedBoard} />}\r\n                    {(!isChangeBackgroundShown) ? <p className=\"menu-item menu-background\" onClick={this.toggleChangeBackground}> Change Background</p> : <ChangeBoardBackground toggleChangeBackground={this.toggleChangeBackground} />}\r\n                    {/* {(isBoardAnalysisShown) && <p className=\"board-analysis\" onClick={this.isBoardAnalysisShown}>Board Analysis</p>} */}\r\n                    {/* {(!isDashboardShown) ? <p className=\"menu-dashboard menu-item\" onClick={this.toggleDashboard}>Board Analysis</p> : <Dashboard toggleDashboard={this.toggleDashboard} />} */}\r\n                    {/* {(!isDeleteBoardShown) ? <p className=\"delete-board\" onClick={this.toggleDeleteBoard}> Delete Board</p> : <RemoveBoard toggleDeleteBoard={this.toggleDeleteBoard} board={selectedBoard} />} */}\r\n                    <hr />\r\n                    {selectedBoard.activities && <ActivityBoard activities={selectedBoard.activities} />}\r\n                </div>\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const BoardSideMenu = connect(mapStateToProps, mapDispatchToProps)(_BoardSideMenu)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { socketService } from '../services/socketService'\r\nimport { filterByCardText } from '../../store/actions/boardActions.js'\r\n\r\n// TODO TO FIX AFTER BACKEND\r\nclass _BoardFilter extends Component {\r\n    state = {\r\n        filterBy: {\r\n            title: ''\r\n        },\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const callback = () => {\r\n            this.props.filterByCardText(this.props.selectedBoard._id, this.state.filterBy);\r\n        };\r\n\r\n        const filterBy = { ...this.state.filterBy }\r\n        filterBy[ev.target.name] = ev.target.value;\r\n\r\n        this.setState({ filterBy }, callback);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <input type=\"text\" name=\"title\"\r\n                value={this.state.filterBy.title}\r\n                // placeholder=\"Search in development\"\r\n                autoComplete=\"off\" placeholder ='Find cards by name...'\r\n                onChange={this.handleChange} className=\"header-filter\" />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n       \r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    filterByCardText\r\n}\r\n\r\nexport const BoardFilter = connect(mapStateToProps, mapDispatchToProps)(_BoardFilter)","import { Link } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardFilter } from './board/BoardFilter'\r\n\r\n\r\nclass _AppHeader extends Component {\r\n\r\n    state = {\r\n        userImgStyle: {\r\n            backgroundImage: \"url(https://res.cloudinary.com/ddgevj2yp/image/upload/v1610989052/avatar-1_kbr5un.jpg\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.loggedInUser) return\r\n        const userImgUrl = this.props.loggedInUser.imgUrl\r\n        let userImgStyle = {\r\n            backgroundImage: `url(${userImgUrl})`\r\n        }\r\n        this.setState({ userImgStyle })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { selectedBoard, toggleSideMenu, toggleDashboard } = this.props\r\n        return (\r\n            <div className=\"main-header\">\r\n                <header className=\"app-header flex space-between align-center\">\r\n                    <nav>\r\n                        <Link to=\"/\" className=\"header-home\"></Link>\r\n                        <Link to=\"/board\" className=\"header-board\"> Boards </Link>\r\n                        <span className=\" normal-media\">\r\n                            <label>\r\n                                {/* <input className=\"header-filter\"></input> */}\r\n                                <BoardFilter />\r\n                            </label>\r\n                        </span>\r\n                    </nav>\r\n                    <h3 className=\"header-logo\">TASX</h3>\r\n\r\n                    <nav className=\"navbar-links flex space-between align-center\">\r\n                        <button className=\"header-about-us normal-media\"> About Us</button>\r\n                        <span className=\"user-img\" style={this.state.userImgStyle}></span>\r\n                    </nav>\r\n                    {/* <button className=\"user-avatar\">HS</button> */}\r\n                </header>\r\n                <header className=\"narrow-media app-header flex space-between align-center\">\r\n                    <span>\r\n                        <label>\r\n                            {/* <input className=\"header-filter\"></input> */}\r\n                            <BoardFilter />\r\n                        </label>\r\n                    </span>\r\n                    <button className=\"header-about-us\"> About Us</button>\r\n\r\n                </header>\r\n                <header className=\"app-header board-header flex space-between align-center\">\r\n                    <nav>\r\n                        <h5>{selectedBoard.title}</h5>\r\n                    </nav>\r\n\r\n                    <nav className=\"navbar-links  \">\r\n                        <button className=\"header-invite\" onClick={toggleDashboard}>Statistics</button>\r\n                        <button className=\"header-show-menu\" onClick={toggleSideMenu}> Show Menu</button>\r\n\r\n                    </nav>\r\n                    {/* <button className=\"user-avatar\">HS</button> */}\r\n\r\n                </header>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GroupList } from '../cmps/group/GroupList'\r\nimport { BoardSideMenu } from '../cmps/board/BoardSideMenu'\r\nimport { socketService } from '../services/socketService'\r\nimport { loadBoard, updateBoard, updateBoardAfterSocket } from '../store/actions/boardActions.js'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\nimport { Dashboard } from '../cmps/dashboard/Dashboard'\r\n\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        board: {},\r\n        isBoardMenuShown: false,\r\n        isDashboardShown: false,\r\n        filterBy: {\r\n            title: ''\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const boardId = this.props.match.params.id\r\n        socketService.setup()\r\n        await this.props.loadBoard(boardId)\r\n        socketService.emit('join board', boardId)\r\n        socketService.on('update board', this.onChangeBoard)\r\n\r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('update board', this.onChangeBoard)\r\n        socketService.terminate()\r\n\r\n    }\r\n\r\n\r\n\r\n    onDragEnd = (result) => {\r\n        // console.log('on drag result', result)\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return\r\n        }\r\n        if (type === 'group') {\r\n            this.onDragGroups(source.index, destination.index)\r\n        }\r\n        if (type === 'card') {\r\n            this.onDragCards(destination, source, draggableId)\r\n        }\r\n    }\r\n\r\n    onChangeBoard = async (board) => {\r\n        // console.log('on change board', board)\r\n        await this.props.updateBoardAfterSocket(board)\r\n    }\r\n\r\n    // per react beautiful dnd after performing optimistic update to let server know that a reorder has occurred\r\n    onDragGroups = async (startIndex, endIndex) => {\r\n        // console.log('I am in groups')\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMove = boardToUpdate.groups.splice(startIndex, 1)\r\n        boardToUpdate.groups.splice(endIndex, 0, groupToMove[0])\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n    onDragCards = async (destination, source) => {\r\n        let boardToUpdate = this.props.selectedBoard\r\n        const groupToMoveFromIdx = boardToUpdate.groups.findIndex(group => group.id === source.droppableId)\r\n        const groupToMoveToIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\r\n        const cardToMove = boardToUpdate.groups[groupToMoveFromIdx].cards.splice(source.index, 1)\r\n        boardToUpdate.groups[groupToMoveToIdx].cards.splice(destination.index, 0, cardToMove[0])\r\n        // console.log('i am in this on drag cards')\r\n        await this.props.updateBoard(this.props.selectedBoard)\r\n\r\n    }\r\n\r\n\r\n\r\n    toggleSideMenu = () => {\r\n        this.setState({ isBoardMenuShown: !this.state.isBoardMenuShown })\r\n    }\r\n    toggleDashboard = () => {\r\n        this.setState({ isDashboardShown: !this.state.isDashboardShown })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { selectedBoard } = this.props\r\n        const { isBoardMenuShown, isDashboardShown } = this.state\r\n\r\n        if (!selectedBoard) return <div>Loading...</div>\r\n        // console.log('BBB', selectedBoard.style.bgurl)\r\n        const style = {\r\n            boardStyle: { ...selectedBoard.style }\r\n        }\r\n        return (\r\n            <section className=\"board-wraper\"\r\n                style={{\r\n                    backgroundImage: \"url(\" + `${style.boardStyle.bgurl}` + \")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\"\r\n                }}>\r\n                <AppHeader toggleSideMenu={this.toggleSideMenu} toggleDashboard={this.toggleDashboard} />\r\n                {/* <BoardHeader board={selectedBoard} toggleSideMenu={this.toggleSideMenu} /> */}\r\n                {/* <div className=\"board-title\"> {selectedBoard.title}</div> */}\r\n                <nav>\r\n                    {/* <BoardFilter /> */}\r\n                    {/* <button onClick={this.toggleSideMenu}>Side Menu In Development</button> */}\r\n                </nav>\r\n                <BoardSideMenu classname={isBoardMenuShown} toggleSideMenu={this.toggleSideMenu} />\r\n                {selectedBoard.groups && <GroupList groups={selectedBoard.groups} boardId={selectedBoard._id} onDragEnd={this.onDragEnd} />}\r\n                {(isDashboardShown) && <Dashboard toggleDashboard={this.toggleDashboard} />}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedBoard: state.boardModule.selectedBoard,\r\n        filterBy: state.boardModule.filterBy,\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    updateBoardAfterSocket,\r\n\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\r\n","import { Link } from 'react-router-dom'\r\n\r\n\r\nexport function BoardPreview(props) {\r\n    const { board } = props\r\n    const style = { boardStyle: { ...board.style } }\r\n\r\n    return (\r\n        <li className=\"board-preview\"\r\n            style={{ backgroundImage: `url(${style.boardStyle.bgurl})` }}>\r\n            <Link to={`/board/${board._id}`}>\r\n                <p>{board.title}</p>\r\n            </Link>\r\n        </li>\r\n    )\r\n}","import { BoardPreview } from './BoardPreview.jsx'\r\n\r\nexport function BoardList(props) {\r\n    const boardsForDisplay = props.boards.slice(0, 6)\r\n\r\n    return (\r\n        <ul className=\"board-list inline-block\">\r\n            { boardsForDisplay.map(board =>\r\n                <BoardPreview board={board} key={board._id} className=\"board\" />\r\n            )}\r\n            {/* <li onClick={props.toggleNewBoard} className=\"add-board-btn\">Add board</li> */}\r\n        </ul>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createBoard } from '../../store/actions/boardActions.js'\r\n\r\nexport class _AddBoard extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        bgurl: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        const field = ev.target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onChooseBackground = (bgUrl) => {\r\n        const callback = () => {\r\n            this.onSubmit();\r\n        };\r\n        this.setState({ bgurl: bgUrl }, callback)\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        // ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const board = await this.props.createBoard(this.state.title, this.state.bgurl)\r\n        this.props.onLoadNewBoard(board._id)\r\n    }\r\n\r\n    onCancelAdd = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.toggleNewBoard()\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const backgroundImages = [\r\n            {\r\n                id: 'bg101',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2020/04/11/18/24/star-5031540_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg102',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/11/29/08/00/abstract-1868269_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg103',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2019/03/23/20/54/bamboo-4076262_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg104',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/21/13/00/rose-165819_1280.jpg\"\r\n\r\n            },\r\n            {\r\n                id: 'bg105',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg106',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/05/11/11/15/workplace-2303851_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg107',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2016/02/19/11/33/backround-1209772_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg108',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2017/08/15/15/37/pen-2644392_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg109',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/01/11/21/27/laptop-3076957_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg110',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2018/05/31/13/13/rain-3443977_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg111',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2014/04/05/11/38/bokeh-316425_1280.jpg\"\r\n            },\r\n            {\r\n                id: 'bg112',\r\n                bgurl: \"https://cdn.pixabay.com/photo/2013/07/25/13/01/stones-167089_1280.jpg\"\r\n            }\r\n\r\n        ]\r\n        return (\r\n            <div className=\"screen\" onClick={this.onCancelAdd}>\r\n                <div className=\"add-board\" onSubmit={this.onSubmit} onClick={this.stopPropagation}>\r\n                    <input placeholder=\"Enter a title for your new board...\" type=\"text\" onChange={this.handleChange} value={this.state.title} name=\"title\" autoComplete=\"off\" required />\r\n                    <section className=\"add-board-backgrounds\">\r\n                        <h3>Enter a title, Choose a background - and get started!</h3>\r\n                        {backgroundImages.map(background => {\r\n                            return (\r\n                                <div className=\"backgrounds-tumbs\" key={background.id}\r\n                                    style={{ backgroundImage: `url(${background.bgurl})` }}\r\n                                    onClick={() => this.onChooseBackground(background.bgurl)}>\r\n                                    <div className=\"plus\">+</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </section>\r\n                    {/* <button className=\"save-btn\">+ Add Board</button>\r\n                    <button className=\"cancel-btn\" onClick={this.onCancelAdd}>X Cancel</button> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    createBoard\r\n\r\n};\r\n\r\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardList } from '../cmps/board/BoardList'\r\nimport { AddBoard } from '../cmps/board/AddBoard'\r\nimport { loadBoards } from '../store/actions/boardActions.js'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\n// import Button from '@material-ui/core/Button';\r\n// import Icon from '@material-ui/core/Icon';\r\n\r\n\r\n// import { socketService } from '../services/socketService'\r\n\r\nclass _Boards extends Component {\r\n    state = {\r\n        isNewBoard: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards({ userId: '6004748cf9fd65ff47dc81e4' })\r\n    }\r\n\r\n    toggleNewBoard = () => {\r\n        // console.log('I am in new board')\r\n        this.setState({ isNewBoard: !this.state.isNewBoard })\r\n    }\r\n\r\n\r\n\r\n    onLoadNewBoard = (boardId) => {\r\n        this.toggleNewBoard()\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <HomeHeader loggedInUser={this.props.loggedInUser} />\r\n\r\n                <div className=\"boards\">\r\n                    {/* <div className=\"board-get-started-container\"> */}\r\n                    <h1>TASX</h1>\r\n                    <h2>Get on Board</h2>\r\n                    <hr/>\r\n\r\n                    <img className=\"boards-image\" src=\"https://res.cloudinary.com/ddgevj2yp/image/upload/v1611582232/tasx2_rjorq4.png\" alt=\"\" />\r\n\r\n                    {/* <section>\r\n                        <h2>templates boards</h2>\r\n                    </section> */}\r\n                    <hr/>\r\n                    <section>\r\n                        <h3>Yours boards</h3>\r\n                        <div className=\"your-boards\">\r\n                            <BoardList boards={this.props.boards} toggleNewBoard={this.toggleNewBoard} />\r\n                            <button onClick={this.toggleNewBoard}> + Add board</button>\r\n                        </div>\r\n                    </section>\r\n                    {this.state.isNewBoard && <AddBoard toggleNewBoard={this.toggleNewBoard} onLoadNewBoard={this.onLoadNewBoard} />}\r\n                    {/* </div> */}\r\n                </div >\r\n\r\n                {/* <div className=\"user-boards-container\">\r\n          <BoardList boards={this.props.boards} />\r\n          \r\n        </div> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    // loadBoard,\r\n    //createBoard\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { HomeHeader } from '../cmps/HomeHeader'\r\n\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../store/actions/userActions'\r\n\r\nclass _LoginSignup extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    signupCred: {\r\n      username: '',\r\n      password: '',\r\n      fullname: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = this.state.loginCred\r\n    if (!username) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    const userCreds = { username, password }\r\n    try {\r\n      this.props.login(userCreds)\r\n      this.setState({ loginCred: { username: '', password: '' } })\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password, fullname } = this.state.signupCred\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' })\r\n    }\r\n    const signupCreds = { username, password, fullname }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"frm\" onSubmit={this.doSignup}>\r\n        <h2>Signup</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"fullname\"\r\n          value={this.state.signupCred.fullname}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Full name\"\r\n          autoComplete=\"fullname\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n          autoComplete=\"username\"\r\n        />\r\n        <br />\r\n        <button>Signup</button>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form className=\"frm\" onSubmit={this.doLogin}>\r\n        <h2>Login</h2>\r\n        <select\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n        >\r\n          <option value=\"\">Select User</option>\r\n          {this.props.users && this.props.users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n        </select>\r\n\r\n        {/* <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br /> */}\r\n        <button>Login</button>\r\n      </form>\r\n\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    return (\r\n\r\n      <div className=\"login\">\r\n        <HomeHeader />\r\n        <h1>\r\n          TASKX\r\n        </h1>\r\n\r\n        <p>{this.state.msg}</p>\r\n        {loggedInUser && (\r\n          <div>\r\n            <h3>\r\n              Welcome {loggedInUser.fullname}\r\n              <button onClick={this.props.logout}>Logout</button>\r\n            </h3>\r\n          </div>\r\n        )}\r\n        {!loggedInUser && loginSection}\r\n        {!loggedInUser && signupSection}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/* <hr /> */}\r\n        {/* <section className=\"admin\">\r\n          <details>\r\n            <summary>Admin</summary>\r\n            <button onClick={this.props.loadUsers}>Refresh Users</button>\r\n            {this.props.isLoading && 'Loading...'}\r\n            {this.props.users && <ul>\r\n\r\n              {this.props.users.map(user => (\r\n                <li key={user._id}>\r\n                  <pre>{JSON.stringify(user, null, 2)}</pre>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.removeUser(user._id)\r\n                    }}\r\n                  >\r\n                    Remove {user.username}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>}\r\n          </details>\r\n        </section> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    // isLoading: state.systemModule.isLoading\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)\r\n","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport { Home } from './pages/Home'\r\nimport { Board } from './pages/Board'\r\n// import { AppHeader } from './cmps/AppHeader'\r\n// import { AddBoard } from './cmps/board/AddBoard'\r\nimport { Boards } from './pages/Boards'\r\nimport { LoginSignup } from './pages/LoginSignup'\r\n// import { AppHeader } from './cmps/AppHeader'\r\n// import { CardEdit } from './pages/CardEdit'\r\n\r\n\r\n\r\n\r\nexport function App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {/* <AppHeader /> */}\r\n        <main className=\"main-app\">\r\n          <Switch>\r\n            {/* <Route path=\"/user/:id\" component={UserDetails} /> */}\r\n            {/* <Route path=\"/login\" component={LoginSignup} /> */}\r\n            {/* <Route path=\"/chat\" component={Chat} /> */}\r\n            {/* <Route path=\"/board/:id/card/:cardId\" component={CardEdit} /> */}\r\n            <Route path=\"/board/:id\" component={Board} />\r\n            <Route path=\"/board\" component={Boards} />\r\n            <Route path=\"/login\" component={LoginSignup} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n\r\n        </footer>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  boards: [],\r\n  selectedBoard: {},\r\n  filterBy: {}\r\n}\r\n\r\nexport function boardReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_BOARD':\r\n      return { ...state, selectedBoard: action.board }\r\n    case 'SET_FILTER':\r\n      return { ...state, filterBy: action.filterBy }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_SCORE':\r\n      return { ...state, loggedInUser: { ...state.loggedInUser, score: action.score } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { boardReducer } from './boardReducer'\r\nimport { userReducer } from './userReducer'\r\nimport { systemReducer } from './systemReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  systemModule: systemReducer,\r\n  boardModule: boardReducer,\r\n  userModule: userReducer\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './assets/styles/main.scss'\nimport { store } from './store/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}